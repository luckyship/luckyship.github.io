name: Hexo Deploy Automatically (with cache and yarn)

on:
  push:
    branches: [dev]
  workflow_dispatch:

  # 配置 GITHUB_TOKEN 的权限
permissions:
  actions: write # 赋予操作 Actions 缓存的写权限

jobs:
  deploy-blog:
    runs-on: ubuntu-latest

    steps:
      # - name: Restore Project Cache
      #   id: project-cache
      #   uses: actions/cache@v4
      #   with:
      #     path: luckyship.github.io
      #     key: hexo-project-cache-${{ runner.os }}-

      - name: Clone Project (if cache miss)
        run: |
          # 检查 luckyship.github.io 目录是否存在
          if [ ! -d "luckyship.github.io" ]; then
            git clone https://github.com/luckyship/luckyship.github.io.git
          else
            echo "Directory luckyship.github.io already exists, skipping clone."
          fi

      - name: pull Project ()
        run: |
          cd luckyship.github.io
          git checkout -- .
          git checkout dev
          git pull

      - name: update submodule
        run: |
          cd luckyship.github.io
          rm -rf themes
          git submodule update --init --recursive
          git submodule update --remote --merge

      # Node.js + Yarn
      - name: Setup Node.js and Yarn
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "yarn"
          cache-dependency-path: luckyship.github.io/yarn.lock

      # 安装依赖
      - name: Install Dependencies with Yarn
        run: |
          cd luckyship.github.io
          yarn install --frozen-lockfile

      # 部署
      - name: Deploy Hexo Blog
        env:
          SSH_KEY: ${{ secrets.GITEE_RSA_PRIVATE_KEY }}
        run: |
          cd luckyship.github.io
          export TZ='Asia/Shanghai' 

          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts

          git config --global user.name 'luckyship'
          git config --global user.email '304093931@qq.com'

          yarn deploy

      - name: Delete existing cache
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # 获取缓存 ID
          CACHE_ID=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/actions/caches?key_prefix=hexo-project-cache-${{ runner.os }}" | \
            jq -r '.actions_caches[0].id')

          # 删除缓存
          if [ "$CACHE_ID" != "null" ]; then
            curl -X DELETE -H "Authorization: Bearer $GITHUB_TOKEN" \
              "https://api.github.com/repos/${{ github.repository }}/actions/caches/$CACHE_ID"
          fi

      # - name: Save Project to Cache
      #   uses: actions/cache@v4
      #   with:
      #     path: luckyship.github.io
      #     key: hexo-project-cache-${{ runner.os }}-${{ github.run_id }}
      #     restore-keys: |
      #       hexo-project-cache-${{ runner.os }}-
