{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/lucky/source/baidu_verify_code-DKptWBbgP9.html","path":"baidu_verify_code-DKptWBbgP9.html","modified":0,"renderable":1},{"_id":"themes/lucky/source/main.cde658.css","path":"main.cde658.css","modified":0,"renderable":1},{"_id":"themes/lucky/source/main.cde658.js","path":"main.cde658.js","modified":0,"renderable":1},{"_id":"themes/lucky/source/mobile.35b535.js","path":"mobile.35b535.js","modified":0,"renderable":1},{"_id":"themes/lucky/source/slider.cf3a85.js","path":"slider.cf3a85.js","modified":0,"renderable":1},{"_id":"themes/lucky/source/fonts/default-skin.b257fa.svg","path":"fonts/default-skin.b257fa.svg","modified":0,"renderable":1},{"_id":"themes/lucky/source/fonts/fonteditor.3da1ef.woff","path":"fonts/fonteditor.3da1ef.woff","modified":0,"renderable":1},{"_id":"themes/lucky/source/fonts/fonteditor.3e0d4a.svg","path":"fonts/fonteditor.3e0d4a.svg","modified":0,"renderable":1},{"_id":"themes/lucky/source/fonts/fonteditor.86c132.eot","path":"fonts/fonteditor.86c132.eot","modified":0,"renderable":1},{"_id":"themes/lucky/source/fonts/fonteditor.bbc4b5.woff2","path":"fonts/fonteditor.bbc4b5.woff2","modified":0,"renderable":1},{"_id":"themes/lucky/source/fonts/fonteditor.fe4d8a.ttf","path":"fonts/fonteditor.fe4d8a.ttf","modified":0,"renderable":1},{"_id":"themes/lucky/source/fonts/tooltip.4004ff.svg","path":"fonts/tooltip.4004ff.svg","modified":0,"renderable":1},{"_id":"themes/lucky/source/fonts/tooltip.d04149.svg","path":"fonts/tooltip.d04149.svg","modified":0,"renderable":1},{"_id":"themes/lucky/source/gitment/APlayer.min.js","path":"gitment/APlayer.min.js","modified":0,"renderable":1},{"_id":"themes/lucky/source/lib/busuanzi.pure.js","path":"lib/busuanzi.pure.js","modified":0,"renderable":1},{"_id":"themes/lucky/source/lib/clickLove.js","path":"lib/clickLove.js","modified":0,"renderable":1},{"_id":"themes/lucky/source/lib/default.css","path":"lib/default.css","modified":0,"renderable":1},{"_id":"themes/lucky/source/lib/giteement.browser.js","path":"lib/giteement.browser.js","modified":0,"renderable":1},{"_id":"themes/lucky/source/lib/gitment.js","path":"lib/gitment.js","modified":0,"renderable":1},{"_id":"themes/lucky/source/lib/gitment.css","path":"lib/gitment.css","modified":0,"renderable":1},{"_id":"themes/lucky/source/lib/gitment.js.bak","path":"lib/gitment.js.bak","modified":0,"renderable":1},{"_id":"themes/lucky/source/lib/gitment.js.bak2","path":"lib/gitment.js.bak2","modified":0,"renderable":1},{"_id":"themes/lucky/source/lib/jquery-2.1.4.min.js","path":"lib/jquery-2.1.4.min.js","modified":0,"renderable":1},{"_id":"themes/lucky/source/lib/oauthcallback.browser.js","path":"lib/oauthcallback.browser.js","modified":0,"renderable":1},{"_id":"themes/lucky/source/lib/pace.min.js","path":"lib/pace.min.js","modified":0,"renderable":1},{"_id":"themes/lucky/source/lib/snow.js","path":"lib/snow.js","modified":0,"renderable":1},{"_id":"themes/lucky/source/img/biubiubiu.gif","path":"img/biubiubiu.gif","modified":0,"renderable":1},{"_id":"themes/lucky/source/img/alipay.jpg","path":"img/alipay.jpg","modified":0,"renderable":1},{"_id":"themes/lucky/source/img/default-skin.png","path":"img/default-skin.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/img/forkme.png","path":"img/forkme.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/img/gitee.svg","path":"img/gitee.svg","modified":0,"renderable":1},{"_id":"themes/lucky/source/img/head.jpg","path":"img/head.jpg","modified":0,"renderable":1},{"_id":"themes/lucky/source/img/preloader.gif","path":"img/preloader.gif","modified":0,"renderable":1},{"_id":"themes/lucky/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/img/weixin.png","path":"img/weixin.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/chitose/package-lock.json","path":"live2d_models/chitose/package-lock.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/chitose/package.json","path":"live2d_models/chitose/package.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/package-lock.json","path":"live2d_models/epsilon2_1/package-lock.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/package.json","path":"live2d_models/epsilon2_1/package.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/gf/package-lock.json","path":"live2d_models/gf/package-lock.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/gf/package.json","path":"live2d_models/gf/package.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/package-lock.json","path":"live2d_models/haru/package-lock.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/package.json","path":"live2d_models/haru/package.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haruto/package-lock.json","path":"live2d_models/haruto/package-lock.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haruto/package.json","path":"live2d_models/haruto/package.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/hibiki/package-lock.json","path":"live2d_models/hibiki/package-lock.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/hibiki/package.json","path":"live2d_models/hibiki/package.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/hijiki/package-lock.json","path":"live2d_models/hijiki/package-lock.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/hijiki/package.json","path":"live2d_models/hijiki/package.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/izumi/package-lock.json","path":"live2d_models/izumi/package-lock.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/izumi/package.json","path":"live2d_models/izumi/package.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/koharu/package-lock.json","path":"live2d_models/koharu/package-lock.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/koharu/package.json","path":"live2d_models/koharu/package.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/miku/package-lock.json","path":"live2d_models/miku/package-lock.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/miku/package.json","path":"live2d_models/miku/package.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/ni-j/package-lock.json","path":"live2d_models/ni-j/package-lock.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/ni-j/package.json","path":"live2d_models/ni-j/package.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nico/package-lock.json","path":"live2d_models/nico/package-lock.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nico/package.json","path":"live2d_models/nico/package.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nietzsche/package-lock.json","path":"live2d_models/nietzsche/package-lock.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nietzsche/package.json","path":"live2d_models/nietzsche/package.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nipsilon/package-lock.json","path":"live2d_models/nipsilon/package-lock.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nipsilon/package.json","path":"live2d_models/nipsilon/package.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nito/package-lock.json","path":"live2d_models/nito/package-lock.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nito/package.json","path":"live2d_models/nito/package.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/shizuku/package-lock.json","path":"live2d_models/shizuku/package-lock.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/shizuku/package.json","path":"live2d_models/shizuku/package.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tororo/package-lock.json","path":"live2d_models/tororo/package-lock.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tororo/package.json","path":"live2d_models/tororo/package.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tsumiki/package-lock.json","path":"live2d_models/tsumiki/package-lock.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tsumiki/package.json","path":"live2d_models/tsumiki/package.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/unitychan/package-lock.json","path":"live2d_models/unitychan/package-lock.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/unitychan/package.json","path":"live2d_models/unitychan/package.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/wanko/package-lock.json","path":"live2d_models/wanko/package-lock.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/wanko/package.json","path":"live2d_models/wanko/package.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/z16/package-lock.json","path":"live2d_models/z16/package-lock.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/z16/package.json","path":"live2d_models/z16/package.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/plugins/TweenMax/TweenMax.min.js","path":"plugins/TweenMax/TweenMax.min.js","modified":0,"renderable":1},{"_id":"themes/lucky/source/plugins/TweenMax/HoverImg.js","path":"plugins/TweenMax/HoverImg.js","modified":0,"renderable":1},{"_id":"themes/lucky/source/plugins/TweenMax/charming.min.js","path":"plugins/TweenMax/charming.min.js","modified":0,"renderable":1},{"_id":"themes/lucky/source/plugins/activate-power-mode/activate-power-mode.js","path":"plugins/activate-power-mode/activate-power-mode.js","modified":0,"renderable":1},{"_id":"themes/lucky/source/plugins/live2d-widget.js/L2Dwidget.0.min.js","path":"plugins/live2d-widget.js/L2Dwidget.0.min.js","modified":0,"renderable":1},{"_id":"themes/lucky/source/plugins/live2d-widget.js/L2Dwidget.0.min.js.map","path":"plugins/live2d-widget.js/L2Dwidget.0.min.js.map","modified":0,"renderable":1},{"_id":"themes/lucky/source/plugins/live2d-widget.js/L2Dwidget.common.js","path":"plugins/live2d-widget.js/L2Dwidget.common.js","modified":0,"renderable":1},{"_id":"themes/lucky/source/plugins/live2d-widget.js/L2Dwidget.common.js.map","path":"plugins/live2d-widget.js/L2Dwidget.common.js.map","modified":0,"renderable":1},{"_id":"themes/lucky/source/plugins/live2d-widget.js/L2Dwidget.min.js","path":"plugins/live2d-widget.js/L2Dwidget.min.js","modified":0,"renderable":1},{"_id":"themes/lucky/source/plugins/live2d-widget.js/L2Dwidget.min.js.map","path":"plugins/live2d-widget.js/L2Dwidget.min.js.map","modified":0,"renderable":1},{"_id":"themes/lucky/source/plugins/live2d-widget.js/manifest.json","path":"plugins/live2d-widget.js/manifest.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/plugins/ribbon.js/ribbon.min.js","path":"plugins/ribbon.js/ribbon.min.js","modified":0,"renderable":1},{"_id":"themes/lucky/source/plugins/ribbon.js/ribbon.js","path":"plugins/ribbon.js/ribbon.js","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/chitose/assets/chitose.model.json","path":"live2d_models/chitose/assets/chitose.model.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/chitose/assets/chitose.physics.json","path":"live2d_models/chitose/assets/chitose.physics.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/chitose/assets/chitose.pose.json","path":"live2d_models/chitose/assets/chitose.pose.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/Epsilon2.1.model.json","path":"live2d_models/epsilon2_1/assets/Epsilon2.1.model.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/Epsilon2.1.physics.json","path":"live2d_models/epsilon2_1/assets/Epsilon2.1.physics.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/gf/assets/Gantzert_Felixander.model.json","path":"live2d_models/gf/assets/Gantzert_Felixander.model.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haruto/assets/haruto.model.json","path":"live2d_models/haruto/assets/haruto.model.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haruto/assets/haruto.physics.json","path":"live2d_models/haruto/assets/haruto.physics.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/hibiki/assets/hibiki.model.json","path":"live2d_models/hibiki/assets/hibiki.model.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/hibiki/assets/hibiki.physics.json","path":"live2d_models/hibiki/assets/hibiki.physics.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/hijiki/assets/hijiki.model.json","path":"live2d_models/hijiki/assets/hijiki.model.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/hijiki/assets/hijiki.pose.json","path":"live2d_models/hijiki/assets/hijiki.pose.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/izumi/assets/izumi.model.json","path":"live2d_models/izumi/assets/izumi.model.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/izumi/assets/izumi.physics.json","path":"live2d_models/izumi/assets/izumi.physics.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/koharu/assets/koharu.model.json","path":"live2d_models/koharu/assets/koharu.model.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/koharu/assets/koharu.physics.json","path":"live2d_models/koharu/assets/koharu.physics.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/miku/assets/miku.model.json","path":"live2d_models/miku/assets/miku.model.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/miku/assets/miku.physics.json","path":"live2d_models/miku/assets/miku.physics.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/ni-j.model.json","path":"live2d_models/ni-j/assets/ni-j.model.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/ni-j.physics.json","path":"live2d_models/ni-j/assets/ni-j.physics.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/ni-j.pose.json","path":"live2d_models/ni-j/assets/ni-j.pose.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nico/assets/nico.model.json","path":"live2d_models/nico/assets/nico.model.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nico/assets/nico.physics.json","path":"live2d_models/nico/assets/nico.physics.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nico/assets/nico.pose.json","path":"live2d_models/nico/assets/nico.pose.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/nietzsche.physics.json","path":"live2d_models/nietzsche/assets/nietzsche.physics.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/nietzche.model.json","path":"live2d_models/nietzsche/assets/nietzche.model.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/nietzsche.pose.json","path":"live2d_models/nietzsche/assets/nietzsche.pose.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/nipsilon.model.json","path":"live2d_models/nipsilon/assets/nipsilon.model.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/nipsilon.physics.json","path":"live2d_models/nipsilon/assets/nipsilon.physics.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/nipsilon.pose.json","path":"live2d_models/nipsilon/assets/nipsilon.pose.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nito/assets/nito.model.json","path":"live2d_models/nito/assets/nito.model.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nito/assets/nito.physics.json","path":"live2d_models/nito/assets/nito.physics.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nito/assets/nito.pose.json","path":"live2d_models/nito/assets/nito.pose.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/shizuku.model.json","path":"live2d_models/shizuku/assets/shizuku.model.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/shizuku.physics.json","path":"live2d_models/shizuku/assets/shizuku.physics.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/shizuku.pose.json","path":"live2d_models/shizuku/assets/shizuku.pose.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tororo/assets/tororo.model.json","path":"live2d_models/tororo/assets/tororo.model.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tororo/assets/tororo.pose.json","path":"live2d_models/tororo/assets/tororo.pose.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/tsumiki.model.json","path":"live2d_models/tsumiki/assets/tsumiki.model.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/tsumiki.physics.json","path":"live2d_models/tsumiki/assets/tsumiki.physics.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/unitychan/assets/unitychan.model.json","path":"live2d_models/unitychan/assets/unitychan.model.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/unitychan/assets/unitychan.physics.json","path":"live2d_models/unitychan/assets/unitychan.physics.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/wanko/assets/wanko.model.json","path":"live2d_models/wanko/assets/wanko.model.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/z16/assets/z16.model.json","path":"live2d_models/z16/assets/z16.model.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/z16/assets/z16.physics.json","path":"live2d_models/z16/assets/z16.physics.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/plugins/ribbon.js/demo/index.html","path":"plugins/ribbon.js/demo/index.html","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/chitose/assets/exp/f01.exp.json","path":"live2d_models/chitose/assets/exp/f01.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/chitose/assets/exp/f02.exp.json","path":"live2d_models/chitose/assets/exp/f02.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/chitose/assets/exp/f03.exp.json","path":"live2d_models/chitose/assets/exp/f03.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/chitose/assets/exp/f04.exp.json","path":"live2d_models/chitose/assets/exp/f04.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/chitose/assets/exp/f05.exp.json","path":"live2d_models/chitose/assets/exp/f05.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/chitose/assets/exp/f06.exp.json","path":"live2d_models/chitose/assets/exp/f06.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/chitose/assets/exp/f07.exp.json","path":"live2d_models/chitose/assets/exp/f07.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/chitose/assets/moc/chitose.moc","path":"live2d_models/chitose/assets/moc/chitose.moc","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/chitose/assets/mtn/chitose_handwave.mtn","path":"live2d_models/chitose/assets/mtn/chitose_handwave.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/chitose/assets/mtn/chitose_idle.mtn","path":"live2d_models/chitose/assets/mtn/chitose_idle.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/chitose/assets/mtn/chitose_kime01.mtn","path":"live2d_models/chitose/assets/mtn/chitose_kime01.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/exp/f01.exp.json","path":"live2d_models/epsilon2_1/assets/exp/f01.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/chitose/assets/mtn/chitose_kime02.mtn","path":"live2d_models/chitose/assets/mtn/chitose_kime02.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/exp/f02.exp.json","path":"live2d_models/epsilon2_1/assets/exp/f02.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/exp/f03.exp.json","path":"live2d_models/epsilon2_1/assets/exp/f03.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/exp/f04.exp.json","path":"live2d_models/epsilon2_1/assets/exp/f04.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/exp/f05.exp.json","path":"live2d_models/epsilon2_1/assets/exp/f05.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/exp/f06.exp.json","path":"live2d_models/epsilon2_1/assets/exp/f06.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/exp/f07.exp.json","path":"live2d_models/epsilon2_1/assets/exp/f07.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/exp/f08.exp.json","path":"live2d_models/epsilon2_1/assets/exp/f08.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/moc/Epsilon2.1.moc","path":"live2d_models/epsilon2_1/assets/moc/Epsilon2.1.moc","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_idle_01.mtn","path":"live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_idle_01.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_01.mtn","path":"live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_01.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_02.mtn","path":"live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_02.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_03.mtn","path":"live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_03.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_04.mtn","path":"live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_04.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_05.mtn","path":"live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_05.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_07.mtn","path":"live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_07.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_06.mtn","path":"live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_06.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_08.mtn","path":"live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_08.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_sp_01.mtn","path":"live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_sp_01.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_sp_03.mtn","path":"live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_sp_03.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_sp_02.mtn","path":"live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_sp_02.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_sp_04.mtn","path":"live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_sp_04.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_sp_05.mtn","path":"live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_sp_05.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_shake_01.mtn","path":"live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_shake_01.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/gf/assets/moc/Gantzert_Felixander.moc","path":"live2d_models/gf/assets/moc/Gantzert_Felixander.moc","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/gf/assets/mtn/A_00_idle.mtn","path":"live2d_models/gf/assets/mtn/A_00_idle.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/gf/assets/mtn/A_01.mtn","path":"live2d_models/gf/assets/mtn/A_01.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/gf/assets/mtn/A_02.mtn","path":"live2d_models/gf/assets/mtn/A_02.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/gf/assets/mtn/A_03.mtn","path":"live2d_models/gf/assets/mtn/A_03.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/gf/assets/mtn/A_05.mtn","path":"live2d_models/gf/assets/mtn/A_05.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/gf/assets/mtn/A_04.mtn","path":"live2d_models/gf/assets/mtn/A_04.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/haru01.model.json","path":"live2d_models/haru/01/assets/haru01.model.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/haru01.physics.json","path":"live2d_models/haru/01/assets/haru01.physics.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/haru01.pose.json","path":"live2d_models/haru/01/assets/haru01.pose.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/haru02.model.json","path":"live2d_models/haru/02/assets/haru02.model.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/haru02.physics.json","path":"live2d_models/haru/02/assets/haru02.physics.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/haru02.pose.json","path":"live2d_models/haru/02/assets/haru02.pose.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haruto/assets/moc/haruto.moc","path":"live2d_models/haruto/assets/moc/haruto.moc","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haruto/assets/mtn/01.mtn","path":"live2d_models/haruto/assets/mtn/01.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haruto/assets/mtn/02.mtn","path":"live2d_models/haruto/assets/mtn/02.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haruto/assets/mtn/03.mtn","path":"live2d_models/haruto/assets/mtn/03.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haruto/assets/mtn/04.mtn","path":"live2d_models/haruto/assets/mtn/04.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haruto/assets/mtn/05.mtn","path":"live2d_models/haruto/assets/mtn/05.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haruto/assets/mtn/06.mtn","path":"live2d_models/haruto/assets/mtn/06.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haruto/assets/mtn/07.mtn","path":"live2d_models/haruto/assets/mtn/07.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haruto/assets/mtn/08.mtn","path":"live2d_models/haruto/assets/mtn/08.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haruto/assets/mtn/09.mtn","path":"live2d_models/haruto/assets/mtn/09.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haruto/assets/mtn/idle_02.mtn","path":"live2d_models/haruto/assets/mtn/idle_02.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/hibiki/assets/exp/f01.exp.json","path":"live2d_models/hibiki/assets/exp/f01.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/hibiki/assets/exp/f02.exp.json","path":"live2d_models/hibiki/assets/exp/f02.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/hibiki/assets/exp/f03.exp.json","path":"live2d_models/hibiki/assets/exp/f03.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/hibiki/assets/exp/f04.exp.json","path":"live2d_models/hibiki/assets/exp/f04.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/hibiki/assets/exp/f05.exp.json","path":"live2d_models/hibiki/assets/exp/f05.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/hibiki/assets/exp/f06.exp.json","path":"live2d_models/hibiki/assets/exp/f06.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/hibiki/assets/moc/hibiki.moc","path":"live2d_models/hibiki/assets/moc/hibiki.moc","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/hibiki/assets/mtn/hibiki_01.mtn","path":"live2d_models/hibiki/assets/mtn/hibiki_01.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/hibiki/assets/mtn/hibiki_02.mtn","path":"live2d_models/hibiki/assets/mtn/hibiki_02.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/hibiki/assets/mtn/hibiki_03.mtn","path":"live2d_models/hibiki/assets/mtn/hibiki_03.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/hibiki/assets/mtn/hibiki_04.mtn","path":"live2d_models/hibiki/assets/mtn/hibiki_04.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/hibiki/assets/mtn/hibiki_05.mtn","path":"live2d_models/hibiki/assets/mtn/hibiki_05.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/hibiki/assets/mtn/idle_01.mtn","path":"live2d_models/hibiki/assets/mtn/idle_01.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/hibiki/assets/mtn/idle_02.mtn","path":"live2d_models/hibiki/assets/mtn/idle_02.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/hibiki/assets/mtn/idle_03.mtn","path":"live2d_models/hibiki/assets/mtn/idle_03.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/hibiki/assets/mtn/idle_04.mtn","path":"live2d_models/hibiki/assets/mtn/idle_04.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/hibiki/assets/snd/hibiki_01.mp3","path":"live2d_models/hibiki/assets/snd/hibiki_01.mp3","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/hibiki/assets/snd/hibiki_02.mp3","path":"live2d_models/hibiki/assets/snd/hibiki_02.mp3","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/hibiki/assets/snd/hibiki_03.mp3","path":"live2d_models/hibiki/assets/snd/hibiki_03.mp3","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/hibiki/assets/snd/hibiki_04.mp3","path":"live2d_models/hibiki/assets/snd/hibiki_04.mp3","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/hibiki/assets/snd/hibiki_05.mp3","path":"live2d_models/hibiki/assets/snd/hibiki_05.mp3","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/hijiki/assets/moc/hijiki.moc","path":"live2d_models/hijiki/assets/moc/hijiki.moc","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/hijiki/assets/mtn/00_idle.mtn","path":"live2d_models/hijiki/assets/mtn/00_idle.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/hijiki/assets/mtn/01.mtn","path":"live2d_models/hijiki/assets/mtn/01.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/hijiki/assets/mtn/02.mtn","path":"live2d_models/hijiki/assets/mtn/02.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/hijiki/assets/mtn/03.mtn","path":"live2d_models/hijiki/assets/mtn/03.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/hijiki/assets/mtn/04.mtn","path":"live2d_models/hijiki/assets/mtn/04.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/hijiki/assets/mtn/05.mtn","path":"live2d_models/hijiki/assets/mtn/05.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/hijiki/assets/mtn/06.mtn","path":"live2d_models/hijiki/assets/mtn/06.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/hijiki/assets/mtn/07.mtn","path":"live2d_models/hijiki/assets/mtn/07.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/hijiki/assets/mtn/08.mtn","path":"live2d_models/hijiki/assets/mtn/08.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/izumi/assets/exp/f01.exp.json","path":"live2d_models/izumi/assets/exp/f01.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/izumi/assets/exp/f02.exp.json","path":"live2d_models/izumi/assets/exp/f02.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/izumi/assets/exp/f03.exp.json","path":"live2d_models/izumi/assets/exp/f03.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/izumi/assets/exp/f04.exp.json","path":"live2d_models/izumi/assets/exp/f04.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/izumi/assets/exp/f05.exp.json","path":"live2d_models/izumi/assets/exp/f05.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/izumi/assets/exp/f06.exp.json","path":"live2d_models/izumi/assets/exp/f06.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/izumi/assets/exp/f07.exp.json","path":"live2d_models/izumi/assets/exp/f07.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/izumi/assets/moc/izumi_illust.moc","path":"live2d_models/izumi/assets/moc/izumi_illust.moc","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/izumi/assets/mtn/idle_01.mtn","path":"live2d_models/izumi/assets/mtn/idle_01.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/izumi/assets/mtn/idle_02.mtn","path":"live2d_models/izumi/assets/mtn/idle_02.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/izumi/assets/mtn/idle_03.mtn","path":"live2d_models/izumi/assets/mtn/idle_03.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/izumi/assets/mtn/idle_04.mtn","path":"live2d_models/izumi/assets/mtn/idle_04.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/izumi/assets/mtn/izumi_01.mtn","path":"live2d_models/izumi/assets/mtn/izumi_01.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/izumi/assets/mtn/izumi_02.mtn","path":"live2d_models/izumi/assets/mtn/izumi_02.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/izumi/assets/mtn/izumi_03.mtn","path":"live2d_models/izumi/assets/mtn/izumi_03.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/izumi/assets/mtn/izumi_04.mtn","path":"live2d_models/izumi/assets/mtn/izumi_04.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/izumi/assets/mtn/izumi_05.mtn","path":"live2d_models/izumi/assets/mtn/izumi_05.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/izumi/assets/mtn/izumi_06.mtn","path":"live2d_models/izumi/assets/mtn/izumi_06.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/izumi/assets/mtn/izumi_07.mtn","path":"live2d_models/izumi/assets/mtn/izumi_07.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/izumi/assets/mtn/izumi_08.mtn","path":"live2d_models/izumi/assets/mtn/izumi_08.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/izumi/assets/mtn/izumi_09.mtn","path":"live2d_models/izumi/assets/mtn/izumi_09.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/izumi/assets/mtn/izumi_10.mtn","path":"live2d_models/izumi/assets/mtn/izumi_10.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/izumi/assets/snd/izumi_01.mp3","path":"live2d_models/izumi/assets/snd/izumi_01.mp3","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/izumi/assets/snd/izumi_02.mp3","path":"live2d_models/izumi/assets/snd/izumi_02.mp3","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/izumi/assets/snd/izumi_03.mp3","path":"live2d_models/izumi/assets/snd/izumi_03.mp3","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/izumi/assets/snd/izumi_04.mp3","path":"live2d_models/izumi/assets/snd/izumi_04.mp3","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/izumi/assets/snd/izumi_05.mp3","path":"live2d_models/izumi/assets/snd/izumi_05.mp3","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/izumi/assets/snd/izumi_06.mp3","path":"live2d_models/izumi/assets/snd/izumi_06.mp3","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/izumi/assets/snd/izumi_07.mp3","path":"live2d_models/izumi/assets/snd/izumi_07.mp3","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/izumi/assets/snd/izumi_08.mp3","path":"live2d_models/izumi/assets/snd/izumi_08.mp3","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/izumi/assets/snd/izumi_09.mp3","path":"live2d_models/izumi/assets/snd/izumi_09.mp3","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/izumi/assets/snd/izumi_10.mp3","path":"live2d_models/izumi/assets/snd/izumi_10.mp3","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/koharu/assets/moc/koharu.moc","path":"live2d_models/koharu/assets/moc/koharu.moc","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/koharu/assets/mtn/01.mtn","path":"live2d_models/koharu/assets/mtn/01.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/koharu/assets/mtn/02.mtn","path":"live2d_models/koharu/assets/mtn/02.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/koharu/assets/mtn/03.mtn","path":"live2d_models/koharu/assets/mtn/03.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/koharu/assets/mtn/04.mtn","path":"live2d_models/koharu/assets/mtn/04.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/koharu/assets/mtn/05.mtn","path":"live2d_models/koharu/assets/mtn/05.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/koharu/assets/mtn/07.mtn","path":"live2d_models/koharu/assets/mtn/07.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/koharu/assets/mtn/06.mtn","path":"live2d_models/koharu/assets/mtn/06.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/koharu/assets/mtn/08.mtn","path":"live2d_models/koharu/assets/mtn/08.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/koharu/assets/mtn/09.mtn","path":"live2d_models/koharu/assets/mtn/09.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/koharu/assets/mtn/idle.mtn","path":"live2d_models/koharu/assets/mtn/idle.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/miku/assets/moc/miku.moc","path":"live2d_models/miku/assets/moc/miku.moc","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/miku/assets/mtn/miku_idle_01.mtn","path":"live2d_models/miku/assets/mtn/miku_idle_01.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/miku/assets/mtn/miku_m_01.mtn","path":"live2d_models/miku/assets/mtn/miku_m_01.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/miku/assets/mtn/miku_m_03.mtn","path":"live2d_models/miku/assets/mtn/miku_m_03.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/miku/assets/mtn/miku_m_02.mtn","path":"live2d_models/miku/assets/mtn/miku_m_02.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/miku/assets/mtn/miku_m_04.mtn","path":"live2d_models/miku/assets/mtn/miku_m_04.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/miku/assets/mtn/miku_m_05.mtn","path":"live2d_models/miku/assets/mtn/miku_m_05.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/miku/assets/mtn/miku_m_06.mtn","path":"live2d_models/miku/assets/mtn/miku_m_06.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/miku/assets/mtn/miku_shake_01.mtn","path":"live2d_models/miku/assets/mtn/miku_shake_01.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/moc/ni-j.moc","path":"live2d_models/ni-j/assets/moc/ni-j.moc","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/mtn/00_idle.mtn","path":"live2d_models/ni-j/assets/mtn/00_idle.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/mtn/01_happy.mtn","path":"live2d_models/ni-j/assets/mtn/01_happy.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/mtn/04_surprise.mtn","path":"live2d_models/ni-j/assets/mtn/04_surprise.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/mtn/02_angry.mtn","path":"live2d_models/ni-j/assets/mtn/02_angry.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/mtn/03_fear.mtn","path":"live2d_models/ni-j/assets/mtn/03_fear.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/mtn/05_fun.mtn","path":"live2d_models/ni-j/assets/mtn/05_fun.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/mtn/06_love.mtn","path":"live2d_models/ni-j/assets/mtn/06_love.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/mtn/07_bye.mtn","path":"live2d_models/ni-j/assets/mtn/07_bye.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/mtn/08_sad.mtn","path":"live2d_models/ni-j/assets/mtn/08_sad.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/mtn/09_yawn.mtn","path":"live2d_models/ni-j/assets/mtn/09_yawn.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/mtn/10_yeah.mtn","path":"live2d_models/ni-j/assets/mtn/10_yeah.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/mtn/11_muscle.mtn","path":"live2d_models/ni-j/assets/mtn/11_muscle.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/mtn/12_stagger.mtn","path":"live2d_models/ni-j/assets/mtn/12_stagger.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/mtn/13_cry.mtn","path":"live2d_models/ni-j/assets/mtn/13_cry.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/mtn/14_ sigh.mtn","path":"live2d_models/ni-j/assets/mtn/14_ sigh.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/mtn/15_joy.mtn","path":"live2d_models/ni-j/assets/mtn/15_joy.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/mtn/16_menace.mtn","path":"live2d_models/ni-j/assets/mtn/16_menace.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/mtn/17_yes.mtn","path":"live2d_models/ni-j/assets/mtn/17_yes.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/mtn/18_no.mtn","path":"live2d_models/ni-j/assets/mtn/18_no.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/mtn/20_sleep.mtn","path":"live2d_models/ni-j/assets/mtn/20_sleep.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/mtn/19_walk.mtn","path":"live2d_models/ni-j/assets/mtn/19_walk.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nico/assets/moc/nico.moc","path":"live2d_models/nico/assets/moc/nico.moc","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nico/assets/mtn/00_idle.mtn","path":"live2d_models/nico/assets/mtn/00_idle.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nico/assets/mtn/01_happy.mtn","path":"live2d_models/nico/assets/mtn/01_happy.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nico/assets/mtn/02_angry.mtn","path":"live2d_models/nico/assets/mtn/02_angry.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nico/assets/mtn/03_fear.mtn","path":"live2d_models/nico/assets/mtn/03_fear.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nico/assets/mtn/04_surprise.mtn","path":"live2d_models/nico/assets/mtn/04_surprise.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nico/assets/mtn/06_love.mtn","path":"live2d_models/nico/assets/mtn/06_love.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nico/assets/mtn/05_fun.mtn","path":"live2d_models/nico/assets/mtn/05_fun.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nico/assets/mtn/07_bye.mtn","path":"live2d_models/nico/assets/mtn/07_bye.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nico/assets/mtn/08_sad.mtn","path":"live2d_models/nico/assets/mtn/08_sad.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nico/assets/mtn/09_yawn.mtn","path":"live2d_models/nico/assets/mtn/09_yawn.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nico/assets/mtn/10_yeah.mtn","path":"live2d_models/nico/assets/mtn/10_yeah.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nico/assets/mtn/11_muscle.mtn","path":"live2d_models/nico/assets/mtn/11_muscle.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nico/assets/mtn/12_stagger.mtn","path":"live2d_models/nico/assets/mtn/12_stagger.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nico/assets/mtn/13_cry.mtn","path":"live2d_models/nico/assets/mtn/13_cry.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nico/assets/mtn/14_ sigh.mtn","path":"live2d_models/nico/assets/mtn/14_ sigh.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nico/assets/mtn/15_joy.mtn","path":"live2d_models/nico/assets/mtn/15_joy.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nico/assets/mtn/16_menace.mtn","path":"live2d_models/nico/assets/mtn/16_menace.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nico/assets/mtn/17_yes.mtn","path":"live2d_models/nico/assets/mtn/17_yes.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nico/assets/mtn/18_no.mtn","path":"live2d_models/nico/assets/mtn/18_no.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nico/assets/mtn/19_walk.mtn","path":"live2d_models/nico/assets/mtn/19_walk.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nico/assets/mtn/20_sleep.mtn","path":"live2d_models/nico/assets/mtn/20_sleep.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/moc/nietzsche.moc","path":"live2d_models/nietzsche/assets/moc/nietzsche.moc","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/mtn/00_idle.mtn","path":"live2d_models/nietzsche/assets/mtn/00_idle.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/mtn/01_happy.mtn","path":"live2d_models/nietzsche/assets/mtn/01_happy.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/mtn/02_angry.mtn","path":"live2d_models/nietzsche/assets/mtn/02_angry.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/mtn/03_fear.mtn","path":"live2d_models/nietzsche/assets/mtn/03_fear.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/mtn/04_surprise.mtn","path":"live2d_models/nietzsche/assets/mtn/04_surprise.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/mtn/05_fun.mtn","path":"live2d_models/nietzsche/assets/mtn/05_fun.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/mtn/06_love.mtn","path":"live2d_models/nietzsche/assets/mtn/06_love.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/mtn/07_bye.mtn","path":"live2d_models/nietzsche/assets/mtn/07_bye.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/mtn/08_sad.mtn","path":"live2d_models/nietzsche/assets/mtn/08_sad.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/mtn/09_yawn.mtn","path":"live2d_models/nietzsche/assets/mtn/09_yawn.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/mtn/10_yeah.mtn","path":"live2d_models/nietzsche/assets/mtn/10_yeah.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/mtn/11_muscle.mtn","path":"live2d_models/nietzsche/assets/mtn/11_muscle.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/mtn/12_stagger.mtn","path":"live2d_models/nietzsche/assets/mtn/12_stagger.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/mtn/13_cry.mtn","path":"live2d_models/nietzsche/assets/mtn/13_cry.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/mtn/14_ sigh.mtn","path":"live2d_models/nietzsche/assets/mtn/14_ sigh.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/mtn/15_joy.mtn","path":"live2d_models/nietzsche/assets/mtn/15_joy.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/mtn/16_menace.mtn","path":"live2d_models/nietzsche/assets/mtn/16_menace.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/mtn/17_yes.mtn","path":"live2d_models/nietzsche/assets/mtn/17_yes.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/mtn/18_no.mtn","path":"live2d_models/nietzsche/assets/mtn/18_no.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/mtn/19_walk.mtn","path":"live2d_models/nietzsche/assets/mtn/19_walk.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/mtn/20_sleep.mtn","path":"live2d_models/nietzsche/assets/mtn/20_sleep.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/moc/nipsilon.moc","path":"live2d_models/nipsilon/assets/moc/nipsilon.moc","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/mtn/00_idle.mtn","path":"live2d_models/nipsilon/assets/mtn/00_idle.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/mtn/01_happy.mtn","path":"live2d_models/nipsilon/assets/mtn/01_happy.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/mtn/02_angry.mtn","path":"live2d_models/nipsilon/assets/mtn/02_angry.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/mtn/03_fear.mtn","path":"live2d_models/nipsilon/assets/mtn/03_fear.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/mtn/04_surprise.mtn","path":"live2d_models/nipsilon/assets/mtn/04_surprise.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/mtn/05_fun.mtn","path":"live2d_models/nipsilon/assets/mtn/05_fun.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/mtn/06_love.mtn","path":"live2d_models/nipsilon/assets/mtn/06_love.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/mtn/07_bye.mtn","path":"live2d_models/nipsilon/assets/mtn/07_bye.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/mtn/08_sad.mtn","path":"live2d_models/nipsilon/assets/mtn/08_sad.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/mtn/09_yawn.mtn","path":"live2d_models/nipsilon/assets/mtn/09_yawn.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/mtn/10_yeah.mtn","path":"live2d_models/nipsilon/assets/mtn/10_yeah.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/mtn/11_muscle.mtn","path":"live2d_models/nipsilon/assets/mtn/11_muscle.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/mtn/12_stagger.mtn","path":"live2d_models/nipsilon/assets/mtn/12_stagger.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/mtn/13_cry.mtn","path":"live2d_models/nipsilon/assets/mtn/13_cry.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/mtn/14_ sigh.mtn","path":"live2d_models/nipsilon/assets/mtn/14_ sigh.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/mtn/15_joy.mtn","path":"live2d_models/nipsilon/assets/mtn/15_joy.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/mtn/16_menace.mtn","path":"live2d_models/nipsilon/assets/mtn/16_menace.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/mtn/17_yes.mtn","path":"live2d_models/nipsilon/assets/mtn/17_yes.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/mtn/18_no.mtn","path":"live2d_models/nipsilon/assets/mtn/18_no.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/mtn/19_walk.mtn","path":"live2d_models/nipsilon/assets/mtn/19_walk.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/mtn/20_sleep.mtn","path":"live2d_models/nipsilon/assets/mtn/20_sleep.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nito/assets/moc/nito.moc","path":"live2d_models/nito/assets/moc/nito.moc","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nito/assets/mtn/00_idle.mtn","path":"live2d_models/nito/assets/mtn/00_idle.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nito/assets/mtn/01_happy.mtn","path":"live2d_models/nito/assets/mtn/01_happy.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nito/assets/mtn/02_angry.mtn","path":"live2d_models/nito/assets/mtn/02_angry.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nito/assets/mtn/04_surprise.mtn","path":"live2d_models/nito/assets/mtn/04_surprise.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nito/assets/mtn/03_fear.mtn","path":"live2d_models/nito/assets/mtn/03_fear.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nito/assets/mtn/05_fun.mtn","path":"live2d_models/nito/assets/mtn/05_fun.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nito/assets/mtn/06_love.mtn","path":"live2d_models/nito/assets/mtn/06_love.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nito/assets/mtn/07_bye.mtn","path":"live2d_models/nito/assets/mtn/07_bye.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nito/assets/mtn/08_sad.mtn","path":"live2d_models/nito/assets/mtn/08_sad.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nito/assets/mtn/09_yawn.mtn","path":"live2d_models/nito/assets/mtn/09_yawn.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nito/assets/mtn/10_yeah.mtn","path":"live2d_models/nito/assets/mtn/10_yeah.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nito/assets/mtn/11_muscle.mtn","path":"live2d_models/nito/assets/mtn/11_muscle.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nito/assets/mtn/12_stagger.mtn","path":"live2d_models/nito/assets/mtn/12_stagger.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nito/assets/mtn/13_cry.mtn","path":"live2d_models/nito/assets/mtn/13_cry.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nito/assets/mtn/14_ sigh.mtn","path":"live2d_models/nito/assets/mtn/14_ sigh.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nito/assets/mtn/15_joy.mtn","path":"live2d_models/nito/assets/mtn/15_joy.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nito/assets/mtn/16_menace.mtn","path":"live2d_models/nito/assets/mtn/16_menace.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nito/assets/mtn/17_yes.mtn","path":"live2d_models/nito/assets/mtn/17_yes.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nito/assets/mtn/18_no.mtn","path":"live2d_models/nito/assets/mtn/18_no.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nito/assets/mtn/19_walk.mtn","path":"live2d_models/nito/assets/mtn/19_walk.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nito/assets/mtn/20_sleep.mtn","path":"live2d_models/nito/assets/mtn/20_sleep.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/exp/f01.exp.json","path":"live2d_models/shizuku/assets/exp/f01.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/exp/f02.exp.json","path":"live2d_models/shizuku/assets/exp/f02.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/exp/f03.exp.json","path":"live2d_models/shizuku/assets/exp/f03.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/exp/f04.exp.json","path":"live2d_models/shizuku/assets/exp/f04.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/moc/shizuku.moc","path":"live2d_models/shizuku/assets/moc/shizuku.moc","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/mtn/flickHead_00.mtn","path":"live2d_models/shizuku/assets/mtn/flickHead_00.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/mtn/flickHead_01.mtn","path":"live2d_models/shizuku/assets/mtn/flickHead_01.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/mtn/flickHead_02.mtn","path":"live2d_models/shizuku/assets/mtn/flickHead_02.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/mtn/idle_00.mtn","path":"live2d_models/shizuku/assets/mtn/idle_00.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/mtn/idle_01.mtn","path":"live2d_models/shizuku/assets/mtn/idle_01.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/mtn/idle_02.mtn","path":"live2d_models/shizuku/assets/mtn/idle_02.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/mtn/pinchIn_00.mtn","path":"live2d_models/shizuku/assets/mtn/pinchIn_00.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/mtn/pinchIn_01.mtn","path":"live2d_models/shizuku/assets/mtn/pinchIn_01.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/mtn/pinchIn_02.mtn","path":"live2d_models/shizuku/assets/mtn/pinchIn_02.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/mtn/pinchOut_00.mtn","path":"live2d_models/shizuku/assets/mtn/pinchOut_00.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/mtn/pinchOut_01.mtn","path":"live2d_models/shizuku/assets/mtn/pinchOut_01.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/mtn/pinchOut_02.mtn","path":"live2d_models/shizuku/assets/mtn/pinchOut_02.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/mtn/shake_00.mtn","path":"live2d_models/shizuku/assets/mtn/shake_00.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/mtn/shake_01.mtn","path":"live2d_models/shizuku/assets/mtn/shake_01.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/mtn/shake_02.mtn","path":"live2d_models/shizuku/assets/mtn/shake_02.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/mtn/tapBody_00.mtn","path":"live2d_models/shizuku/assets/mtn/tapBody_00.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/mtn/tapBody_02.mtn","path":"live2d_models/shizuku/assets/mtn/tapBody_02.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/mtn/tapBody_01.mtn","path":"live2d_models/shizuku/assets/mtn/tapBody_01.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/snd/flickHead_00.mp3","path":"live2d_models/shizuku/assets/snd/flickHead_00.mp3","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/snd/flickHead_01.mp3","path":"live2d_models/shizuku/assets/snd/flickHead_01.mp3","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/snd/flickHead_02.mp3","path":"live2d_models/shizuku/assets/snd/flickHead_02.mp3","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/snd/pinchIn_00.mp3","path":"live2d_models/shizuku/assets/snd/pinchIn_00.mp3","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/snd/pinchIn_01.mp3","path":"live2d_models/shizuku/assets/snd/pinchIn_01.mp3","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/snd/pinchIn_02.mp3","path":"live2d_models/shizuku/assets/snd/pinchIn_02.mp3","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/snd/pinchOut_00.mp3","path":"live2d_models/shizuku/assets/snd/pinchOut_00.mp3","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/snd/pinchOut_01.mp3","path":"live2d_models/shizuku/assets/snd/pinchOut_01.mp3","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/snd/pinchOut_02.mp3","path":"live2d_models/shizuku/assets/snd/pinchOut_02.mp3","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/snd/shake_00.mp3","path":"live2d_models/shizuku/assets/snd/shake_00.mp3","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/snd/shake_01.mp3","path":"live2d_models/shizuku/assets/snd/shake_01.mp3","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/snd/tapBody_00.mp3","path":"live2d_models/shizuku/assets/snd/tapBody_00.mp3","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/snd/shake_02.mp3","path":"live2d_models/shizuku/assets/snd/shake_02.mp3","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/snd/tapBody_01.mp3","path":"live2d_models/shizuku/assets/snd/tapBody_01.mp3","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/snd/tapBody_02.mp3","path":"live2d_models/shizuku/assets/snd/tapBody_02.mp3","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tororo/assets/moc/tororo.moc","path":"live2d_models/tororo/assets/moc/tororo.moc","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tororo/assets/mtn/00_idle.mtn","path":"live2d_models/tororo/assets/mtn/00_idle.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tororo/assets/mtn/01.mtn","path":"live2d_models/tororo/assets/mtn/01.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tororo/assets/mtn/02.mtn","path":"live2d_models/tororo/assets/mtn/02.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tororo/assets/mtn/03.mtn","path":"live2d_models/tororo/assets/mtn/03.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tororo/assets/mtn/04.mtn","path":"live2d_models/tororo/assets/mtn/04.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tororo/assets/mtn/05.mtn","path":"live2d_models/tororo/assets/mtn/05.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tororo/assets/mtn/06.mtn","path":"live2d_models/tororo/assets/mtn/06.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tororo/assets/mtn/07.mtn","path":"live2d_models/tororo/assets/mtn/07.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tororo/assets/mtn/08.mtn","path":"live2d_models/tororo/assets/mtn/08.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/exp/F01.exp.json","path":"live2d_models/tsumiki/assets/exp/F01.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/exp/F02.exp.json","path":"live2d_models/tsumiki/assets/exp/F02.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/exp/F03.exp.json","path":"live2d_models/tsumiki/assets/exp/F03.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/exp/F04.exp.json","path":"live2d_models/tsumiki/assets/exp/F04.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/exp/F05.exp.json","path":"live2d_models/tsumiki/assets/exp/F05.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/exp/F06.exp.json","path":"live2d_models/tsumiki/assets/exp/F06.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/exp/F07.exp.json","path":"live2d_models/tsumiki/assets/exp/F07.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/exp/F09.exp.json","path":"live2d_models/tsumiki/assets/exp/F09.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/exp/F08.exp.json","path":"live2d_models/tsumiki/assets/exp/F08.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/exp/F10.exp.json","path":"live2d_models/tsumiki/assets/exp/F10.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/moc/tsumiki.moc","path":"live2d_models/tsumiki/assets/moc/tsumiki.moc","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/P01.mtn","path":"live2d_models/tsumiki/assets/mtn/P01.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_idle_01.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_idle_01.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_01.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_01.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_01_df.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_01_df.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_02.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_02.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_03.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_03.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_04.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_04.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_05.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_05.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_06.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_06.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_07.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_07.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_08.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_08.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_09.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_09.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_10.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_10.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_11.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_11.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_12.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_12.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_13.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_13.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_14.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_14.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_15.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_15.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_16.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_16.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_17.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_17.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_18.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_18.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_19.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_19.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_20.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_20.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_21.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_21.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_22.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_22.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_23.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_23.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_24.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_24.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/unitychan/assets/moc/unitychan.moc","path":"live2d_models/unitychan/assets/moc/unitychan.moc","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/unitychan/assets/mtn/idle_01.mtn","path":"live2d_models/unitychan/assets/mtn/idle_01.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/unitychan/assets/mtn/idle_02.mtn","path":"live2d_models/unitychan/assets/mtn/idle_02.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/unitychan/assets/mtn/m_01.mtn","path":"live2d_models/unitychan/assets/mtn/m_01.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/unitychan/assets/mtn/m_02.mtn","path":"live2d_models/unitychan/assets/mtn/m_02.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/unitychan/assets/mtn/m_03.mtn","path":"live2d_models/unitychan/assets/mtn/m_03.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/unitychan/assets/mtn/m_04.mtn","path":"live2d_models/unitychan/assets/mtn/m_04.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/unitychan/assets/mtn/m_05.mtn","path":"live2d_models/unitychan/assets/mtn/m_05.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/unitychan/assets/mtn/m_06.mtn","path":"live2d_models/unitychan/assets/mtn/m_06.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/unitychan/assets/mtn/m_07.mtn","path":"live2d_models/unitychan/assets/mtn/m_07.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/unitychan/assets/mtn/m_08.mtn","path":"live2d_models/unitychan/assets/mtn/m_08.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/unitychan/assets/mtn/m_09.mtn","path":"live2d_models/unitychan/assets/mtn/m_09.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/unitychan/assets/mtn/m_10.mtn","path":"live2d_models/unitychan/assets/mtn/m_10.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/unitychan/assets/mtn/m_11.mtn","path":"live2d_models/unitychan/assets/mtn/m_11.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/unitychan/assets/mtn/m_12.mtn","path":"live2d_models/unitychan/assets/mtn/m_12.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/unitychan/assets/mtn/m_13.mtn","path":"live2d_models/unitychan/assets/mtn/m_13.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/unitychan/assets/mtn/m_14.mtn","path":"live2d_models/unitychan/assets/mtn/m_14.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/wanko/assets/moc/wanko.moc","path":"live2d_models/wanko/assets/moc/wanko.moc","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/wanko/assets/mtn/idle_01.mtn","path":"live2d_models/wanko/assets/mtn/idle_01.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/wanko/assets/mtn/idle_02.mtn","path":"live2d_models/wanko/assets/mtn/idle_02.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/wanko/assets/mtn/idle_03.mtn","path":"live2d_models/wanko/assets/mtn/idle_03.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/wanko/assets/mtn/idle_04.mtn","path":"live2d_models/wanko/assets/mtn/idle_04.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/wanko/assets/mtn/shake_01.mtn","path":"live2d_models/wanko/assets/mtn/shake_01.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/wanko/assets/mtn/touch_02.mtn","path":"live2d_models/wanko/assets/mtn/touch_02.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/wanko/assets/mtn/shake_02.mtn","path":"live2d_models/wanko/assets/mtn/shake_02.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/wanko/assets/mtn/touch_01.mtn","path":"live2d_models/wanko/assets/mtn/touch_01.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/wanko/assets/mtn/touch_03.mtn","path":"live2d_models/wanko/assets/mtn/touch_03.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/wanko/assets/mtn/touch_04.mtn","path":"live2d_models/wanko/assets/mtn/touch_04.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/wanko/assets/mtn/touch_05.mtn","path":"live2d_models/wanko/assets/mtn/touch_05.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/wanko/assets/mtn/touch_06.mtn","path":"live2d_models/wanko/assets/mtn/touch_06.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/z16/assets/exp/f00.exp.json","path":"live2d_models/z16/assets/exp/f00.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/z16/assets/moc/z16.moc","path":"live2d_models/z16/assets/moc/z16.moc","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/z16/assets/mtn/idle.mtn","path":"live2d_models/z16/assets/mtn/idle.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/chitose/assets/moc/chitose.2048/texture_00.png","path":"live2d_models/chitose/assets/moc/chitose.2048/texture_00.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/moc/Epsilon2.1.2048/texture_00.png","path":"live2d_models/epsilon2_1/assets/moc/Epsilon2.1.2048/texture_00.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_00.png","path":"live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_00.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_01.png","path":"live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_01.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_02.png","path":"live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_02.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_03.png","path":"live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_03.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_04.png","path":"live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_04.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_05.png","path":"live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_05.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_06.png","path":"live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_06.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/exp/f01.exp.json","path":"live2d_models/haru/01/assets/exp/f01.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/exp/f02.exp.json","path":"live2d_models/haru/01/assets/exp/f02.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/exp/f03.exp.json","path":"live2d_models/haru/01/assets/exp/f03.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/exp/f05.exp.json","path":"live2d_models/haru/01/assets/exp/f05.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/exp/f04.exp.json","path":"live2d_models/haru/01/assets/exp/f04.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/exp/f06.exp.json","path":"live2d_models/haru/01/assets/exp/f06.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/exp/f07.exp.json","path":"live2d_models/haru/01/assets/exp/f07.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/exp/f08.exp.json","path":"live2d_models/haru/01/assets/exp/f08.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/moc/haru01.moc","path":"live2d_models/haru/01/assets/moc/haru01.moc","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/mtn/flickHead_00.mtn","path":"live2d_models/haru/01/assets/mtn/flickHead_00.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/mtn/idle_00.mtn","path":"live2d_models/haru/01/assets/mtn/idle_00.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/mtn/idle_01.mtn","path":"live2d_models/haru/01/assets/mtn/idle_01.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/mtn/pinchIn_00.mtn","path":"live2d_models/haru/01/assets/mtn/pinchIn_00.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/mtn/idle_02.mtn","path":"live2d_models/haru/01/assets/mtn/idle_02.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/mtn/pinchOut_00.mtn","path":"live2d_models/haru/01/assets/mtn/pinchOut_00.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/mtn/shake_00.mtn","path":"live2d_models/haru/01/assets/mtn/shake_00.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/mtn/tapBody_01.mtn","path":"live2d_models/haru/01/assets/mtn/tapBody_01.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/mtn/tapBody_00.mtn","path":"live2d_models/haru/01/assets/mtn/tapBody_00.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/mtn/tapBody_03.mtn","path":"live2d_models/haru/01/assets/mtn/tapBody_03.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/mtn/tapBody_02.mtn","path":"live2d_models/haru/01/assets/mtn/tapBody_02.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/mtn/tapBody_04.mtn","path":"live2d_models/haru/01/assets/mtn/tapBody_04.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/mtn/tapBody_05.mtn","path":"live2d_models/haru/01/assets/mtn/tapBody_05.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/mtn/tapBody_06.mtn","path":"live2d_models/haru/01/assets/mtn/tapBody_06.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/mtn/tapBody_07.mtn","path":"live2d_models/haru/01/assets/mtn/tapBody_07.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/mtn/tapBody_09.mtn","path":"live2d_models/haru/01/assets/mtn/tapBody_09.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/mtn/tapBody_08.mtn","path":"live2d_models/haru/01/assets/mtn/tapBody_08.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/snd/flickHead_00.mp3","path":"live2d_models/haru/01/assets/snd/flickHead_00.mp3","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/snd/pinchIn_00.mp3","path":"live2d_models/haru/01/assets/snd/pinchIn_00.mp3","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/snd/pinchOut_00.mp3","path":"live2d_models/haru/01/assets/snd/pinchOut_00.mp3","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/snd/shake_00.mp3","path":"live2d_models/haru/01/assets/snd/shake_00.mp3","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/snd/tapBody_00.mp3","path":"live2d_models/haru/01/assets/snd/tapBody_00.mp3","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/snd/tapBody_01.mp3","path":"live2d_models/haru/01/assets/snd/tapBody_01.mp3","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/snd/tapBody_02.mp3","path":"live2d_models/haru/01/assets/snd/tapBody_02.mp3","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/exp/f01.exp.json","path":"live2d_models/haru/02/assets/exp/f01.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/exp/f02.exp.json","path":"live2d_models/haru/02/assets/exp/f02.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/exp/f03.exp.json","path":"live2d_models/haru/02/assets/exp/f03.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/exp/f04.exp.json","path":"live2d_models/haru/02/assets/exp/f04.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/exp/f05.exp.json","path":"live2d_models/haru/02/assets/exp/f05.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/exp/f06.exp.json","path":"live2d_models/haru/02/assets/exp/f06.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/exp/f07.exp.json","path":"live2d_models/haru/02/assets/exp/f07.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/exp/f08.exp.json","path":"live2d_models/haru/02/assets/exp/f08.exp.json","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/moc/haru02.moc","path":"live2d_models/haru/02/assets/moc/haru02.moc","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/mtn/flickHead_00.mtn","path":"live2d_models/haru/02/assets/mtn/flickHead_00.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/mtn/idle_00.mtn","path":"live2d_models/haru/02/assets/mtn/idle_00.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/mtn/idle_01.mtn","path":"live2d_models/haru/02/assets/mtn/idle_01.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/mtn/idle_02.mtn","path":"live2d_models/haru/02/assets/mtn/idle_02.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/mtn/pinchIn_00.mtn","path":"live2d_models/haru/02/assets/mtn/pinchIn_00.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/mtn/pinchOut_00.mtn","path":"live2d_models/haru/02/assets/mtn/pinchOut_00.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/mtn/shake_00.mtn","path":"live2d_models/haru/02/assets/mtn/shake_00.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/mtn/tapBody_00.mtn","path":"live2d_models/haru/02/assets/mtn/tapBody_00.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/mtn/tapBody_01.mtn","path":"live2d_models/haru/02/assets/mtn/tapBody_01.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/mtn/tapBody_02.mtn","path":"live2d_models/haru/02/assets/mtn/tapBody_02.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/mtn/tapBody_03.mtn","path":"live2d_models/haru/02/assets/mtn/tapBody_03.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/mtn/tapBody_04.mtn","path":"live2d_models/haru/02/assets/mtn/tapBody_04.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/mtn/tapBody_05.mtn","path":"live2d_models/haru/02/assets/mtn/tapBody_05.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/mtn/tapBody_06.mtn","path":"live2d_models/haru/02/assets/mtn/tapBody_06.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/mtn/tapBody_07.mtn","path":"live2d_models/haru/02/assets/mtn/tapBody_07.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/mtn/tapBody_08.mtn","path":"live2d_models/haru/02/assets/mtn/tapBody_08.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/mtn/tapBody_09.mtn","path":"live2d_models/haru/02/assets/mtn/tapBody_09.mtn","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/snd/flickHead_00.mp3","path":"live2d_models/haru/02/assets/snd/flickHead_00.mp3","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/snd/pinchIn_00.mp3","path":"live2d_models/haru/02/assets/snd/pinchIn_00.mp3","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/snd/pinchOut_00.mp3","path":"live2d_models/haru/02/assets/snd/pinchOut_00.mp3","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/snd/shake_00.mp3","path":"live2d_models/haru/02/assets/snd/shake_00.mp3","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/snd/tapBody_00.mp3","path":"live2d_models/haru/02/assets/snd/tapBody_00.mp3","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/snd/tapBody_01.mp3","path":"live2d_models/haru/02/assets/snd/tapBody_01.mp3","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/snd/tapBody_02.mp3","path":"live2d_models/haru/02/assets/snd/tapBody_02.mp3","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haruto/assets/moc/haruto.2048/texture_00.png","path":"live2d_models/haruto/assets/moc/haruto.2048/texture_00.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/hibiki/assets/moc/hibiki.2048/texture_00.png","path":"live2d_models/hibiki/assets/moc/hibiki.2048/texture_00.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/hijiki/assets/moc/hijiki.2048/texture_00.png","path":"live2d_models/hijiki/assets/moc/hijiki.2048/texture_00.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/izumi/assets/moc/izumi_illust.1024/texture_00.png","path":"live2d_models/izumi/assets/moc/izumi_illust.1024/texture_00.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/izumi/assets/moc/izumi_illust.1024/texture_01.png","path":"live2d_models/izumi/assets/moc/izumi_illust.1024/texture_01.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/izumi/assets/moc/izumi_illust.1024/texture_02.png","path":"live2d_models/izumi/assets/moc/izumi_illust.1024/texture_02.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/izumi/assets/moc/izumi_illust.1024/texture_03.png","path":"live2d_models/izumi/assets/moc/izumi_illust.1024/texture_03.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/koharu/assets/moc/koharu.2048/texture_00.png","path":"live2d_models/koharu/assets/moc/koharu.2048/texture_00.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/miku/assets/moc/miku.2048/texture_00.png","path":"live2d_models/miku/assets/moc/miku.2048/texture_00.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/moc/ni-j.2048/texture_00.png","path":"live2d_models/ni-j/assets/moc/ni-j.2048/texture_00.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/moc/ni-j.2048/texture_01.png","path":"live2d_models/ni-j/assets/moc/ni-j.2048/texture_01.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nico/assets/moc/nico.2048/texture_00.png","path":"live2d_models/nico/assets/moc/nico.2048/texture_00.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nico/assets/moc/nico.2048/texture_01.png","path":"live2d_models/nico/assets/moc/nico.2048/texture_01.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nico/assets/moc/nico.2048/texture_02.png","path":"live2d_models/nico/assets/moc/nico.2048/texture_02.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/moc/nietzsche.2048/texture_00.png","path":"live2d_models/nietzsche/assets/moc/nietzsche.2048/texture_00.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/moc/nietzsche.2048/texture_01.png","path":"live2d_models/nietzsche/assets/moc/nietzsche.2048/texture_01.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/moc/nietzsche.2048/texture_02.png","path":"live2d_models/nietzsche/assets/moc/nietzsche.2048/texture_02.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/moc/nipsilon.2048/texture_00.png","path":"live2d_models/nipsilon/assets/moc/nipsilon.2048/texture_00.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/moc/nipsilon.2048/texture_01.png","path":"live2d_models/nipsilon/assets/moc/nipsilon.2048/texture_01.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/moc/nipsilon.2048/texture_02.png","path":"live2d_models/nipsilon/assets/moc/nipsilon.2048/texture_02.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nito/assets/moc/nito.2048/texture_00.png","path":"live2d_models/nito/assets/moc/nito.2048/texture_00.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/nito/assets/moc/nito.2048/texture_01.png","path":"live2d_models/nito/assets/moc/nito.2048/texture_01.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/moc/shizuku.1024/texture_00.png","path":"live2d_models/shizuku/assets/moc/shizuku.1024/texture_00.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/moc/shizuku.1024/texture_01.png","path":"live2d_models/shizuku/assets/moc/shizuku.1024/texture_01.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/moc/shizuku.1024/texture_02.png","path":"live2d_models/shizuku/assets/moc/shizuku.1024/texture_02.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/moc/shizuku.1024/texture_03.png","path":"live2d_models/shizuku/assets/moc/shizuku.1024/texture_03.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/moc/shizuku.1024/texture_04.png","path":"live2d_models/shizuku/assets/moc/shizuku.1024/texture_04.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/moc/shizuku.1024/texture_05.png","path":"live2d_models/shizuku/assets/moc/shizuku.1024/texture_05.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tororo/assets/moc/tororo.2048/texture_00.png","path":"live2d_models/tororo/assets/moc/tororo.2048/texture_00.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/moc/tsumiki.2048/texture_00.png","path":"live2d_models/tsumiki/assets/moc/tsumiki.2048/texture_00.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/moc/tsumiki.2048/texture_01.png","path":"live2d_models/tsumiki/assets/moc/tsumiki.2048/texture_01.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/unitychan/assets/moc/unitychan.2048/texture_00.png","path":"live2d_models/unitychan/assets/moc/unitychan.2048/texture_00.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/wanko/assets/moc/wanko.1024/texture_00.png","path":"live2d_models/wanko/assets/moc/wanko.1024/texture_00.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/z16/assets/moc/z16.1024/texture_00.png","path":"live2d_models/z16/assets/moc/z16.1024/texture_00.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/z16/assets/moc/z16.256/texture_00.png","path":"live2d_models/z16/assets/moc/z16.256/texture_00.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/z16/assets/moc/z16.512/texture_00.png","path":"live2d_models/z16/assets/moc/z16.512/texture_00.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/moc/haru01.1024/texture_00.png","path":"live2d_models/haru/01/assets/moc/haru01.1024/texture_00.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/moc/haru01.1024/texture_01.png","path":"live2d_models/haru/01/assets/moc/haru01.1024/texture_01.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/moc/haru01.1024/texture_02.png","path":"live2d_models/haru/01/assets/moc/haru01.1024/texture_02.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/moc/haru02.1024/texture_00.png","path":"live2d_models/haru/02/assets/moc/haru02.1024/texture_00.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/moc/haru02.1024/texture_01.png","path":"live2d_models/haru/02/assets/moc/haru02.1024/texture_01.png","modified":0,"renderable":1},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/moc/haru02.1024/texture_02.png","path":"live2d_models/haru/02/assets/moc/haru02.1024/texture_02.png","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/2019-03-05-数据库.md","hash":"49102cd4a72f3ce6b02f92408a9e9b4c386366f8","modified":1602211363449},{"_id":"source/_posts/2019-03-12-DataTable.md","hash":"7f9596c83bf261caba7dcffb370eb9697efdbc05","modified":1601867203079},{"_id":"source/_posts/2019-03-19-ruby基本知识.md","hash":"ac8e776cea167c5373ae4028002fd40d109cfda6","modified":1602211363452},{"_id":"source/_posts/2019-03-20-Ruby-Rails学习资料.md","hash":"d34a593436d3d5832139534b52822b7a91c46e31","modified":1602211363452},{"_id":"source/_posts/2019-04-03-git环境配置.md","hash":"6a15b0bb436dbc5da21a8b3fe235d3ebca1eb72d","modified":1602211363453},{"_id":"source/_posts/2019-03-29-ruby-open3死锁.md","hash":"752dbff3d89cc05701a99e50aee05202928220fb","modified":1602212563631},{"_id":"source/_posts/2019-03-12-DataTable使用正则.md","hash":"5dd0678c9105ec0049eef4423b8f464b9afd5f87","modified":1602211363446},{"_id":"source/_posts/2019-03-12-代理服务器的搭建.md","hash":"d0d5c0e303405960c8c1afcb5186310ff253d981","modified":1602211363438},{"_id":"source/_posts/2019-05-08-js事件委托机制.md","hash":"9778fbd415e3a049a970c2021732600947e6a361","modified":1601867203192},{"_id":"source/_posts/2019-07-12-网站推荐.md","hash":"494935924dbc602a277f591855e93a18f6bdddd9","modified":1602211363451},{"_id":"source/_posts/2019-05-22-css居中详解.md","hash":"e943ede7b47c1d43c473c54007100778af3c1d6b","modified":1602211363453},{"_id":"source/_posts/2019-05-27-flex布局.md","hash":"798c14118042b227be3993f6a34582f302b81296","modified":1601867203194},{"_id":"source/_posts/2019-10-22-percentage-of-css.md","hash":"0e886b267c1cbec0c36e2924307b13207b08ec76","modified":1601867203196},{"_id":"source/_posts/2019-10-29-proxy-of-docker.md","hash":"cd11c436a6a1934faf54a89dd5e19e9c7b3e499d","modified":1602212525078},{"_id":"source/_posts/2020-09-04-centos-install-k8s.md","hash":"faa0daea46502422ee3c864aeef68df9407d3884","modified":1602212457175},{"_id":"source/_posts/2020-09-10-debian-install-k8s.md","hash":"b014fb71ec457566a28ce4aea51a6abb12f9845a","modified":1602212390425},{"_id":"source/_posts/2020-09-06-interview-css.md","hash":"5d87e12aa373e2cee0a72a0928e20519e8ed753a","modified":1602601823811},{"_id":"source/_posts/2020-05-11-linux-connect-blueteeth.md","hash":"955264094691fdf0058a8b3c096be18ce1ea098f","modified":1602212495069},{"_id":"source/_posts/2020-09-27-debian-install-k8s-offline.md","hash":"3597f7f18e656733fb7acc72682bf1204035f674","modified":1602212263372},{"_id":"source/_posts/2020-09-27-docker-install-offline.md","hash":"ceddb4690d6652015e801adda7ee6754b3c1075a","modified":1602212206111},{"_id":"source/_posts/2020-09-27-node-http-server.md","hash":"6b1298ab541d1d58a5942ef477e9924995b09d0e","modified":1602419654625},{"_id":"source/_posts/2020-09-27-debian-install-command.md","hash":"a6c8eed4b3d9fc3475568205097896beafecd4a6","modified":1602212303932},{"_id":"source/_posts/2020-09-17-k8s-add-new-domain-name.md","hash":"ab7177b58112574c12be80d809906e5fdf5b034b","modified":1602211363454},{"_id":"source/_posts/2020-09-14-ruby-rare-knowledge.md","hash":"078b2e6d8d30d4393de27c14f7d1ee67a401ef5c","modified":1603344076454},{"_id":"source/_posts/2020-10-11-hexo-new-page.md","hash":"87ee6b6166fa04a2becea498f1335782a881fd7b","modified":1602421859376},{"_id":"source/_posts/2020-10-07-deploy-hexo.md","hash":"a6da151c61a086340d332beb5b935afb334dea34","modified":1602235564660},{"_id":"source/_posts/2020-10-22-es6-async-methods.md","hash":"72469c719bedb77034ec6f6bcf7ec3a9c8198bfc","modified":1603354783407},{"_id":"source/comment/index.md","hash":"77ecf8583a6552799177cfe1d5891c490a6cc254","modified":1603349647193},{"_id":"source/_posts/2020-10-11-gitee-update-pages-auto.md","hash":"953c59fc46dbbe2bfc4c4e13e14ce4d96c92333f","modified":1602419650343},{"_id":"source/_posts/2020-09-30-hexo-add-article-nav.md","hash":"3ead7c09a38891ababf2daf23a2635db56717865","modified":1602212147338},{"_id":"source/_posts/2020-10-21-browser-window-size.md","hash":"9c9757aeb1a3657ea8bd268aa07586126f8fd60f","modified":1603274150555},{"_id":"themes/lucky/layout/_partial/toc.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1601870173659},{"_id":"themes/lucky/.babelrc","hash":"db600d40e93e6d8023737a65d58d3be7370e5e30","modified":1601870173612},{"_id":"themes/lucky/.editorconfig","hash":"daaa8757fac18f8735fadd0a37a42c06f421ca14","modified":1601870173613},{"_id":"themes/lucky/.eslintignore","hash":"ed9d8911ca08c3dd5072c48dd0be4d06f8897730","modified":1601870173613},{"_id":"themes/lucky/README.md","hash":"8e82a12deaa0aae0e3662870fc5d1616d283aa69","modified":1601870173617},{"_id":"themes/lucky/_config.yml","hash":"afc2106a3019a31beb7d9f5fcd45bd77d5c35189","modified":1603349588148},{"_id":"themes/lucky/package.json","hash":"4656765287888094e8ac0a2c3c2a1f1c256b8676","modified":1602385579608},{"_id":"themes/lucky/.gitignore","hash":"b09bbb3bf1d74cc29a8a5eaa293d921f4cd4ee7b","modified":1602471821170},{"_id":"themes/lucky/.eslintrc.js","hash":"303d25adf02ad65720e537a16a4a137d14bb755f","modified":1601870173614},{"_id":"themes/lucky/examples/index.html","hash":"e8b56b7ca7e3f7bcf51060b78c011a91014d2ce0","modified":1601870173629},{"_id":"themes/lucky/LICENSE","hash":"4bd4037a0093c20bfdfb637b93758402ca188d14","modified":1601870173616},{"_id":"themes/lucky/languages/default.yml","hash":"af81d39fd3422cdb118165461f231b2429a09d6c","modified":1601870173630},{"_id":"themes/lucky/languages/nl.yml","hash":"3d82ec703d0b3287739d7cb4750a715ae83bfcb3","modified":1601870173632},{"_id":"themes/lucky/languages/fr.yml","hash":"b4be1c1592a72012e48df2b3ec41cc9685573e50","modified":1601870173631},{"_id":"themes/lucky/languages/no.yml","hash":"ddf2035e920a5ecb9076138c184257d9f51896a7","modified":1601870173632},{"_id":"themes/lucky/languages/en.yml","hash":"5b7e0730101edd49167f9c09c93279ad745b2098","modified":1601870173631},{"_id":"themes/lucky/languages/ru.yml","hash":"2a476b4c6e04900914c81378941640ac5d58a1f0","modified":1601870173633},{"_id":"themes/lucky/webpack.config.js","hash":"08f653daa4794a76d5ff2011751593a5102e21aa","modified":1601870174651},{"_id":"themes/lucky/.vscode/settings.json","hash":"0f536a72f302812f9add043f0dc128ccfd657347","modified":1601870173616},{"_id":"themes/lucky/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1601870173661},{"_id":"themes/lucky/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1601870173661},{"_id":"themes/lucky/layout/index.ejs","hash":"5ef42c7cc4556048579c5ab9aa95bf81caa4f09c","modified":1601870173662},{"_id":"themes/lucky/languages/zh-CN.yml","hash":"af81d39fd3422cdb118165461f231b2429a09d6c","modified":1601870173634},{"_id":"themes/lucky/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1601870173663},{"_id":"themes/lucky/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1601870173663},{"_id":"themes/lucky/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1601870173664},{"_id":"themes/lucky/scripts/default_config.js","hash":"6b057e793003ad025690e03a7524a7c7d8d81ad2","modified":1601870173670},{"_id":"themes/lucky/scripts/yilia_plus_log.js","hash":"954041c88b15f471c87ca1f8595eed2bd2a2c693","modified":1601870173675},{"_id":"themes/lucky/source/baidu_verify_code-DKptWBbgP9.html","hash":"34d1d7847f24e014fac17bc9cb450ce9d690db48","modified":1602246605444},{"_id":"themes/lucky/languages/zh-Hans.yml","hash":"3d62bb14cc58cce82a8e05ca4bcb3813902c92d8","modified":1601870173634},{"_id":"themes/lucky/languages/zh-tw.yml","hash":"6663e4b0affd13320af416a765b4e7f88b55b8be","modified":1601870173635},{"_id":"themes/lucky/layout/layout.ejs","hash":"9aaf4a7282f8ea3ebae4767ab1362ed797f2c5fc","modified":1601870173662},{"_id":"themes/lucky/source-src/css.ejs","hash":"c6a8a27b9d678271aac3ca0661409c9e9d703097","modified":1601870173676},{"_id":"themes/lucky/examples/images/weixin.png","hash":"a1201bdc06e1467fea1f78cd56d8af45fdcfd5c0","modified":1601870173628},{"_id":"themes/lucky/layout/_partial/activate-power-mode.ejs","hash":"45b8a294251185c041a645eb974bfd552bb283d4","modified":1601870173637},{"_id":"themes/lucky/examples/images/qrcode.png","hash":"061607c067991f03bab78904fdba6e8b4bc174b0","modified":1601870173624},{"_id":"themes/lucky/layout/_partial/archive-post.ejs","hash":"edc0154b30a4127acda10297bec6aacf754b4ac4","modified":1601870173638},{"_id":"themes/lucky/source-src/script.ejs","hash":"b886ac88de6e49e2a359082c4bf8818bd74f14d9","modified":1601870173726},{"_id":"themes/lucky/layout/_partial/after-footer.ejs","hash":"5d4ce98ba7fc0262a2878b0f52f37c3c6496410c","modified":1601870173637},{"_id":"themes/lucky/layout/_partial/archive.ejs","hash":"a4eacc2bc1278095a0ef99f904b0634c78f980eb","modified":1601870173639},{"_id":"themes/lucky/layout/_partial/aside.ejs","hash":"751e5deab5365348be5243688b419c82d337ab9a","modified":1601870173640},{"_id":"themes/lucky/layout/_partial/baidu-analytics.ejs","hash":"155327c23607f69989b58845f24d842a54e504b8","modified":1601870173641},{"_id":"themes/lucky/layout/_partial/baidu-push.ejs","hash":"d2c68b78e246d0bdd831d5bbc291cad168fd7ff7","modified":1601870173642},{"_id":"themes/lucky/examples/images/alipay.jpeg","hash":"7eb57147bd42d499f8ef0351d46673158b209f75","modified":1601870173623},{"_id":"themes/lucky/layout/_partial/article.ejs","hash":"a77e9ca76f2abe2cf69a9ac7b727702e44bcbbf2","modified":1602419277444},{"_id":"themes/lucky/layout/_partial/google-analytics.ejs","hash":"3a23d6ae48305c9f1b5c400da780288c2425254b","modified":1601870173643},{"_id":"themes/lucky/layout/_partial/background.ejs","hash":"ac8968f04ece57e132189daffb3f4b5aeb182722","modified":1601870173640},{"_id":"themes/lucky/layout/_partial/footer.ejs","hash":"67f36ce6694ee1485f9728f8bef4f23d7de177b0","modified":1601870173643},{"_id":"themes/lucky/layout/_partial/head.ejs","hash":"f43ae0ec9fff66695830add6fc381e9e7ef1e296","modified":1601870173644},{"_id":"themes/lucky/layout/_partial/header.ejs","hash":"91e3d97a87522a6e67fef1f403f014e6843eafa7","modified":1601870173645},{"_id":"themes/lucky/layout/_partial/hover-effect.ejs","hash":"eecc81afad47a708056870500660f1228f2a301f","modified":1601870173645},{"_id":"themes/lucky/layout/_partial/mathjax.ejs","hash":"8609596b62c4412d260f54f8d604d6da6e709887","modified":1601870173647},{"_id":"themes/lucky/layout/_partial/live2d-widget.ejs","hash":"c2440d5df7115c92bde993e77c90b77180af9cab","modified":1601870173646},{"_id":"themes/lucky/layout/_partial/css.ejs","hash":"cb5858e0dc50d897b7e299604af21855ac5a4459","modified":1602425622566},{"_id":"themes/lucky/layout/_partial/mobile-nav.ejs","hash":"8fd6180d0f13db8b619a79fe6e3a5bcaaa07af8e","modified":1601870173648},{"_id":"themes/lucky/layout/_partial/tab-title-change.ejs","hash":"2fbf0ac7d95593c2e656a010e7d1136194070f4c","modified":1601870173658},{"_id":"themes/lucky/scripts/filters/index.js","hash":"e0c3b821ecd1cb614569282fb4f6e6f555545f8b","modified":1601870173671},{"_id":"themes/lucky/scripts/filters/meta_generator.js","hash":"a1279b521b82c33a9747fc10013d363eed06f0f3","modified":1601870173671},{"_id":"themes/lucky/scripts/helpers/wordcount.js","hash":"2014b5c5053ad737887b61014a045cc1b08799cd","modified":1601870173673},{"_id":"themes/lucky/scripts/helpers/yilia-plus-vendors.js","hash":"a1d72be30b08c5d03226f6b8360afa19f56df8a1","modified":1601870173673},{"_id":"themes/lucky/scripts/lib/core.js","hash":"00509e97554914e5b0a20e0843dc90bcf53461aa","modified":1601870173674},{"_id":"themes/lucky/layout/_partial/tools.ejs","hash":"a9277c8c665a404c3c9547f1dc1669ccf0737314","modified":1601870173659},{"_id":"themes/lucky/layout/_partial/viewer.ejs","hash":"cc1c39903aed0a0601d104238d2bbd13ad2a36f3","modified":1601870173660},{"_id":"themes/lucky/source/fonts/fonteditor.3e0d4a.svg","hash":"de1fbf8378d1966d43bf620b8acd6bf900a15a73","modified":1602419999629},{"_id":"themes/lucky/source/fonts/fonteditor.3da1ef.woff","hash":"5a945ddf318d3ca68d0a1e8695b23287ff7e9816","modified":1602419999629},{"_id":"themes/lucky/source/fonts/fonteditor.86c132.eot","hash":"c29905356fb2116a454a262d6f15cdeb593a6cec","modified":1602419999629},{"_id":"themes/lucky/source/fonts/fonteditor.bbc4b5.woff2","hash":"c748dc092f066f7e12626c801d416e64b95dacea","modified":1602419999629},{"_id":"themes/lucky/source/fonts/tooltip.4004ff.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1602419999630},{"_id":"themes/lucky/source/fonts/tooltip.d04149.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1602246605444},{"_id":"themes/lucky/source/fonts/default-skin.b257fa.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1602419999629},{"_id":"themes/lucky/source/lib/busuanzi.pure.js","hash":"f54c44e2b30e551540b83640dd8c5ff266e157d5","modified":1602246605665},{"_id":"themes/lucky/layout/_partial/left-col.ejs","hash":"70a9c60cd66ba51baccf8802d5dcce9ef1593af6","modified":1602421044432},{"_id":"themes/lucky/source/lib/default.css","hash":"c9c344d5c98cc90b5583865e71726bab1046cdeb","modified":1602246605665},{"_id":"themes/lucky/source/fonts/fonteditor.fe4d8a.ttf","hash":"95d1a4991df9ce15562ff0344b318b5fc5f9ab70","modified":1602419999629},{"_id":"themes/lucky/source/lib/clickLove.js","hash":"a35dfb7ff19796c005ee30b55fd95e39d6d59a89","modified":1602246605665},{"_id":"themes/lucky/source/lib/gitment.css","hash":"cb2e0be2c7ebbcc3e756340c811864115bf0ec56","modified":1602246605665},{"_id":"themes/lucky/source/lib/pace.min.js","hash":"8aaa675f577d5501f5f22d5ccb07c2b76310b690","modified":1602246605681},{"_id":"themes/lucky/source/img/biubiubiu.gif","hash":"cccda381f96abe91b4d698da793abd6496466d3d","modified":1602246605650},{"_id":"themes/lucky/source/lib/oauthcallback.browser.js","hash":"989b9e2638336461a9911ebf60e9a839819dd11f","modified":1602246605681},{"_id":"themes/lucky/source/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1602419999629},{"_id":"themes/lucky/source/lib/snow.js","hash":"e64ca5217bb2f11257a8b212b8868ee9331ef0eb","modified":1602246605681},{"_id":"themes/lucky/source/img/gitee.svg","hash":"5eda5e779b8407430aa53f3c6c38bd0ecc04b003","modified":1602246605665},{"_id":"themes/lucky/source/img/head.jpg","hash":"5b6f34880e460e77571126ad797ae2b9d88a4fe1","modified":1602246605665},{"_id":"themes/lucky/source/img/forkme.png","hash":"b43e6e18b84edc40636204aa0eb9f266ef54a4e7","modified":1602246605650},{"_id":"themes/lucky/source-src/css/_core.scss","hash":"be6c986efe3912378d7c8aafdc305a5d01d190a1","modified":1601870173677},{"_id":"themes/lucky/source-src/css/_function.scss","hash":"ce227b6f5a9af194fd5d455200630f32c05e151f","modified":1601870173678},{"_id":"themes/lucky/source-src/css/article-inner.scss","hash":"a3de420ab47fe0c0de4cb1857f8f041abc7a3737","modified":1601870173679},{"_id":"themes/lucky/source-src/css/archive.scss","hash":"eaa79e2f10ca713043f704feaafa001e1a339e50","modified":1601870173678},{"_id":"themes/lucky/source-src/css/article-main.scss","hash":"6e6fd3ed5b906cbbe8345c3834ce645ade5a88a7","modified":1601870173680},{"_id":"themes/lucky/source-src/css/article-nav.scss","hash":"140f07d150836909853a16147ccbb7fb5d181e60","modified":1601870173681},{"_id":"themes/lucky/source-src/css/article.scss","hash":"49602a18b080df6f23d616d49b84a4ba905579de","modified":1601870173681},{"_id":"themes/lucky/source-src/css/comment.scss","hash":"ada82b79907fde047bd415c9687917c6bc97b1d6","modified":1601870173683},{"_id":"themes/lucky/source-src/css/declare.scss","hash":"139b7fd4949ba829e75595af3797998c628a87c8","modified":1601870173687},{"_id":"themes/lucky/source-src/css/aside.scss","hash":"353587950797f62e2f808e0f9183f82a0a4228d4","modified":1601870173682},{"_id":"themes/lucky/source-src/css/footer.scss","hash":"c435c8f5e79ee0eee8b0a1343c9ded2bf65e7570","modified":1601870173704},{"_id":"themes/lucky/source-src/css/global.scss","hash":"f2785f59e80665805eec730034fe284329a1343a","modified":1601870173704},{"_id":"themes/lucky/source-src/css/fonts.scss","hash":"40da5972f7876205ed71b7ed9d6646fda2680de8","modified":1601870173688},{"_id":"themes/lucky/source-src/css/grid.scss","hash":"22c2ed05bd6ad48b1b538b0352c768674cd41a5f","modified":1601870173705},{"_id":"themes/lucky/source-src/css/hover-reveal.scss","hash":"2bdab19d10e9ca5805ed1c7a73873bf800a1f6a9","modified":1601870173706},{"_id":"themes/lucky/source-src/css/highlight.scss","hash":"b9195a58b3f554df0a1f9a687deb79edc570b731","modified":1601870173706},{"_id":"themes/lucky/source-src/css/left.scss","hash":"8d48e1e96a97da533701c67f9ad925fb39edd39d","modified":1601870173709},{"_id":"themes/lucky/source-src/css/main.scss","hash":"9611a762cf9ade760f69f7d456d7958189f2b0fd","modified":1601870173710},{"_id":"themes/lucky/source-src/css/mobile.scss","hash":"e0e15f38b817df33144b87693f649b7419ca1e9d","modified":1601870173711},{"_id":"themes/lucky/source-src/css/mobile-slider.scss","hash":"965781f40abb61930492f8937b5c4e4350a4a036","modified":1601870173710},{"_id":"themes/lucky/source-src/css/page.scss","hash":"950942bf4ebb20f0acc2edc3f949e8a0378a1de5","modified":1601870173712},{"_id":"themes/lucky/source-src/css/reward.scss","hash":"87a8204da798cf240ab36dfa73dbb8638831c8a0","modified":1601870173712},{"_id":"themes/lucky/source-src/css/scroll.scss","hash":"c94080252044b76c5af419067003fbfcc55997e9","modified":1601870173713},{"_id":"themes/lucky/source-src/css/share.scss","hash":"10599fdf0be5378cf91ceeedba9b513e852b96d3","modified":1601870173714},{"_id":"themes/lucky/source-src/css/social.scss","hash":"9b20fdde88e07cd7155d5979d6173921edf2a3bb","modified":1601870173714},{"_id":"themes/lucky/source/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1602419999629},{"_id":"themes/lucky/source/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1602419999629},{"_id":"themes/lucky/source-src/css/tags.scss","hash":"5e4caea3c35a2c1bdea73f6308a42a2f550da521","modified":1601870173716},{"_id":"themes/lucky/source-src/css/tags-cloud.scss","hash":"a292581f6ffe0128f2717a4aa0bb406b54818645","modified":1601870173715},{"_id":"themes/lucky/source-src/js/anm.js","hash":"2603a975b97619b1d5ed3babdecf44691ccd5a97","modified":1601870173720},{"_id":"themes/lucky/source-src/js/aside.js","hash":"3cd3aa6fd80ee0d2717a5cbb805777e5582ec1eb","modified":1601870173720},{"_id":"themes/lucky/source-src/css/tooltip.scss","hash":"3a46ef562a15c85c80e862ccdaa6bfa8d599af35","modified":1601870173717},{"_id":"themes/lucky/source-src/css/tools.scss","hash":"0e025eb1324fdb5ff1d409e0c392c96dd64a6ef7","modified":1601870173716},{"_id":"themes/lucky/source-src/js/main.js","hash":"e8980b7daf1ab77b1f4c74c576ce06331c34f784","modified":1601870173722},{"_id":"themes/lucky/source-src/js/fix.js","hash":"547e72b83d94611cead0bffce1f30be0cfd7cb0c","modified":1601870173722},{"_id":"themes/lucky/source-src/js/browser.js","hash":"e91e59c0cea4b29276735260eff59d2a9dbc30b8","modified":1601870173721},{"_id":"themes/lucky/source-src/js/mobile.js","hash":"46f22cd3a993897aca51c1d494afeab28e2b2072","modified":1601870173723},{"_id":"themes/lucky/source-src/js/util.js","hash":"4809dac6af821f9da41b4a434b4f2c0fea09d508","modified":1601870173725},{"_id":"themes/lucky/source-src/js/share.js","hash":"d76a873435367fc8e2bca8c91fe198f88199c900","modified":1601870173724},{"_id":"themes/lucky/layout/_partial/post/category.ejs","hash":"e777cbf959b11c4dfda649c562799899b90ab4a3","modified":1601870173649},{"_id":"themes/lucky/layout/_partial/post/changyan.ejs","hash":"086c8a88fd3bcae7ec13258df58e25d6354af2fa","modified":1601870173649},{"_id":"themes/lucky/layout/_partial/post/date.ejs","hash":"3550029e3eb23b6ce9fd68c85fa73d64c2d6c653","modified":1601870173650},{"_id":"themes/lucky/source-src/js/slider.js","hash":"a9d16e87200336af1231b33c79e69465dc0d2e65","modified":1601870173724},{"_id":"themes/lucky/source-src/js/Q.js","hash":"e56d9710afa79b31ca6b9fbd845f6d1895f5214b","modified":1601870173719},{"_id":"themes/lucky/layout/_partial/post/nav.ejs","hash":"b6a97043f9ec37e571aacacfedcda1d4d75e3c7c","modified":1601870173652},{"_id":"themes/lucky/layout/_partial/post/giteement.ejs","hash":"063126e745534ddca7801a7a3f60fcee61fcad2f","modified":1601870173650},{"_id":"themes/lucky/layout/_partial/post/tag.ejs","hash":"2c4e4ca36c9bb4318506c38aca7127f1f44d827f","modified":1601870173653},{"_id":"themes/lucky/layout/_partial/post/gitment.ejs","hash":"263bb5b60117bbefac0e74a761955cfb4026bc76","modified":1601870173651},{"_id":"themes/lucky/layout/_partial/post/title.ejs","hash":"c780794886a8a5b0dba633e06cd4eb7b6dceb783","modified":1601870173654},{"_id":"themes/lucky/layout/_partial/post/toc.ejs","hash":"8d9524cbdaacea4f2684efae85a804371fcc30aa","modified":1601870173654},{"_id":"themes/lucky/layout/_partial/post/valine.ejs","hash":"58104139bf0350e42e348f4b5354274a4ade2b04","modified":1601870173655},{"_id":"themes/lucky/source/live2d_models/chitose/.gitignore","hash":"a5a49e4d5dfb97857856eb6b0cdb2c93a387718f","modified":1602246605681},{"_id":"themes/lucky/source/live2d_models/chitose/package-lock.json","hash":"4a6d05438080bc50d718aa70beb55d1740fe06a3","modified":1602246605728},{"_id":"themes/lucky/source/live2d_models/chitose/package.json","hash":"71f3860f8051115219e29d62d304530ff223d08d","modified":1602246605728},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/.gitignore","hash":"a5a49e4d5dfb97857856eb6b0cdb2c93a387718f","modified":1602246605728},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/package-lock.json","hash":"f624ef6cf5c5f0b67095a8b1ab4c5cd9b0b3a53f","modified":1602246605759},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/package.json","hash":"380561257da291db5ddb1e270cde12bcc290ddd4","modified":1602246605759},{"_id":"themes/lucky/source/live2d_models/gf/.gitignore","hash":"a5a49e4d5dfb97857856eb6b0cdb2c93a387718f","modified":1602246605759},{"_id":"themes/lucky/source/live2d_models/gf/package-lock.json","hash":"3230e3a60dc2b86f462a489176a14a60511ec9be","modified":1602246605853},{"_id":"themes/lucky/source/live2d_models/gf/package.json","hash":"d6f396725076a3c4b5f71bb5c1c7647ba4afb482","modified":1602246605853},{"_id":"themes/lucky/source/live2d_models/haru/.gitignore","hash":"a5a49e4d5dfb97857856eb6b0cdb2c93a387718f","modified":1602246605853},{"_id":"themes/lucky/source/live2d_models/haru/package-lock.json","hash":"771c674e7c1e491ecdd07bb2ad3629d08ccebc94","modified":1602246605931},{"_id":"themes/lucky/source/live2d_models/haruto/.gitignore","hash":"a5a49e4d5dfb97857856eb6b0cdb2c93a387718f","modified":1602246605931},{"_id":"themes/lucky/source/live2d_models/haru/package.json","hash":"30e8dca84dcf308b1176890a54df1074f6abd224","modified":1602246605931},{"_id":"themes/lucky/source/live2d_models/haruto/package-lock.json","hash":"78674575e0e719c83ef394161bc55ca3c350b4ba","modified":1602246605946},{"_id":"themes/lucky/source/live2d_models/haruto/package.json","hash":"b66008cfbefeaabb9665c2c120f421ac8510ef57","modified":1602246605946},{"_id":"themes/lucky/source/live2d_models/hibiki/.gitignore","hash":"a5a49e4d5dfb97857856eb6b0cdb2c93a387718f","modified":1602246605962},{"_id":"themes/lucky/source/live2d_models/hibiki/package-lock.json","hash":"28b70ca4da74fe4cd3095d4c60f5baf9cede691c","modified":1602246605978},{"_id":"themes/lucky/source/live2d_models/hibiki/package.json","hash":"8bb9ac8b7496d29da5338e5f49f08e0eef322bcc","modified":1602246605993},{"_id":"themes/lucky/source/live2d_models/hijiki/.gitignore","hash":"a5a49e4d5dfb97857856eb6b0cdb2c93a387718f","modified":1602246605993},{"_id":"themes/lucky/source/live2d_models/hijiki/package-lock.json","hash":"4cada5114eba9ebcb15d28b4f8b283c8a1381cfc","modified":1602246606009},{"_id":"themes/lucky/source/live2d_models/hijiki/package.json","hash":"dcdb3a8e061ce390eb60c4a7322cb2faf12de182","modified":1602246606009},{"_id":"themes/lucky/source/live2d_models/izumi/.gitignore","hash":"a5a49e4d5dfb97857856eb6b0cdb2c93a387718f","modified":1602246606009},{"_id":"themes/lucky/source/live2d_models/izumi/package-lock.json","hash":"75316bdbc64951c5439683c692faa15ecc988f29","modified":1602246606103},{"_id":"themes/lucky/source/live2d_models/izumi/package.json","hash":"eed125d4cfbc4ec5e7f76c28137c14b6e171e3a1","modified":1602246606103},{"_id":"themes/lucky/source/live2d_models/koharu/.gitignore","hash":"a5a49e4d5dfb97857856eb6b0cdb2c93a387718f","modified":1602246606103},{"_id":"themes/lucky/source/live2d_models/koharu/package-lock.json","hash":"19ebf212538a260d4bbfd465a0fb51091fd98422","modified":1602246606118},{"_id":"themes/lucky/source/live2d_models/koharu/package.json","hash":"70086556d9bdeee2cb31ccdd4df1fd900862150a","modified":1602246606118},{"_id":"themes/lucky/source/live2d_models/miku/.gitignore","hash":"a5a49e4d5dfb97857856eb6b0cdb2c93a387718f","modified":1602246606118},{"_id":"themes/lucky/source/live2d_models/miku/package-lock.json","hash":"d4a84613c4ed19998cd53a2d653c91c0df22eb11","modified":1602246606149},{"_id":"themes/lucky/source/live2d_models/ni-j/.gitignore","hash":"a5a49e4d5dfb97857856eb6b0cdb2c93a387718f","modified":1602246606149},{"_id":"themes/lucky/layout/_partial/post/share.ejs","hash":"3591d3fdd846d7ad88d8e110848614803026f1da","modified":1601870173653},{"_id":"themes/lucky/source/live2d_models/miku/package.json","hash":"76d8e1d8c75a403075731cfddb16807604e12d27","modified":1602246606149},{"_id":"themes/lucky/source/live2d_models/ni-j/package-lock.json","hash":"fa1adef12428cf14a7ba86487fa313e2cdac1a47","modified":1602246606196},{"_id":"themes/lucky/source/live2d_models/ni-j/package.json","hash":"57588d4543fb95e044ae8cd07ee7cbba736eaf15","modified":1602246606196},{"_id":"themes/lucky/source/live2d_models/nico/.gitignore","hash":"a5a49e4d5dfb97857856eb6b0cdb2c93a387718f","modified":1602246606201},{"_id":"themes/lucky/source/live2d_models/nico/package-lock.json","hash":"935ccbc62777cd0715eccccdf1d51cd1f638fed1","modified":1602246606239},{"_id":"themes/lucky/source/live2d_models/nico/package.json","hash":"e213d396d67a72d64591379886b11f69cf4c252b","modified":1602246606240},{"_id":"themes/lucky/source/live2d_models/nietzsche/.gitignore","hash":"a5a49e4d5dfb97857856eb6b0cdb2c93a387718f","modified":1602246606241},{"_id":"themes/lucky/source/live2d_models/nietzsche/package-lock.json","hash":"82a855b6236b599919dd223c673d73d605aa3f3a","modified":1602246606264},{"_id":"themes/lucky/source/live2d_models/nietzsche/package.json","hash":"76fb3f6a62693d3328c79fbfd947bff213b8aaf8","modified":1602246606264},{"_id":"themes/lucky/source/live2d_models/nipsilon/.gitignore","hash":"a5a49e4d5dfb97857856eb6b0cdb2c93a387718f","modified":1602246606279},{"_id":"themes/lucky/source/live2d_models/nito/.gitignore","hash":"a5a49e4d5dfb97857856eb6b0cdb2c93a387718f","modified":1602246606311},{"_id":"themes/lucky/source/live2d_models/nipsilon/package-lock.json","hash":"e0fc08c90b3ad99055d3a0a67a7f77ee12d3d59e","modified":1602246606311},{"_id":"themes/lucky/source/live2d_models/nipsilon/package.json","hash":"53b630940813cb4446d5c0205acf52702423745a","modified":1602246606311},{"_id":"themes/lucky/source/live2d_models/nito/package-lock.json","hash":"30dbd6efd2e8763111e6330de5d62e3fffa9ee3b","modified":1602246606342},{"_id":"themes/lucky/source/live2d_models/nito/package.json","hash":"877ec302bb775f2f804607e0fb1a0380309d32f6","modified":1602246606342},{"_id":"themes/lucky/source/live2d_models/shizuku/.gitignore","hash":"a5a49e4d5dfb97857856eb6b0cdb2c93a387718f","modified":1602246606342},{"_id":"themes/lucky/source/live2d_models/shizuku/package-lock.json","hash":"dc79e1cdc06c92a270c7135fe92f2961e2e82511","modified":1602246606436},{"_id":"themes/lucky/source/live2d_models/shizuku/package.json","hash":"a1a1858e42fb78ae8c18290fe134550bd69c77c7","modified":1602246606436},{"_id":"themes/lucky/source/live2d_models/tororo/.gitignore","hash":"a5a49e4d5dfb97857856eb6b0cdb2c93a387718f","modified":1602246606436},{"_id":"themes/lucky/source/live2d_models/tororo/package-lock.json","hash":"3aa551ab42dab5dace64ff98ada983a0c9bb890e","modified":1602246606451},{"_id":"themes/lucky/source/live2d_models/tororo/package.json","hash":"6136f636f8c3a624e88ba637495bc28c8224a11f","modified":1602246606451},{"_id":"themes/lucky/source/live2d_models/tsumiki/.gitignore","hash":"a5a49e4d5dfb97857856eb6b0cdb2c93a387718f","modified":1602246606451},{"_id":"themes/lucky/source/live2d_models/tsumiki/package-lock.json","hash":"5d1417d0740405455efca8bd605ac1889b5e878e","modified":1602246606514},{"_id":"themes/lucky/source/live2d_models/tsumiki/package.json","hash":"8710ba4a0168d9d9001b751f0707593d5edb2d3b","modified":1602246606514},{"_id":"themes/lucky/source/live2d_models/unitychan/package-lock.json","hash":"b8c183516fd3a2e77704864ac7f9f875501a4e6e","modified":1602246606529},{"_id":"themes/lucky/source/live2d_models/unitychan/.gitignore","hash":"a5a49e4d5dfb97857856eb6b0cdb2c93a387718f","modified":1602246606514},{"_id":"themes/lucky/source/live2d_models/unitychan/package.json","hash":"fa81ae690c83a3cd6e9c5060ab023c0174319a16","modified":1602246606545},{"_id":"themes/lucky/source/live2d_models/wanko/.gitignore","hash":"a5a49e4d5dfb97857856eb6b0cdb2c93a387718f","modified":1602246606545},{"_id":"themes/lucky/source/live2d_models/wanko/package-lock.json","hash":"aecf9030935b7a40e4aa0ec1711341e85c0dc431","modified":1602246606561},{"_id":"themes/lucky/source/live2d_models/wanko/package.json","hash":"8314b004ab7e61c9f126c0feec76f0798d9d94e3","modified":1602246606561},{"_id":"themes/lucky/source/live2d_models/z16/.gitignore","hash":"a5a49e4d5dfb97857856eb6b0cdb2c93a387718f","modified":1602246606561},{"_id":"themes/lucky/source/live2d_models/z16/package-lock.json","hash":"98e33466bb72f3764016360dea3be1a82798964f","modified":1602246606576},{"_id":"themes/lucky/source/live2d_models/z16/package.json","hash":"669bdcdfcfb6b216f990761656c80b2c7695c729","modified":1602246606576},{"_id":"themes/lucky/source-src/js/viewer.js","hash":"aeb3c1cc4d556279768756d0a255ac7c52c4d2c8","modified":1601870173726},{"_id":"themes/lucky/source/plugins/TweenMax/HoverImg.js","hash":"b1c7e1357556002f711a792fac71ac61519c90e0","modified":1602246606576},{"_id":"themes/lucky/layout/_partial/post/word.ejs","hash":"dcfdc5eba0ac42ec469be6447e1be5f7ef5c0819","modified":1601870173656},{"_id":"themes/lucky/source/plugins/TweenMax/charming.min.js","hash":"26534e6a69842166331733e6343f083b5d94afdd","modified":1602246606576},{"_id":"themes/lucky/source/plugins/activate-power-mode/activate-power-mode.js","hash":"4352d265479b9f5ca567e5143150f4a3c24e200d","modified":1602246606576},{"_id":"themes/lucky/source/plugins/live2d-widget.js/manifest.json","hash":"a2b43740af056dc5ccf5348f294fc6f7401b49b8","modified":1602246606607},{"_id":"themes/lucky/source-src/css/core/_animation.scss","hash":"8b4b490f55a3258cf805d787c446ab6c6625c181","modified":1601870173684},{"_id":"themes/lucky/source-src/css/core/_media-queries.scss","hash":"a3ec98ef49ba21740392098e353ea0d22f2afafa","modified":1601870173684},{"_id":"themes/lucky/source-src/css/core/_mixin.scss","hash":"3b764eeb59c0d42100bcde9999056a310cb9ee77","modified":1601870173685},{"_id":"themes/lucky/source-src/css/core/_variables.scss","hash":"bbf1bd784a6dd76dde57ea18a3532bc0f04ae690","modified":1601870173687},{"_id":"themes/lucky/source-src/css/core/_reset.scss","hash":"cb4eab3a999a5de601f346254442480a64bc4f68","modified":1601870173686},{"_id":"themes/lucky/source/plugins/live2d-widget.js/L2Dwidget.min.js","hash":"ea13512df765f9cb10f96870b8ad3f1c23d14e32","modified":1602246606592},{"_id":"themes/lucky/source-src/css/fonts/fonteditor.eot","hash":"c29905356fb2116a454a262d6f15cdeb593a6cec","modified":1601870173695},{"_id":"themes/lucky/source-src/css/fonts/fonteditor.ttf","hash":"95d1a4991df9ce15562ff0344b318b5fc5f9ab70","modified":1601870173697},{"_id":"themes/lucky/source-src/css/img/checkered-pattern.png","hash":"049262fa0886989d750637b264bed34ab51c23c8","modified":1601870173707},{"_id":"themes/lucky/source-src/css/fonts/fonteditor.woff","hash":"5a945ddf318d3ca68d0a1e8695b23287ff7e9816","modified":1601870173698},{"_id":"themes/lucky/source-src/css/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1601870173708},{"_id":"themes/lucky/source-src/css/img/tooltip.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1601870173708},{"_id":"themes/lucky/source-src/css/fonts/fonteditor.woff2","hash":"c748dc092f066f7e12626c801d416e64b95dacea","modified":1601870173699},{"_id":"themes/lucky/source-src/css/fonts/fonteditor.svg","hash":"de1fbf8378d1966d43bf620b8acd6bf900a15a73","modified":1601870173696},{"_id":"themes/lucky/source/plugins/ribbon.js/ribbon.js","hash":"62ff1ba692f3153d0288c514c42c6c92cc17e9b6","modified":1602246606623},{"_id":"themes/lucky/source/live2d_models/chitose/assets/chitose.pose.json","hash":"52f9b579ca15b4b2dc4c5fa71172472dd6924264","modified":1602246605681},{"_id":"themes/lucky/source/plugins/ribbon.js/ribbon.min.js","hash":"e6136a6243e04faca95844f47c21b070ade3661a","modified":1602246606623},{"_id":"themes/lucky/source/live2d_models/chitose/assets/chitose.model.json","hash":"a9b9986e72b8245f036f6ada876b84a3986c4218","modified":1602246605681},{"_id":"themes/lucky/source/live2d_models/chitose/assets/chitose.physics.json","hash":"5ff4acbc4cf23a7f2ff211f50e53df6f6b7c0995","modified":1602246605681},{"_id":"themes/lucky/source/live2d_models/haruto/assets/haruto.model.json","hash":"76f915f7edbd9c47df0ca041dddb151c0c93a2bf","modified":1602246605931},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/Epsilon2.1.model.json","hash":"a47e7d1fd76d5a90d383fa049295c1cdd1546845","modified":1602246605728},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/Epsilon2.1.physics.json","hash":"bbf1a8cb496831fbf9715d8431b82fffc9f89257","modified":1602246605728},{"_id":"themes/lucky/source/live2d_models/haruto/assets/haruto.physics.json","hash":"2fbf886979212357ba293bd35884f2cb5b26b6a6","modified":1602246605931},{"_id":"themes/lucky/source/live2d_models/hijiki/assets/hijiki.model.json","hash":"feff43bf7498d213982c3736c2c029664e4bcbd2","modified":1602246605993},{"_id":"themes/lucky/source/live2d_models/hijiki/assets/hijiki.pose.json","hash":"81438bf69b32c7c11e311b4fe043730cdc7b7ec2","modified":1602246605993},{"_id":"themes/lucky/source/live2d_models/hibiki/assets/hibiki.model.json","hash":"73bbc0004fc21039452f80dc6dc3c287723aedc4","modified":1602246605962},{"_id":"themes/lucky/source/live2d_models/hibiki/assets/hibiki.physics.json","hash":"ba100c7a8c3fc777d05f41e3371d18c457febfa7","modified":1602246605962},{"_id":"themes/lucky/source/live2d_models/koharu/assets/koharu.model.json","hash":"ceccdefd776b7c9475a29cff0842796e4f58b7e9","modified":1602246606103},{"_id":"themes/lucky/source/live2d_models/izumi/assets/izumi.model.json","hash":"3ba8caa98a3af7b09d7a79419a691f543a1e3ea4","modified":1602246606009},{"_id":"themes/lucky/source/live2d_models/miku/assets/miku.model.json","hash":"32e49dfc6cb4d9c537453bb083aab39ed708c476","modified":1602246606118},{"_id":"themes/lucky/source/live2d_models/izumi/assets/izumi.physics.json","hash":"cee4a6e1c8ec3e1c2bfc8028ff49dc9c34c06258","modified":1602246606009},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/ni-j.model.json","hash":"3c77e66d6436136bf50d5fdbc8ee8cd543a35e01","modified":1602246606196},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/ni-j.physics.json","hash":"ef2dd194f934f129f5f4db7785a9c7b7e45671ff","modified":1602246606196},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/ni-j.pose.json","hash":"a8c949d20eebf1e716a495bf806b2eccff62a925","modified":1602246606196},{"_id":"themes/lucky/source/live2d_models/miku/assets/miku.physics.json","hash":"d5ca7f215044ba5bf1cdb8045a5c99b64ec258ce","modified":1602246606118},{"_id":"themes/lucky/source/live2d_models/koharu/assets/koharu.physics.json","hash":"2fbf886979212357ba293bd35884f2cb5b26b6a6","modified":1602246606103},{"_id":"themes/lucky/source/live2d_models/nico/assets/nico.pose.json","hash":"a8c949d20eebf1e716a495bf806b2eccff62a925","modified":1602246606239},{"_id":"themes/lucky/source/live2d_models/gf/assets/Gantzert_Felixander.model.json","hash":"d5caeb1c758088ff03bc190cd8dcee98e6e02392","modified":1602246605759},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/nietzsche.physics.json","hash":"5e83e055f99be8c8752fdcad30f9ed043111b83b","modified":1602246606264},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/nietzsche.pose.json","hash":"a8c949d20eebf1e716a495bf806b2eccff62a925","modified":1602246606264},{"_id":"themes/lucky/source/live2d_models/nico/assets/nico.model.json","hash":"9f007936f4748e80a1da60ca078daed595acffee","modified":1602246606237},{"_id":"themes/lucky/source/live2d_models/nico/assets/nico.physics.json","hash":"1db72a0413771e14d74de955af728224318e91d1","modified":1602246606238},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/nipsilon.pose.json","hash":"a8c949d20eebf1e716a495bf806b2eccff62a925","modified":1602246606311},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/nietzche.model.json","hash":"4f8fb457ddf9b0aa930cbcd4a3258ccdbf9e7506","modified":1602246606264},{"_id":"themes/lucky/source/live2d_models/nito/assets/nito.physics.json","hash":"27db548eec3c5f3c71330e675b3f602cd86f2242","modified":1602246606342},{"_id":"themes/lucky/source/live2d_models/nito/assets/nito.pose.json","hash":"a8c949d20eebf1e716a495bf806b2eccff62a925","modified":1602246606342},{"_id":"themes/lucky/source/live2d_models/nito/assets/nito.model.json","hash":"7d7930d1fc8114ae0e694624db457612dca64814","modified":1602246606342},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/shizuku.model.json","hash":"19a05bd41b806a935cea42c2000626fc82da2536","modified":1602246606404},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/shizuku.pose.json","hash":"ac5505efbf80ba0a2e5783d67fe232bc5c6f1f80","modified":1602246606404},{"_id":"themes/lucky/source/live2d_models/tororo/assets/tororo.model.json","hash":"3b96ea33460642d288c98327444966d93a0c11ba","modified":1602246606451},{"_id":"themes/lucky/source/live2d_models/tororo/assets/tororo.pose.json","hash":"81438bf69b32c7c11e311b4fe043730cdc7b7ec2","modified":1602246606451},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/shizuku.physics.json","hash":"6484d646e79a44c83784c6ae434cf7349746c5c8","modified":1602246606404},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/tsumiki.model.json","hash":"3d5d18ccaf9dc5d4bb42e1c6c3a3d8d89b55524b","modified":1602246606514},{"_id":"themes/lucky/source/live2d_models/unitychan/assets/unitychan.model.json","hash":"6baa976186d98050740e02eadc796036a16f6fa2","modified":1602246606529},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/tsumiki.physics.json","hash":"737f5ef200fd8d33b75bf19176dcff311591bd8f","modified":1602246606514},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/nipsilon.model.json","hash":"271e40dfe9c04c8b5f5e4c6a9aa4f7ee6c65cff9","modified":1602246606311},{"_id":"themes/lucky/source/live2d_models/z16/assets/z16.model.json","hash":"e69f3d2ecc9bf51b3972ad9df8f6aaa31956910c","modified":1602246606576},{"_id":"themes/lucky/source/live2d_models/z16/assets/z16.physics.json","hash":"67f13f60030d7e4c7f824c001ab5254ce4b9bafd","modified":1602246606576},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/nipsilon.physics.json","hash":"5e83e055f99be8c8752fdcad30f9ed043111b83b","modified":1602246606311},{"_id":"themes/lucky/source/live2d_models/unitychan/assets/unitychan.physics.json","hash":"d32ffd9263044d17d46facb5d878ea3683b8023e","modified":1602246606529},{"_id":"themes/lucky/source-src/css/fonts/bak/fonts.scss","hash":"db395b79fd10912d95a53af80e38019b3c75e207","modified":1601870173690},{"_id":"themes/lucky/source/live2d_models/wanko/assets/wanko.model.json","hash":"b98a8ce54fbcf1606a489f1bc5f26b1a18c82d79","modified":1602246606561},{"_id":"themes/lucky/source-src/css/fonts/bak/iconfont.svg","hash":"75767c904d483d9b93469afb6b92bb6bdface639","modified":1601870173692},{"_id":"themes/lucky/source-src/css/fonts/bak/iconfont.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1601870173694},{"_id":"themes/lucky/source-src/css/fonts/yilia-plus/fonteditor.svg","hash":"c65b80c65e6042a778011798a4e60832ed424c92","modified":1601870173701},{"_id":"themes/lucky/source-src/css/fonts/bak/iconfont.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1601870173691},{"_id":"themes/lucky/source-src/css/fonts/yilia-plus/fonteditor.eot","hash":"de1e6a237496055048752b719dbbb4872bf6aaa9","modified":1601870173700},{"_id":"themes/lucky/source/plugins/ribbon.js/demo/index.html","hash":"f3642f2c6a53e0dbbd4a493c7aeaa677508d21bc","modified":1602246606623},{"_id":"themes/lucky/source-src/css/fonts/yilia-plus/fonteditor.ttf","hash":"eab3ed2ad51d365b48c647a4ab0fae7e5a8368a1","modified":1601870173702},{"_id":"themes/lucky/source/live2d_models/chitose/assets/exp/f01.exp.json","hash":"84073a497ddb6e56c6cfc244a0fb217ba473abf9","modified":1602246605696},{"_id":"themes/lucky/source/live2d_models/chitose/assets/exp/f02.exp.json","hash":"5b3dfc33ba22945adb77efacb9c55efbfd4975f9","modified":1602246605696},{"_id":"themes/lucky/source/live2d_models/chitose/assets/exp/f03.exp.json","hash":"a506220e6b908154eea59f4bcfd73e7a457616b6","modified":1602246605696},{"_id":"themes/lucky/source/live2d_models/chitose/assets/exp/f04.exp.json","hash":"6fee0e4d489e8ca3b7252b9dfc7c25cbe6a6a1e7","modified":1602246605696},{"_id":"themes/lucky/source/live2d_models/chitose/assets/exp/f05.exp.json","hash":"154b1b33701c61570e8adc5cab977ea3198ade6a","modified":1602246605696},{"_id":"themes/lucky/source/live2d_models/chitose/assets/exp/f06.exp.json","hash":"f3db49d621e2008b9eb59fba98e10db5dbd19d3d","modified":1602246605696},{"_id":"themes/lucky/source/live2d_models/chitose/assets/exp/f07.exp.json","hash":"1ad00a1e4843b5b31b0c43fa292193bb049f6779","modified":1602246605696},{"_id":"themes/lucky/source-src/css/fonts/yilia-plus/fonteditor.woff","hash":"555d609b08a87cee313fa64ce4677cc90aa9512d","modified":1601870173703},{"_id":"themes/lucky/source/live2d_models/chitose/assets/mtn/chitose_idle.mtn","hash":"f3d1ab532e49a20e98cadb0290c959d7f1086eb6","modified":1602246605728},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/exp/f01.exp.json","hash":"84073a497ddb6e56c6cfc244a0fb217ba473abf9","modified":1602246605728},{"_id":"themes/lucky/source/live2d_models/chitose/assets/mtn/chitose_kime01.mtn","hash":"97308ef8c5798374a6b1ba6cdec53d6732a4728a","modified":1602246605728},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/exp/f02.exp.json","hash":"fb553024b5a62d0a54ba32c40b5d12598dc434e7","modified":1602246605728},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/exp/f03.exp.json","hash":"02d1ac5b6d9019a1ee89b9d4d82894458deae35d","modified":1602246605728},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/exp/f04.exp.json","hash":"05dccc2eab9b9d019af1a9cc6f748276376dd828","modified":1602246605728},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/exp/f05.exp.json","hash":"b53d5e42ca3105b19e5fe5fbf7fe4a6b4ced61f2","modified":1602246605743},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/exp/f06.exp.json","hash":"0a7f5b3ac25b13d8688b1f529f3279a8342e3c75","modified":1602246605743},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/exp/f07.exp.json","hash":"d501ae71f1e36ff7e7834422900c0e84b8de8f28","modified":1602246605743},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/exp/f08.exp.json","hash":"1dbb31e341c9fcc59475bd2594d60648c0c3e51c","modified":1602246605743},{"_id":"themes/lucky/source-src/css/fonts/bak/iconfont.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1601870173693},{"_id":"themes/lucky/source/live2d_models/chitose/assets/mtn/chitose_kime02.mtn","hash":"3eed16b70dc2f7b7e50417f19207e3cabccaa166","modified":1602246605728},{"_id":"themes/lucky/source/live2d_models/chitose/assets/mtn/chitose_handwave.mtn","hash":"3d7a0f7ffda7d2ac3bb6fde6ccc49521c0d7713b","modified":1602246605728},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_idle_01.mtn","hash":"b4e67d3091aba34efcf9ff3659fa36f6f1a4bd22","modified":1602246605743},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_02.mtn","hash":"7a000a218b098172eeeb8a81e551d558bbaa6f8a","modified":1602246605759},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_01.mtn","hash":"eecc2854bea6bf90c9f0a0013281ec600c32f2bc","modified":1602246605743},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_03.mtn","hash":"3568fc9f7ba95f2521abec8e1241da62581ab7cf","modified":1602246605759},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_04.mtn","hash":"b717b620d044859762716d104e137dc9c09c8cce","modified":1602246605759},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_05.mtn","hash":"f3a671a29f5d831f04284a8d5fe5adb90cd1e400","modified":1602246605759},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_06.mtn","hash":"fec328bedb7d5af53e0cfd0eb5991f4574c3676a","modified":1602246605759},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_sp_01.mtn","hash":"d72c01b4d9c4faf0f4cb472c390a35712b2ee7f5","modified":1602246605759},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_07.mtn","hash":"2fd581bfc662b050c41afb904b9ae54b59d7d010","modified":1602246605759},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_08.mtn","hash":"e61753f72a1c170926c59c71490596aaeee30ca6","modified":1602246605759},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_sp_04.mtn","hash":"42ae0fbe437cd97c623c09bee100c3695abb30ce","modified":1602246605759},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_sp_05.mtn","hash":"9eb78800c41148712ac30e1342f025110db0f8d3","modified":1602246605759},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_shake_01.mtn","hash":"8f81d974ada9b6800fa6eb852a41906a9e1f4c77","modified":1602246605759},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_sp_02.mtn","hash":"08f6d29160ce7100441efdd8ac7bbd89fc9c5120","modified":1602246605759},{"_id":"themes/lucky/source/live2d_models/gf/assets/mtn/A_00_idle.mtn","hash":"d383fc08986b4d1f746d71abbea6f7b5f54dcc95","modified":1602246605837},{"_id":"themes/lucky/source/live2d_models/gf/assets/mtn/A_01.mtn","hash":"91d2def2e00393fcedaaca36cd80340fa95a2d1b","modified":1602246605837},{"_id":"themes/lucky/source/live2d_models/gf/assets/mtn/A_02.mtn","hash":"9283c809509daf3f580dcb92bab14960b5a89283","modified":1602246605837},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_sp_03.mtn","hash":"55c11be6e505791de438c43ad25c31409713544a","modified":1602246605759},{"_id":"themes/lucky/source/live2d_models/gf/assets/mtn/A_03.mtn","hash":"afec07ed22acdf28a5c49b78c560e29c3c2cfaa0","modified":1602246605853},{"_id":"themes/lucky/source/live2d_models/gf/assets/mtn/A_05.mtn","hash":"40ad1e684108035c6478b76c9e4e1953104725da","modified":1602246605853},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/haru01.pose.json","hash":"4fb902065bd3f309fa0029fe2505424851fd489f","modified":1602246605853},{"_id":"themes/lucky/source/live2d_models/gf/assets/mtn/A_04.mtn","hash":"50360a6572518b447af3315236659a576aa1b248","modified":1602246605853},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/haru02.model.json","hash":"ffed6d4654deeb772e389213f84701940ee0126f","modified":1602246605899},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/haru02.pose.json","hash":"4fb902065bd3f309fa0029fe2505424851fd489f","modified":1602246605899},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/haru02.physics.json","hash":"490ab4735f5cddca766344468591c0eb90cda1f7","modified":1602246605899},{"_id":"themes/lucky/source/live2d_models/haruto/assets/mtn/01.mtn","hash":"61d7d590d9feb71b32fd6bd142b59410d75bc1fa","modified":1602246605946},{"_id":"themes/lucky/source/live2d_models/haruto/assets/mtn/03.mtn","hash":"a72b697a92a7cff40d15774b143b465b34cee5e6","modified":1602246605946},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/haru01.model.json","hash":"cab2aac3d697eafa420e8a02b1f52c1f19666ffd","modified":1602246605853},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/haru01.physics.json","hash":"490ab4735f5cddca766344468591c0eb90cda1f7","modified":1602246605853},{"_id":"themes/lucky/source/live2d_models/haruto/assets/mtn/06.mtn","hash":"df10cc1d333c96da1296a4853c1ddbd44d8a11f3","modified":1602246605946},{"_id":"themes/lucky/source/live2d_models/haruto/assets/mtn/05.mtn","hash":"637e00442da4042cd4b0ed2cc62ffb1559881814","modified":1602246605946},{"_id":"themes/lucky/source/live2d_models/haruto/assets/mtn/07.mtn","hash":"d8c9410135c81604eba665b59808089808e0851a","modified":1602246605946},{"_id":"themes/lucky/source/live2d_models/haruto/assets/mtn/02.mtn","hash":"efc99efdff39c93372cff0f6d62c4e748e1a5593","modified":1602246605946},{"_id":"themes/lucky/source/live2d_models/haruto/assets/mtn/04.mtn","hash":"32c888667455a3ff6f1b04f910c1a5cc4de30af0","modified":1602246605946},{"_id":"themes/lucky/source/live2d_models/hibiki/assets/exp/f01.exp.json","hash":"84073a497ddb6e56c6cfc244a0fb217ba473abf9","modified":1602246605962},{"_id":"themes/lucky/source/live2d_models/hibiki/assets/exp/f02.exp.json","hash":"a5f786a8ebce6d2b14efcd4476179ed324c8def6","modified":1602246605962},{"_id":"themes/lucky/source/live2d_models/hibiki/assets/exp/f03.exp.json","hash":"b8f958f736acd4eb7433043fbae946487e872f5b","modified":1602246605962},{"_id":"themes/lucky/source/live2d_models/hibiki/assets/exp/f04.exp.json","hash":"19fdb5558be54a9ec6d882e2d1780a369bc66b62","modified":1602246605962},{"_id":"themes/lucky/source/live2d_models/hibiki/assets/exp/f05.exp.json","hash":"8fdbc6eabb1890bc5953f170f95e4404bd3d62b4","modified":1602246605962},{"_id":"themes/lucky/source/live2d_models/hibiki/assets/exp/f06.exp.json","hash":"b8ee09beda85aff415e6598ecd6573a238e15d18","modified":1602246605962},{"_id":"themes/lucky/source/live2d_models/haruto/assets/mtn/08.mtn","hash":"9b95ef8548b979d1fca557c74f8d66fb15b34578","modified":1602246605946},{"_id":"themes/lucky/source/live2d_models/haruto/assets/mtn/idle_02.mtn","hash":"d130dd1d194f05b3eb5391289b0339999e37c3a6","modified":1602246605946},{"_id":"themes/lucky/source/live2d_models/haruto/assets/mtn/09.mtn","hash":"ecf1283b72e1c4b7e3a97343cd97726813f18790","modified":1602246605946},{"_id":"themes/lucky/source/live2d_models/hibiki/assets/mtn/hibiki_02.mtn","hash":"985154bee77e2934afe74a45071f51e0aa1ac84d","modified":1602246605978},{"_id":"themes/lucky/source/live2d_models/hibiki/assets/mtn/hibiki_03.mtn","hash":"0b2e7cb2a32b70a629d9d21205863bb163d06d47","modified":1602246605978},{"_id":"themes/lucky/source/live2d_models/hibiki/assets/mtn/hibiki_01.mtn","hash":"cd220b89c26e1267fd7ab8f7cfc714fcd4c3b5a3","modified":1602246605978},{"_id":"themes/lucky/source/live2d_models/hibiki/assets/mtn/idle_01.mtn","hash":"3fac7f98ab71858018cbbf21b5a3ad99166d275b","modified":1602246605978},{"_id":"themes/lucky/source/live2d_models/hibiki/assets/mtn/hibiki_05.mtn","hash":"67dc8d35f050e36d08010d55ddbfd06544fb7ad5","modified":1602246605978},{"_id":"themes/lucky/source/live2d_models/hibiki/assets/mtn/idle_02.mtn","hash":"9f7dae129a20775b3209a16ee28e27f496e90ba5","modified":1602246605978},{"_id":"themes/lucky/source/live2d_models/hibiki/assets/mtn/hibiki_04.mtn","hash":"6a753859998d7afa17f119f37c5765f0c10b7bca","modified":1602246605978},{"_id":"themes/lucky/source/live2d_models/hibiki/assets/mtn/idle_04.mtn","hash":"80d4e53606b3268623b03d12a28570efdb5739ad","modified":1602246605978},{"_id":"themes/lucky/source/live2d_models/hibiki/assets/snd/hibiki_03.mp3","hash":"df05cb8288b17e1ad00ed66a731f1558db28cf9b","modified":1602246605978},{"_id":"themes/lucky/source/live2d_models/hibiki/assets/mtn/idle_03.mtn","hash":"c85916f8699673b0511fd00cd1953896879e0cc5","modified":1602246605978},{"_id":"themes/lucky/source/live2d_models/hibiki/assets/snd/hibiki_01.mp3","hash":"2880911aa4a85958fe02e54b912fbf7e6a1896c6","modified":1602246605978},{"_id":"themes/lucky/source/live2d_models/hibiki/assets/snd/hibiki_04.mp3","hash":"57d76906838b186bee2d47f768e54ac18e44d472","modified":1602246605978},{"_id":"themes/lucky/source/live2d_models/hijiki/assets/mtn/00_idle.mtn","hash":"b224c60e463b9f71ddbfc0c720e430496c175f4f","modified":1602246605993},{"_id":"themes/lucky/source/live2d_models/hibiki/assets/snd/hibiki_05.mp3","hash":"e8788bb9e92467e21933ac2140114a21b9ad215a","modified":1602246605978},{"_id":"themes/lucky/source/live2d_models/hijiki/assets/mtn/02.mtn","hash":"7eafc52edc73b7cb80ae70d34b43c6ac778fa47b","modified":1602246606009},{"_id":"themes/lucky/source/live2d_models/hijiki/assets/mtn/03.mtn","hash":"f900737c7a98441cbb2e05255427e6260e19ae68","modified":1602246606009},{"_id":"themes/lucky/source/live2d_models/hijiki/assets/mtn/01.mtn","hash":"fb550833ae22c9954c3e01df37ed29b2d61700f2","modified":1602246605993},{"_id":"themes/lucky/source/live2d_models/hijiki/assets/mtn/06.mtn","hash":"ad404bd852d276cdd3d054c953e23f90e4e45ae1","modified":1602246606009},{"_id":"themes/lucky/source/live2d_models/hijiki/assets/mtn/05.mtn","hash":"dd20ad24b5d1830a5d44b9bccb28f922eea5e0e5","modified":1602246606009},{"_id":"themes/lucky/source/live2d_models/hijiki/assets/mtn/07.mtn","hash":"b7f2e3a9fa4f3ffbb6e64a08f8d9f45ca1868ffb","modified":1602246606009},{"_id":"themes/lucky/source/live2d_models/izumi/assets/exp/f01.exp.json","hash":"84073a497ddb6e56c6cfc244a0fb217ba473abf9","modified":1602246606009},{"_id":"themes/lucky/source/live2d_models/izumi/assets/exp/f02.exp.json","hash":"d4c339f80452528f6cacba3ffe97fbb9e2e4d144","modified":1602246606009},{"_id":"themes/lucky/source/live2d_models/izumi/assets/exp/f03.exp.json","hash":"fc1f79f65c09c845f08ee92d237f8cfabe90a3c6","modified":1602246606009},{"_id":"themes/lucky/source/live2d_models/izumi/assets/exp/f04.exp.json","hash":"2e4f19882061c1b9bf49537244550cb5c9dd8a18","modified":1602246606009},{"_id":"themes/lucky/source/live2d_models/izumi/assets/exp/f05.exp.json","hash":"b0c99350872f614a2a7f60e6479a4799d2d74986","modified":1602246606009},{"_id":"themes/lucky/source/live2d_models/izumi/assets/exp/f06.exp.json","hash":"fd90baab724e71a25c8fd1eba2fab97974906374","modified":1602246606009},{"_id":"themes/lucky/source/live2d_models/izumi/assets/exp/f07.exp.json","hash":"bb8dc60fc59444fee419265e68216bdcc0282b0b","modified":1602246606009},{"_id":"themes/lucky/source/live2d_models/izumi/assets/mtn/idle_01.mtn","hash":"ce50f5c562b282dcb11679f682fe0f9e1bb0f37b","modified":1602246606071},{"_id":"themes/lucky/source/live2d_models/izumi/assets/mtn/idle_02.mtn","hash":"0c6b52bf64db7bbfee81ee24240ca991320764b4","modified":1602246606071},{"_id":"themes/lucky/source/live2d_models/hijiki/assets/mtn/04.mtn","hash":"c7a25d3c5d783639bae18db2f3cd284b819c3c85","modified":1602246606009},{"_id":"themes/lucky/source/live2d_models/izumi/assets/mtn/idle_03.mtn","hash":"b374923d973970f2c8331b3420660952e2bd8bf5","modified":1602246606071},{"_id":"themes/lucky/source/live2d_models/hijiki/assets/mtn/08.mtn","hash":"4411c7651ff65195b113d95e7d5ebef8a59a37d9","modified":1602246606009},{"_id":"themes/lucky/source/live2d_models/izumi/assets/mtn/izumi_01.mtn","hash":"36286812dc692e00a0b69e71d7fe3c8a2b672281","modified":1602246606071},{"_id":"themes/lucky/source/live2d_models/izumi/assets/mtn/idle_04.mtn","hash":"97c0a45af4f0b9f4b828f43eccb1c77c360af637","modified":1602246606071},{"_id":"themes/lucky/source/live2d_models/izumi/assets/mtn/izumi_02.mtn","hash":"90add71910fd83c1c66bfb73db6d6d4766c98dac","modified":1602246606071},{"_id":"themes/lucky/source/live2d_models/izumi/assets/mtn/izumi_03.mtn","hash":"fc7f8e01f8e7744cbd13a8fea44dda8270f21aeb","modified":1602246606071},{"_id":"themes/lucky/source/live2d_models/izumi/assets/mtn/izumi_05.mtn","hash":"dbfea56881f31a79bffb6d107e7b1fa867e2da0e","modified":1602246606071},{"_id":"themes/lucky/source/live2d_models/izumi/assets/mtn/izumi_07.mtn","hash":"e2f9e8cb428fa83251a45166d8f9acad570a47d9","modified":1602246606071},{"_id":"themes/lucky/source/live2d_models/izumi/assets/mtn/izumi_06.mtn","hash":"c1a63e659fcc6d5b1b0eac7eaff60faf43e2cb28","modified":1602246606071},{"_id":"themes/lucky/source/live2d_models/izumi/assets/mtn/izumi_09.mtn","hash":"97199471755394bed243a29b4cb8397518487296","modified":1602246606071},{"_id":"themes/lucky/source/live2d_models/izumi/assets/mtn/izumi_04.mtn","hash":"551b95d80d31ed4f06d19d99ccc4f795a8392ea3","modified":1602246606071},{"_id":"themes/lucky/source/live2d_models/izumi/assets/snd/izumi_01.mp3","hash":"11dd394ab4d11d3a3c6d6a1a305ff3a1d1fed21d","modified":1602246606087},{"_id":"themes/lucky/source/live2d_models/izumi/assets/mtn/izumi_10.mtn","hash":"244ae631fb963ed7619e5d63f189d947a2497eb2","modified":1602246606071},{"_id":"themes/lucky/source/live2d_models/izumi/assets/mtn/izumi_08.mtn","hash":"19fc90977a0ca30c18f4afae90d4c3ea27a9b094","modified":1602246606071},{"_id":"themes/lucky/source/live2d_models/izumi/assets/snd/izumi_02.mp3","hash":"d35189bae63cc6ef18d3a949c4a46dd5ed74c6b3","modified":1602246606087},{"_id":"themes/lucky/source/live2d_models/izumi/assets/snd/izumi_04.mp3","hash":"7647fb1e8823bb48ee5f82dbeac35e3f61b74bef","modified":1602246606087},{"_id":"themes/lucky/source/live2d_models/izumi/assets/snd/izumi_05.mp3","hash":"05e44723c24b387a0eab37a0ab4120ef19ae317e","modified":1602246606087},{"_id":"themes/lucky/source/live2d_models/izumi/assets/snd/izumi_06.mp3","hash":"f39ee4b85ed9877100c028bf938a9a8fd0d2cb6b","modified":1602246606087},{"_id":"themes/lucky/source/live2d_models/izumi/assets/snd/izumi_07.mp3","hash":"0c13c0096d02ceb37b3bcce085206b5d6d8ae834","modified":1602246606087},{"_id":"themes/lucky/source/live2d_models/izumi/assets/snd/izumi_08.mp3","hash":"0b73b4f9216ee6b944a91b599c942d567a39fe0f","modified":1602246606087},{"_id":"themes/lucky/source/live2d_models/izumi/assets/snd/izumi_09.mp3","hash":"f7bce48ee99bdad6fa187c484872eafce0b0e351","modified":1602246606087},{"_id":"themes/lucky/source/live2d_models/koharu/assets/mtn/01.mtn","hash":"61d7d590d9feb71b32fd6bd142b59410d75bc1fa","modified":1602246606118},{"_id":"themes/lucky/source/live2d_models/izumi/assets/snd/izumi_03.mp3","hash":"b3d6e98bc30eaf8ac0cf7ffe2f297742a819b380","modified":1602246606087},{"_id":"themes/lucky/source/live2d_models/hibiki/assets/snd/hibiki_02.mp3","hash":"75358d4c7ec03c4b1dc02ef60c716d94f031fe2f","modified":1602246605978},{"_id":"themes/lucky/source/live2d_models/izumi/assets/snd/izumi_10.mp3","hash":"53013c1cc56296a3843d4c8e3f01fd67747b169b","modified":1602246606087},{"_id":"themes/lucky/source/live2d_models/koharu/assets/mtn/03.mtn","hash":"a72b697a92a7cff40d15774b143b465b34cee5e6","modified":1602246606118},{"_id":"themes/lucky/source/live2d_models/koharu/assets/mtn/04.mtn","hash":"32c888667455a3ff6f1b04f910c1a5cc4de30af0","modified":1602246606118},{"_id":"themes/lucky/source/live2d_models/koharu/assets/mtn/02.mtn","hash":"efc99efdff39c93372cff0f6d62c4e748e1a5593","modified":1602246606118},{"_id":"themes/lucky/source/live2d_models/koharu/assets/mtn/06.mtn","hash":"df10cc1d333c96da1296a4853c1ddbd44d8a11f3","modified":1602246606118},{"_id":"themes/lucky/source/live2d_models/koharu/assets/mtn/08.mtn","hash":"9b95ef8548b979d1fca557c74f8d66fb15b34578","modified":1602246606118},{"_id":"themes/lucky/source/live2d_models/koharu/assets/mtn/idle.mtn","hash":"058d4628ab04bf42c279501ba4fa37116d384e41","modified":1602246606118},{"_id":"themes/lucky/source/live2d_models/koharu/assets/mtn/07.mtn","hash":"d8c9410135c81604eba665b59808089808e0851a","modified":1602246606118},{"_id":"themes/lucky/source/live2d_models/koharu/assets/mtn/09.mtn","hash":"ecf1283b72e1c4b7e3a97343cd97726813f18790","modified":1602246606118},{"_id":"themes/lucky/source/live2d_models/miku/assets/mtn/miku_m_01.mtn","hash":"bd0ea5f2f0528b21c4e5632838b69e478b652e88","modified":1602246606149},{"_id":"themes/lucky/source/live2d_models/miku/assets/mtn/miku_idle_01.mtn","hash":"5633f73601cf8b0a318e7a7265f71cc782683251","modified":1602246606149},{"_id":"themes/lucky/source/live2d_models/miku/assets/mtn/miku_m_03.mtn","hash":"94ef9d31a78f7f90d3fb213c4353afbdb3462cff","modified":1602246606149},{"_id":"themes/lucky/source/live2d_models/miku/assets/mtn/miku_m_04.mtn","hash":"5c440e8f4cd45e73a7c8044ea0e2ea11234f9fd9","modified":1602246606149},{"_id":"themes/lucky/source/live2d_models/miku/assets/mtn/miku_m_05.mtn","hash":"73b9b162c1dbf9a6747364ae47b12cba9da0bbec","modified":1602246606149},{"_id":"themes/lucky/source/live2d_models/miku/assets/mtn/miku_m_06.mtn","hash":"0bfd6ad29e5e171a1ce03a7acb8ffcca9f463902","modified":1602246606149},{"_id":"themes/lucky/source/live2d_models/miku/assets/mtn/miku_shake_01.mtn","hash":"190875ab6cdeee7ae87c4c296429b848c942dd8a","modified":1602246606149},{"_id":"themes/lucky/source/live2d_models/koharu/assets/mtn/05.mtn","hash":"637e00442da4042cd4b0ed2cc62ffb1559881814","modified":1602246606118},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/mtn/01_happy.mtn","hash":"2020573671b39c81fbd784a8b873ebee019ca501","modified":1602246606163},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/mtn/00_idle.mtn","hash":"3686b7bfdb43f85f4fe1d94ed59379d2c4bee41d","modified":1602246606163},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/mtn/02_angry.mtn","hash":"f75e1f580c64695fbbf8ba3c5f49eafc7208411d","modified":1602246606163},{"_id":"themes/lucky/source/live2d_models/miku/assets/mtn/miku_m_02.mtn","hash":"2eda9602d626d89285e0c0c5f564383964516cc8","modified":1602246606149},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/mtn/04_surprise.mtn","hash":"4b911af06de9bc6f386aecd623851e5799edaa96","modified":1602246606179},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/mtn/03_fear.mtn","hash":"b6cdb8fa48960b2a6e66d78ea992221e8108437b","modified":1602246606179},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/mtn/05_fun.mtn","hash":"4b956c9c028dce753fafa1859404a136975786d4","modified":1602246606179},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/mtn/07_bye.mtn","hash":"6a3e90e8efb64cd5b187196625a3d8915efb21c8","modified":1602246606182},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/mtn/06_love.mtn","hash":"c9f90cc2e2be55ac9c19cf6a962330dad3833fc1","modified":1602246606181},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/mtn/08_sad.mtn","hash":"63647d9320bf3928d658e1275adbfaeba88748b7","modified":1602246606183},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/mtn/10_yeah.mtn","hash":"58c4bda1339f41fa8a7e554509a7a871bad392b8","modified":1602246606185},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/mtn/13_cry.mtn","hash":"27709b59d2e6cba73d69a67cadb8bf50413206a9","modified":1602246606188},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/mtn/09_yawn.mtn","hash":"e0e29a712b01be59ae8bba2e1a0d850e06260d20","modified":1602246606184},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/mtn/14_ sigh.mtn","hash":"80c4e4f539253d86a7aa5faae2c5e5a3a7b1adcc","modified":1602246606189},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/mtn/12_stagger.mtn","hash":"3f1a0b25cb1b9fb150f7a9ef37e8c9ba8d4e6ba1","modified":1602246606187},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/mtn/16_menace.mtn","hash":"6edb6b114d53d7f93cff164992db475b0b6f09c3","modified":1602246606191},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/mtn/15_joy.mtn","hash":"b76a24efc57e4c2cc4abf70c293b2e800029a20d","modified":1602246606190},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/mtn/17_yes.mtn","hash":"a023cc93e55b3940f1a8690dcfa7ad1cfa534fad","modified":1602246606192},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/mtn/11_muscle.mtn","hash":"7d0e3466a996f8704e86913c723ac4b82f14ff47","modified":1602246606186},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/mtn/19_walk.mtn","hash":"035516e8cdaa5b3c6e7524daca72294284a81126","modified":1602246606194},{"_id":"themes/lucky/source/live2d_models/nico/assets/mtn/00_idle.mtn","hash":"3686b7bfdb43f85f4fe1d94ed59379d2c4bee41d","modified":1602246606218},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/mtn/18_no.mtn","hash":"9a18a2537bf6634da2bafd3a57d236de30c73b4e","modified":1602246606193},{"_id":"themes/lucky/source/live2d_models/nico/assets/mtn/02_angry.mtn","hash":"f75e1f580c64695fbbf8ba3c5f49eafc7208411d","modified":1602246606222},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/mtn/20_sleep.mtn","hash":"914e4670825467e5e8d2f6983bd21c7190e57310","modified":1602246606195},{"_id":"themes/lucky/source/live2d_models/nico/assets/mtn/03_fear.mtn","hash":"b6cdb8fa48960b2a6e66d78ea992221e8108437b","modified":1602246606222},{"_id":"themes/lucky/source/live2d_models/nico/assets/mtn/04_surprise.mtn","hash":"4b911af06de9bc6f386aecd623851e5799edaa96","modified":1602246606222},{"_id":"themes/lucky/source/live2d_models/nico/assets/mtn/06_love.mtn","hash":"c9f90cc2e2be55ac9c19cf6a962330dad3833fc1","modified":1602246606226},{"_id":"themes/lucky/source/live2d_models/nico/assets/mtn/05_fun.mtn","hash":"4b956c9c028dce753fafa1859404a136975786d4","modified":1602246606222},{"_id":"themes/lucky/source/live2d_models/nico/assets/mtn/01_happy.mtn","hash":"2020573671b39c81fbd784a8b873ebee019ca501","modified":1602246606218},{"_id":"themes/lucky/source/live2d_models/nico/assets/mtn/09_yawn.mtn","hash":"e0e29a712b01be59ae8bba2e1a0d850e06260d20","modified":1602246606226},{"_id":"themes/lucky/source/live2d_models/nico/assets/mtn/10_yeah.mtn","hash":"58c4bda1339f41fa8a7e554509a7a871bad392b8","modified":1602246606226},{"_id":"themes/lucky/source/live2d_models/nico/assets/mtn/08_sad.mtn","hash":"63647d9320bf3928d658e1275adbfaeba88748b7","modified":1602246606226},{"_id":"themes/lucky/source/live2d_models/nico/assets/mtn/12_stagger.mtn","hash":"3f1a0b25cb1b9fb150f7a9ef37e8c9ba8d4e6ba1","modified":1602246606231},{"_id":"themes/lucky/source/live2d_models/nico/assets/mtn/11_muscle.mtn","hash":"7d0e3466a996f8704e86913c723ac4b82f14ff47","modified":1602246606226},{"_id":"themes/lucky/source/live2d_models/nico/assets/mtn/13_cry.mtn","hash":"27709b59d2e6cba73d69a67cadb8bf50413206a9","modified":1602246606231},{"_id":"themes/lucky/source/live2d_models/nico/assets/mtn/14_ sigh.mtn","hash":"80c4e4f539253d86a7aa5faae2c5e5a3a7b1adcc","modified":1602246606231},{"_id":"themes/lucky/source/live2d_models/nico/assets/mtn/07_bye.mtn","hash":"6a3e90e8efb64cd5b187196625a3d8915efb21c8","modified":1602246606226},{"_id":"themes/lucky/source/live2d_models/nico/assets/mtn/15_joy.mtn","hash":"b76a24efc57e4c2cc4abf70c293b2e800029a20d","modified":1602246606231},{"_id":"themes/lucky/source/live2d_models/nico/assets/mtn/16_menace.mtn","hash":"6edb6b114d53d7f93cff164992db475b0b6f09c3","modified":1602246606231},{"_id":"themes/lucky/source/live2d_models/nico/assets/mtn/19_walk.mtn","hash":"035516e8cdaa5b3c6e7524daca72294284a81126","modified":1602246606236},{"_id":"themes/lucky/source/live2d_models/nico/assets/mtn/18_no.mtn","hash":"9a18a2537bf6634da2bafd3a57d236de30c73b4e","modified":1602246606235},{"_id":"themes/lucky/source/live2d_models/nico/assets/mtn/17_yes.mtn","hash":"a023cc93e55b3940f1a8690dcfa7ad1cfa534fad","modified":1602246606231},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/mtn/01_happy.mtn","hash":"2020573671b39c81fbd784a8b873ebee019ca501","modified":1602246606261},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/mtn/02_angry.mtn","hash":"f75e1f580c64695fbbf8ba3c5f49eafc7208411d","modified":1602246606262},{"_id":"themes/lucky/source/live2d_models/nico/assets/mtn/20_sleep.mtn","hash":"914e4670825467e5e8d2f6983bd21c7190e57310","modified":1602246606237},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/mtn/00_idle.mtn","hash":"3686b7bfdb43f85f4fe1d94ed59379d2c4bee41d","modified":1602246606260},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/mtn/05_fun.mtn","hash":"4b956c9c028dce753fafa1859404a136975786d4","modified":1602246606264},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/mtn/04_surprise.mtn","hash":"4b911af06de9bc6f386aecd623851e5799edaa96","modified":1602246606263},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/mtn/03_fear.mtn","hash":"b6cdb8fa48960b2a6e66d78ea992221e8108437b","modified":1602246606262},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/mtn/06_love.mtn","hash":"c9f90cc2e2be55ac9c19cf6a962330dad3833fc1","modified":1602246606264},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/mtn/08_sad.mtn","hash":"63647d9320bf3928d658e1275adbfaeba88748b7","modified":1602246606264},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/mtn/07_bye.mtn","hash":"6a3e90e8efb64cd5b187196625a3d8915efb21c8","modified":1602246606264},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/mtn/11_muscle.mtn","hash":"7d0e3466a996f8704e86913c723ac4b82f14ff47","modified":1602246606264},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/mtn/13_cry.mtn","hash":"27709b59d2e6cba73d69a67cadb8bf50413206a9","modified":1602246606264},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/mtn/10_yeah.mtn","hash":"58c4bda1339f41fa8a7e554509a7a871bad392b8","modified":1602246606264},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/mtn/14_ sigh.mtn","hash":"80c4e4f539253d86a7aa5faae2c5e5a3a7b1adcc","modified":1602246606264},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/mtn/16_menace.mtn","hash":"6edb6b114d53d7f93cff164992db475b0b6f09c3","modified":1602246606264},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/mtn/12_stagger.mtn","hash":"3f1a0b25cb1b9fb150f7a9ef37e8c9ba8d4e6ba1","modified":1602246606264},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/mtn/15_joy.mtn","hash":"b76a24efc57e4c2cc4abf70c293b2e800029a20d","modified":1602246606264},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/mtn/18_no.mtn","hash":"9a18a2537bf6634da2bafd3a57d236de30c73b4e","modified":1602246606264},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/mtn/19_walk.mtn","hash":"035516e8cdaa5b3c6e7524daca72294284a81126","modified":1602246606264},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/mtn/17_yes.mtn","hash":"a023cc93e55b3940f1a8690dcfa7ad1cfa534fad","modified":1602246606264},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/mtn/20_sleep.mtn","hash":"914e4670825467e5e8d2f6983bd21c7190e57310","modified":1602246606264},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/mtn/01_happy.mtn","hash":"2020573671b39c81fbd784a8b873ebee019ca501","modified":1602246606295},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/mtn/02_angry.mtn","hash":"f75e1f580c64695fbbf8ba3c5f49eafc7208411d","modified":1602246606295},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/mtn/03_fear.mtn","hash":"b6cdb8fa48960b2a6e66d78ea992221e8108437b","modified":1602246606295},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/mtn/04_surprise.mtn","hash":"4b911af06de9bc6f386aecd623851e5799edaa96","modified":1602246606295},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/mtn/05_fun.mtn","hash":"4b956c9c028dce753fafa1859404a136975786d4","modified":1602246606295},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/mtn/06_love.mtn","hash":"c9f90cc2e2be55ac9c19cf6a962330dad3833fc1","modified":1602246606295},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/mtn/07_bye.mtn","hash":"6a3e90e8efb64cd5b187196625a3d8915efb21c8","modified":1602246606295},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/mtn/00_idle.mtn","hash":"3686b7bfdb43f85f4fe1d94ed59379d2c4bee41d","modified":1602246606295},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/mtn/09_yawn.mtn","hash":"e0e29a712b01be59ae8bba2e1a0d850e06260d20","modified":1602246606264},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/mtn/09_yawn.mtn","hash":"e0e29a712b01be59ae8bba2e1a0d850e06260d20","modified":1602246606295},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/mtn/11_muscle.mtn","hash":"7d0e3466a996f8704e86913c723ac4b82f14ff47","modified":1602246606295},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/mtn/10_yeah.mtn","hash":"58c4bda1339f41fa8a7e554509a7a871bad392b8","modified":1602246606295},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/mtn/13_cry.mtn","hash":"27709b59d2e6cba73d69a67cadb8bf50413206a9","modified":1602246606311},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/mtn/08_sad.mtn","hash":"63647d9320bf3928d658e1275adbfaeba88748b7","modified":1602246606295},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/mtn/15_joy.mtn","hash":"b76a24efc57e4c2cc4abf70c293b2e800029a20d","modified":1602246606311},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/mtn/14_ sigh.mtn","hash":"80c4e4f539253d86a7aa5faae2c5e5a3a7b1adcc","modified":1602246606311},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/mtn/12_stagger.mtn","hash":"3f1a0b25cb1b9fb150f7a9ef37e8c9ba8d4e6ba1","modified":1602246606311},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/mtn/16_menace.mtn","hash":"6edb6b114d53d7f93cff164992db475b0b6f09c3","modified":1602246606311},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/mtn/18_no.mtn","hash":"9a18a2537bf6634da2bafd3a57d236de30c73b4e","modified":1602246606311},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/mtn/19_walk.mtn","hash":"035516e8cdaa5b3c6e7524daca72294284a81126","modified":1602246606311},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/mtn/20_sleep.mtn","hash":"914e4670825467e5e8d2f6983bd21c7190e57310","modified":1602246606311},{"_id":"themes/lucky/source/live2d_models/nito/assets/mtn/00_idle.mtn","hash":"3686b7bfdb43f85f4fe1d94ed59379d2c4bee41d","modified":1602246606326},{"_id":"themes/lucky/source/live2d_models/nito/assets/mtn/01_happy.mtn","hash":"2020573671b39c81fbd784a8b873ebee019ca501","modified":1602246606326},{"_id":"themes/lucky/source/live2d_models/nito/assets/mtn/02_angry.mtn","hash":"f75e1f580c64695fbbf8ba3c5f49eafc7208411d","modified":1602246606326},{"_id":"themes/lucky/source/live2d_models/nito/assets/mtn/04_surprise.mtn","hash":"4b911af06de9bc6f386aecd623851e5799edaa96","modified":1602246606326},{"_id":"themes/lucky/source/live2d_models/nito/assets/mtn/03_fear.mtn","hash":"b6cdb8fa48960b2a6e66d78ea992221e8108437b","modified":1602246606326},{"_id":"themes/lucky/source/live2d_models/nito/assets/mtn/05_fun.mtn","hash":"4b956c9c028dce753fafa1859404a136975786d4","modified":1602246606326},{"_id":"themes/lucky/source/live2d_models/nito/assets/mtn/06_love.mtn","hash":"c9f90cc2e2be55ac9c19cf6a962330dad3833fc1","modified":1602246606326},{"_id":"themes/lucky/source/live2d_models/nito/assets/mtn/08_sad.mtn","hash":"63647d9320bf3928d658e1275adbfaeba88748b7","modified":1602246606326},{"_id":"themes/lucky/source/live2d_models/nito/assets/mtn/07_bye.mtn","hash":"6a3e90e8efb64cd5b187196625a3d8915efb21c8","modified":1602246606326},{"_id":"themes/lucky/source/live2d_models/nito/assets/mtn/10_yeah.mtn","hash":"58c4bda1339f41fa8a7e554509a7a871bad392b8","modified":1602246606342},{"_id":"themes/lucky/source/live2d_models/nito/assets/mtn/11_muscle.mtn","hash":"7d0e3466a996f8704e86913c723ac4b82f14ff47","modified":1602246606342},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/mtn/17_yes.mtn","hash":"a023cc93e55b3940f1a8690dcfa7ad1cfa534fad","modified":1602246606311},{"_id":"themes/lucky/source/live2d_models/nito/assets/mtn/12_stagger.mtn","hash":"3f1a0b25cb1b9fb150f7a9ef37e8c9ba8d4e6ba1","modified":1602246606342},{"_id":"themes/lucky/source/live2d_models/nito/assets/mtn/13_cry.mtn","hash":"27709b59d2e6cba73d69a67cadb8bf50413206a9","modified":1602246606342},{"_id":"themes/lucky/source/live2d_models/nito/assets/mtn/09_yawn.mtn","hash":"e0e29a712b01be59ae8bba2e1a0d850e06260d20","modified":1602246606326},{"_id":"themes/lucky/source/live2d_models/nito/assets/mtn/15_joy.mtn","hash":"b76a24efc57e4c2cc4abf70c293b2e800029a20d","modified":1602246606342},{"_id":"themes/lucky/source/live2d_models/nito/assets/mtn/18_no.mtn","hash":"9a18a2537bf6634da2bafd3a57d236de30c73b4e","modified":1602246606342},{"_id":"themes/lucky/source/live2d_models/nito/assets/mtn/14_ sigh.mtn","hash":"80c4e4f539253d86a7aa5faae2c5e5a3a7b1adcc","modified":1602246606342},{"_id":"themes/lucky/source/live2d_models/nito/assets/mtn/16_menace.mtn","hash":"6edb6b114d53d7f93cff164992db475b0b6f09c3","modified":1602246606342},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/exp/f01.exp.json","hash":"84073a497ddb6e56c6cfc244a0fb217ba473abf9","modified":1602246606342},{"_id":"themes/lucky/source/live2d_models/nito/assets/mtn/19_walk.mtn","hash":"035516e8cdaa5b3c6e7524daca72294284a81126","modified":1602246606342},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/exp/f03.exp.json","hash":"fbf7729e504f14f83f976827fcf62301a6579a34","modified":1602246606342},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/exp/f04.exp.json","hash":"35e746ede62e7090e7dfb08561d77772f58b4153","modified":1602246606357},{"_id":"themes/lucky/source/live2d_models/nito/assets/mtn/17_yes.mtn","hash":"a023cc93e55b3940f1a8690dcfa7ad1cfa534fad","modified":1602246606342},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/exp/f02.exp.json","hash":"241b6afafa2e25c6d7a54692a8b5aa060a137ab1","modified":1602246606342},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/mtn/flickHead_01.mtn","hash":"a1011d6bf397bcd3c3c968d9616f88fe1ffbc83c","modified":1602246606389},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/mtn/flickHead_02.mtn","hash":"d3c9c0acb4dc25a2274f3b9faa71e5ce60ad92e4","modified":1602246606389},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/mtn/idle_00.mtn","hash":"378b4577217c604c9d28ab4edf8b707c8d8c2fbb","modified":1602246606389},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/mtn/idle_01.mtn","hash":"88c2494655dbb712b842f03232b619f381753d52","modified":1602246606389},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/mtn/idle_02.mtn","hash":"7f5d2cf8706007c8659938eba132a68c470a4c26","modified":1602246606404},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/mtn/pinchIn_00.mtn","hash":"70978b4c983f6a9fd6d3d9c24571586f7d6eac30","modified":1602246606404},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/mtn/pinchIn_01.mtn","hash":"a5fefb45115695db72b9499e627a51b2b9394f2c","modified":1602246606404},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/mtn/flickHead_00.mtn","hash":"f64c79c9171660db5c440bef229ac2e35a1597d5","modified":1602246606389},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/mtn/pinchOut_01.mtn","hash":"e05df948d08b17f34c993a9c1f901190509d5db0","modified":1602246606404},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/mtn/pinchOut_02.mtn","hash":"b323fd350d334b33bbdfb31194ae664089986c27","modified":1602246606404},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/mtn/shake_00.mtn","hash":"5185d02c7ab9f0bec3d4a890b54b2378e553373d","modified":1602246606404},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/mtn/pinchIn_02.mtn","hash":"aa0d66ca9b06c374577fd7e64e89756de1e1f2ae","modified":1602246606404},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/mtn/shake_01.mtn","hash":"e812985a56796e122018f9d57d1606a4866ff7d1","modified":1602246606404},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/mtn/tapBody_00.mtn","hash":"835aa3d4a8fbd26c0bb66b164a19464fa3f17a99","modified":1602246606404},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/mtn/tapBody_02.mtn","hash":"a75acb51c1191ce5050d3ee1af6f2dcc787c7c5e","modified":1602246606404},{"_id":"themes/lucky/source/live2d_models/nito/assets/mtn/20_sleep.mtn","hash":"914e4670825467e5e8d2f6983bd21c7190e57310","modified":1602246606342},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/mtn/shake_02.mtn","hash":"2702970805e07777974c383613e631730982bcff","modified":1602246606404},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/mtn/tapBody_01.mtn","hash":"78fca17436ab5e065e27f419f135aa6c0a0b52ef","modified":1602246606404},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/snd/flickHead_00.mp3","hash":"356388d939006b03cf9e6158c603b58d4800bec1","modified":1602246606404},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/mtn/pinchOut_00.mtn","hash":"e07fe8fd8c2810e3c1d28b730bd49c8c25849bad","modified":1602246606404},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/snd/flickHead_02.mp3","hash":"5f63477ce63f2073e24d68fea906fe136fe6349e","modified":1602246606404},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/snd/pinchIn_00.mp3","hash":"f9baa3b7cadec20b714135fc49cfab3ff6adeeb4","modified":1602246606420},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/snd/flickHead_01.mp3","hash":"436d0bbccf6e7a2744447554947eee4563608970","modified":1602246606404},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/snd/pinchIn_01.mp3","hash":"d5c8cc6f61b56222a83a5174f75006f83c3b88da","modified":1602246606420},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/snd/shake_00.mp3","hash":"f65dd58e7b44ec5c865d13c190316070b625b5fe","modified":1602246606420},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/snd/shake_01.mp3","hash":"c1e0e8a07ff268ee06c2b7825d1b645e193f21b9","modified":1602246606420},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/snd/shake_02.mp3","hash":"8882b94bce00f09232588b7301badb105fa8acab","modified":1602246606420},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/snd/tapBody_02.mp3","hash":"15e7815ed0a0e5164e18e0c53b97aedc742a134d","modified":1602246606436},{"_id":"themes/lucky/source/live2d_models/tororo/assets/mtn/00_idle.mtn","hash":"b224c60e463b9f71ddbfc0c720e430496c175f4f","modified":1602246606451},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/snd/tapBody_01.mp3","hash":"5314b50f153df71559e51e2586581c006df00722","modified":1602246606436},{"_id":"themes/lucky/source/live2d_models/tororo/assets/mtn/03.mtn","hash":"f900737c7a98441cbb2e05255427e6260e19ae68","modified":1602246606451},{"_id":"themes/lucky/source/live2d_models/tororo/assets/mtn/02.mtn","hash":"7eafc52edc73b7cb80ae70d34b43c6ac778fa47b","modified":1602246606451},{"_id":"themes/lucky/source/live2d_models/tororo/assets/mtn/01.mtn","hash":"fb550833ae22c9954c3e01df37ed29b2d61700f2","modified":1602246606451},{"_id":"themes/lucky/source/live2d_models/tororo/assets/mtn/05.mtn","hash":"dd20ad24b5d1830a5d44b9bccb28f922eea5e0e5","modified":1602246606451},{"_id":"themes/lucky/source/live2d_models/tororo/assets/mtn/07.mtn","hash":"b7f2e3a9fa4f3ffbb6e64a08f8d9f45ca1868ffb","modified":1602246606451},{"_id":"themes/lucky/source/live2d_models/tororo/assets/mtn/08.mtn","hash":"4411c7651ff65195b113d95e7d5ebef8a59a37d9","modified":1602246606451},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/exp/F01.exp.json","hash":"7c0a23a6f3f0a584887be3d3b482ecc7a359306e","modified":1602246606451},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/exp/F02.exp.json","hash":"5e7fffd67c06aee0cdcab0b8f816fd6a125db260","modified":1602246606467},{"_id":"themes/lucky/source/live2d_models/tororo/assets/mtn/06.mtn","hash":"ad404bd852d276cdd3d054c953e23f90e4e45ae1","modified":1602246606451},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/exp/F04.exp.json","hash":"19c9ad9d05ea7cb15ccdabeaa14ec84c2763af9c","modified":1602246606467},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/exp/F05.exp.json","hash":"afd807b47a00389374949731dd97087aeeec28d7","modified":1602246606467},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/exp/F06.exp.json","hash":"8dd11423a36822927463c3adfdd629d4126f2205","modified":1602246606467},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/exp/F07.exp.json","hash":"65441e1c9d27f4af55b45759e3c8407af2b72c3e","modified":1602246606467},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/exp/F09.exp.json","hash":"eb7d53e7617247158e4d538e2e7f1a602cfe21a5","modified":1602246606467},{"_id":"themes/lucky/source/live2d_models/tororo/assets/mtn/04.mtn","hash":"c7a25d3c5d783639bae18db2f3cd284b819c3c85","modified":1602246606451},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/exp/F10.exp.json","hash":"61bccc68a43662888862fe46c91f579958097ed9","modified":1602246606467},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/exp/F08.exp.json","hash":"03284527751a22b05336329df15e103fdc7e95ec","modified":1602246606467},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/exp/F03.exp.json","hash":"ab92d6fd93d152a4739d93cc6a650c36623dcf72","modified":1602246606467},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/P01.mtn","hash":"4b6d266d9fe31e01c4e13ac2049435b5d70b5589","modified":1602246606482},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_01.mtn","hash":"b1b0e2237926a52970703bcfdd5cf6bb6fc39248","modified":1602246606482},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_idle_01.mtn","hash":"dd178b1cb3817bd2d7e6f56f25daf3ffacd4afdd","modified":1602246606482},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_01_df.mtn","hash":"4b008605c2f61f37fd295d929df8b51e9f1f447e","modified":1602246606482},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_02.mtn","hash":"43f73acf0ec68e5ddda2fb212b3bd62b4ec63829","modified":1602246606482},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_05.mtn","hash":"c118b3bcbf03d0cc07c9f6a2a8e8c495f07f4091","modified":1602246606482},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_03.mtn","hash":"bbd6a2cbe87dea113024d9d953bb42864cad31a5","modified":1602246606482},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_04.mtn","hash":"b6395b5acb2136c8265f37483cfe60b4a1bfb66d","modified":1602246606482},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_07.mtn","hash":"ec5da8fb40ff26dc3e9f306cade5f4bfc2f15642","modified":1602246606498},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_06.mtn","hash":"2641628ced0c982f214242744da73f1ab048c078","modified":1602246606498},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_09.mtn","hash":"c4f3635225ba606873a7c14cc91bf5a28a2afa95","modified":1602246606498},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_10.mtn","hash":"8e6d0609ae64f8dd4db0e5e85addbc677fac3a79","modified":1602246606498},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_08.mtn","hash":"98768aafeb239e75f788969eb995adbe7a89bc3f","modified":1602246606498},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_13.mtn","hash":"d20d09dfbdf42d13240c45f9d2fa4474a4541dd8","modified":1602246606498},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_14.mtn","hash":"2480493fffb4fd8135ef1e88c5f717952b7d6542","modified":1602246606498},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_15.mtn","hash":"4fa8d8667c41cd5b3c49cf4bdd8b36cf0a9158b9","modified":1602246606498},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_17.mtn","hash":"6346ebcf76b0780987f552b16c4c62c39732597f","modified":1602246606498},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_16.mtn","hash":"03843599008ab2ee23d9d03174924609ad042ce6","modified":1602246606498},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_18.mtn","hash":"34fbff31238e9b6a541f5f03a00bec5cbcec6649","modified":1602246606498},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/snd/tapBody_00.mp3","hash":"003e68a59a9c8392e230f34c91860efbd946277a","modified":1602246606436},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_22.mtn","hash":"0fb02e4734ab8c455e1405dfed9546af583595ae","modified":1602246606498},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_23.mtn","hash":"d5a156e295e575c615b673350c025e3270afee8e","modified":1602246606498},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_20.mtn","hash":"076ca7be2c81e776794245a3865478b20428e416","modified":1602246606498},{"_id":"themes/lucky/source/live2d_models/unitychan/assets/mtn/idle_01.mtn","hash":"e38a7dcfcad059b695f935b2071a1270c1ddf905","modified":1602246606529},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_21.mtn","hash":"bd917f60537e4e9037c85bf356d4c25e75e2807c","modified":1602246606498},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_19.mtn","hash":"685fc0130899e903d9c9433ec1c1a987323d6c8c","modified":1602246606498},{"_id":"themes/lucky/source/live2d_models/unitychan/assets/mtn/idle_02.mtn","hash":"8c3929962a4991c94bf7aeaf33169d61ccaccb2c","modified":1602246606529},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_24.mtn","hash":"696502793e9917abc495645be784262e3b997bde","modified":1602246606514},{"_id":"themes/lucky/source/live2d_models/unitychan/assets/mtn/m_01.mtn","hash":"97d08b57c3b07a854f69cdef3ce6d13a2b2ece1c","modified":1602246606529},{"_id":"themes/lucky/source/live2d_models/unitychan/assets/mtn/m_02.mtn","hash":"a4dd9580452854f6adc7b30e9e85702a7641179c","modified":1602246606529},{"_id":"themes/lucky/source/live2d_models/unitychan/assets/mtn/m_03.mtn","hash":"dd140c6c4702f3fbd785a85a4d5d8cfa32b9bc32","modified":1602246606529},{"_id":"themes/lucky/source/live2d_models/unitychan/assets/mtn/m_06.mtn","hash":"cb16f119956346e4b15a1c432491423893cf2389","modified":1602246606529},{"_id":"themes/lucky/source/live2d_models/unitychan/assets/mtn/m_07.mtn","hash":"35caceb556d9bb4fc2a5ed4f8c51d766a6e70405","modified":1602246606529},{"_id":"themes/lucky/source/live2d_models/unitychan/assets/mtn/m_08.mtn","hash":"fbd6ae1967446a421d8505a8d29d5f7f64b5c0d7","modified":1602246606529},{"_id":"themes/lucky/source/live2d_models/unitychan/assets/mtn/m_09.mtn","hash":"4b942bfbde2a82f19bb4aab7e54e3caae9691da6","modified":1602246606529},{"_id":"themes/lucky/source/live2d_models/unitychan/assets/mtn/m_10.mtn","hash":"837f0cda82543d87c12108957a16e482964f3796","modified":1602246606529},{"_id":"themes/lucky/source/live2d_models/unitychan/assets/mtn/m_11.mtn","hash":"2c5ec476b9e3246d8c7a5ae4611401d3420cfa1e","modified":1602246606529},{"_id":"themes/lucky/source/live2d_models/unitychan/assets/mtn/m_04.mtn","hash":"32f8515854a89878c5becbabf56dabd4c675d437","modified":1602246606529},{"_id":"themes/lucky/source/live2d_models/unitychan/assets/mtn/m_14.mtn","hash":"4c5c7fdc05237a090341d4690bd7e07344728e9e","modified":1602246606529},{"_id":"themes/lucky/source/live2d_models/unitychan/assets/mtn/m_13.mtn","hash":"f08d7f660fda4029fec2acb1f1389f855b5d1b96","modified":1602246606529},{"_id":"themes/lucky/source/live2d_models/unitychan/assets/mtn/m_12.mtn","hash":"90e96587969b78785c16cdffbdbe0b220cac39b7","modified":1602246606529},{"_id":"themes/lucky/source/live2d_models/wanko/assets/mtn/idle_02.mtn","hash":"865874c50848fbc9a55011391531e2ec171c9b91","modified":1602246606545},{"_id":"themes/lucky/source/live2d_models/wanko/assets/mtn/idle_01.mtn","hash":"908abce18f6cf7fd4bc1486f048c25a517f4a34a","modified":1602246606545},{"_id":"themes/lucky/source/live2d_models/wanko/assets/mtn/idle_03.mtn","hash":"84684914ebf5dc5b2df160338bb97dcc0a978476","modified":1602246606545},{"_id":"themes/lucky/source/live2d_models/unitychan/assets/mtn/m_05.mtn","hash":"ca1f068a2c9c56519e4306115b95d1f497f31124","modified":1602246606529},{"_id":"themes/lucky/source/live2d_models/wanko/assets/mtn/shake_01.mtn","hash":"dffc54733127832f8f5e91aced55a83da58fa215","modified":1602246606545},{"_id":"themes/lucky/source/live2d_models/wanko/assets/mtn/shake_02.mtn","hash":"7b6c914f6c33450eda2e53d9b638fd7045c0f683","modified":1602246606545},{"_id":"themes/lucky/source/live2d_models/wanko/assets/mtn/idle_04.mtn","hash":"78e22091792abb0600f724a5dfd60371257954e8","modified":1602246606545},{"_id":"themes/lucky/source/live2d_models/wanko/assets/mtn/touch_01.mtn","hash":"99270ea8fe1f8f5d88eadb94f36bd0810009d1e6","modified":1602246606545},{"_id":"themes/lucky/source/live2d_models/wanko/assets/mtn/touch_02.mtn","hash":"4d1f099fbd18d15c598a644227ed5bf942a2ba71","modified":1602246606545},{"_id":"themes/lucky/source/live2d_models/z16/assets/exp/f00.exp.json","hash":"84073a497ddb6e56c6cfc244a0fb217ba473abf9","modified":1602246606561},{"_id":"themes/lucky/source/live2d_models/wanko/assets/mtn/touch_05.mtn","hash":"9610bb8a937ba9b11445a3894d8cc0733a2b67e5","modified":1602246606561},{"_id":"themes/lucky/source/live2d_models/wanko/assets/mtn/touch_03.mtn","hash":"9c394975083915f0f3786caff1762381348b041e","modified":1602246606545},{"_id":"themes/lucky/source/live2d_models/wanko/assets/mtn/touch_06.mtn","hash":"feb9237c73f2045ed1704c01b5362c9a54ee5a18","modified":1602246606561},{"_id":"themes/lucky/source/live2d_models/wanko/assets/mtn/touch_04.mtn","hash":"8d2302cfdaec698e575048797ff4f30ae4d202de","modified":1602246606545},{"_id":"themes/lucky/source/live2d_models/z16/assets/mtn/idle.mtn","hash":"f6b879d9f1d096509a7edbc971b8fdd9697932e9","modified":1602246606576},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/exp/f01.exp.json","hash":"84073a497ddb6e56c6cfc244a0fb217ba473abf9","modified":1602246605853},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/exp/f02.exp.json","hash":"461fe8077a2289e309ffc7edf561501a7edcce88","modified":1602246605853},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/exp/f03.exp.json","hash":"a65382a1a8d8f7034eac2c811b9f122a8b3f1403","modified":1602246605853},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/exp/f05.exp.json","hash":"1123786fb0bb9c31f7d30cf14b2299f898cdc207","modified":1602246605853},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/exp/f04.exp.json","hash":"3156286d7e0281e15c637a889aa415eef3224fa7","modified":1602246605853},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/exp/f06.exp.json","hash":"d962889ec7c563d818ddb5ab1e58cd337b5e62db","modified":1602246605853},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/exp/f07.exp.json","hash":"d55366c9bcf382e8273cf1803f65cdb8a4a0d336","modified":1602246605853},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/exp/f08.exp.json","hash":"4a9ba4b11d9797f59c7b043d2b807ed8253f3cc4","modified":1602246605853},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/mtn/idle_00.mtn","hash":"bbaaafe4de159dd4fb73d137d283c640d3fede53","modified":1602246605868},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/mtn/idle_01.mtn","hash":"035c196f276ed177239ea05eeaece68b0fda2935","modified":1602246605868},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/mtn/flickHead_00.mtn","hash":"66577f6dde2bec905930fba0dd5f06de939c8f1e","modified":1602246605868},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/mtn/pinchOut_00.mtn","hash":"db831991287e3a4724578f068a68e48168081d5a","modified":1602246605868},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/mtn/tapBody_01.mtn","hash":"91fbfe1870f7a0a5f5fdb87c213c41b2a8cb5648","modified":1602246605884},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/mtn/tapBody_00.mtn","hash":"4041b2f1f2f4a84454180f9dab14e46d99e135c0","modified":1602246605868},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/mtn/tapBody_03.mtn","hash":"fcd573576112ad5f4e4b7dc0b750de79f150f971","modified":1602246605884},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/mtn/shake_00.mtn","hash":"7e938c4abe83273766c4562a571301811dea1de6","modified":1602246605868},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/mtn/tapBody_04.mtn","hash":"557811c5f4ddbd393542366ef95794b19fc60387","modified":1602246605884},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/mtn/tapBody_02.mtn","hash":"e93a2163cbb85525338e11a520e317329b11fb65","modified":1602246605884},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/mtn/tapBody_05.mtn","hash":"5f48e50e938f98636519c370745a39b921907719","modified":1602246605884},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/mtn/tapBody_06.mtn","hash":"3d06ac66c04eb12c64d36551dd85389f0b0ee51f","modified":1602246605884},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/mtn/tapBody_07.mtn","hash":"d299747aaf27377d552ef1f8b4fce9871a65c37d","modified":1602246605884},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/mtn/tapBody_09.mtn","hash":"4f50c17dcf352995e51a4d462b9ca7a9e9197d5c","modified":1602246605884},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/mtn/tapBody_08.mtn","hash":"64a03a904d701039bf81e1296ee79537c2e8800e","modified":1602246605884},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/snd/flickHead_00.mp3","hash":"0b447e7e38eb20f3f7e8ba2a5ea5f521f6e37a26","modified":1602246605884},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/mtn/idle_02.mtn","hash":"82291b3b78339d52f559a65d02b78e0b30180503","modified":1602246605868},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/snd/pinchOut_00.mp3","hash":"6872da79e1b515b2c996eecee4ca150e22aa48c0","modified":1602246605884},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/snd/tapBody_00.mp3","hash":"23c998ca4549b7908aef029d28b6ae22cbfcdc82","modified":1602246605884},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/mtn/pinchIn_00.mtn","hash":"ed792ed8226aa5a3e5bf059285b2c95855c11303","modified":1602246605868},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/snd/pinchIn_00.mp3","hash":"d143662d2c8cfb1150f719d3d55c75d454535690","modified":1602246605884},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/exp/f01.exp.json","hash":"84073a497ddb6e56c6cfc244a0fb217ba473abf9","modified":1602246605884},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/exp/f02.exp.json","hash":"461fe8077a2289e309ffc7edf561501a7edcce88","modified":1602246605899},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/exp/f03.exp.json","hash":"a65382a1a8d8f7034eac2c811b9f122a8b3f1403","modified":1602246605899},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/exp/f04.exp.json","hash":"3156286d7e0281e15c637a889aa415eef3224fa7","modified":1602246605899},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/exp/f05.exp.json","hash":"1123786fb0bb9c31f7d30cf14b2299f898cdc207","modified":1602246605899},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/exp/f06.exp.json","hash":"d962889ec7c563d818ddb5ab1e58cd337b5e62db","modified":1602246605899},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/exp/f07.exp.json","hash":"d55366c9bcf382e8273cf1803f65cdb8a4a0d336","modified":1602246605899},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/exp/f08.exp.json","hash":"4a9ba4b11d9797f59c7b043d2b807ed8253f3cc4","modified":1602246605899},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/snd/shake_00.mp3","hash":"28b245865f200b61cb009dfbd3811d9e9b0748fb","modified":1602246605884},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/snd/tapBody_02.mp3","hash":"be111df9ecd006e992f94cb4280c2b66d9cd23ed","modified":1602246605884},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/snd/tapBody_01.mp3","hash":"d3d5607dbe394225e2ee858531b7767f567c4e10","modified":1602246605884},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/mtn/idle_00.mtn","hash":"bbaaafe4de159dd4fb73d137d283c640d3fede53","modified":1602246605915},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/mtn/idle_01.mtn","hash":"035c196f276ed177239ea05eeaece68b0fda2935","modified":1602246605915},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/mtn/idle_02.mtn","hash":"82291b3b78339d52f559a65d02b78e0b30180503","modified":1602246605915},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/mtn/pinchIn_00.mtn","hash":"ed792ed8226aa5a3e5bf059285b2c95855c11303","modified":1602246605915},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/mtn/shake_00.mtn","hash":"7e938c4abe83273766c4562a571301811dea1de6","modified":1602246605915},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/mtn/tapBody_01.mtn","hash":"91fbfe1870f7a0a5f5fdb87c213c41b2a8cb5648","modified":1602246605915},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/mtn/tapBody_02.mtn","hash":"e93a2163cbb85525338e11a520e317329b11fb65","modified":1602246605915},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/mtn/flickHead_00.mtn","hash":"66577f6dde2bec905930fba0dd5f06de939c8f1e","modified":1602246605915},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/mtn/pinchOut_00.mtn","hash":"db831991287e3a4724578f068a68e48168081d5a","modified":1602246605915},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/mtn/tapBody_03.mtn","hash":"fcd573576112ad5f4e4b7dc0b750de79f150f971","modified":1602246605915},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/mtn/tapBody_04.mtn","hash":"557811c5f4ddbd393542366ef95794b19fc60387","modified":1602246605915},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/mtn/tapBody_05.mtn","hash":"5f48e50e938f98636519c370745a39b921907719","modified":1602246605915},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/mtn/tapBody_06.mtn","hash":"3d06ac66c04eb12c64d36551dd85389f0b0ee51f","modified":1602246605915},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/mtn/tapBody_08.mtn","hash":"64a03a904d701039bf81e1296ee79537c2e8800e","modified":1602246605915},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/mtn/tapBody_09.mtn","hash":"4f50c17dcf352995e51a4d462b9ca7a9e9197d5c","modified":1602246605915},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/mtn/tapBody_07.mtn","hash":"d299747aaf27377d552ef1f8b4fce9871a65c37d","modified":1602246605915},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/snd/flickHead_00.mp3","hash":"0b447e7e38eb20f3f7e8ba2a5ea5f521f6e37a26","modified":1602246605915},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/snd/tapBody_00.mp3","hash":"23c998ca4549b7908aef029d28b6ae22cbfcdc82","modified":1602246605931},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/snd/pinchOut_00.mp3","hash":"6872da79e1b515b2c996eecee4ca150e22aa48c0","modified":1602246605931},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/snd/pinchIn_00.mp3","hash":"d143662d2c8cfb1150f719d3d55c75d454535690","modified":1602246605931},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/snd/tapBody_01.mp3","hash":"d3d5607dbe394225e2ee858531b7767f567c4e10","modified":1602246605931},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/snd/tapBody_02.mp3","hash":"be111df9ecd006e992f94cb4280c2b66d9cd23ed","modified":1602246605931},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/mtn/tapBody_00.mtn","hash":"4041b2f1f2f4a84454180f9dab14e46d99e135c0","modified":1602246605915},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/snd/shake_00.mp3","hash":"28b245865f200b61cb009dfbd3811d9e9b0748fb","modified":1602246605931},{"_id":"themes/lucky/source/live2d_models/z16/assets/moc/z16.512/texture_00.png","hash":"251b9f944fb1575c01a62b8a9d7522fe76954b3b","modified":1602246606561},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/moc/haru01.1024/texture_00.png","hash":"f3c4103630bbf0660f793f90a14b51fdb7dfb7ea","modified":1602246605868},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/moc/haru02.1024/texture_00.png","hash":"f3c4103630bbf0660f793f90a14b51fdb7dfb7ea","modified":1602246605899},{"_id":"themes/lucky/source/main.cde658.css","hash":"37333b663b297fa69e66fd233b3e895c1bc91b2b","modified":1602425622564},{"_id":"themes/lucky/layout/_partial/script.ejs","hash":"a704f4ec8d007ee8a44ecf289a2b10e88bc0345e","modified":1602425622566},{"_id":"themes/lucky/source/gitment/APlayer.min.js","hash":"b2ab8c0b6a50e884240d80c1a12435b1efc718f3","modified":1602246605650},{"_id":"themes/lucky/source/lib/gitment.js.bak","hash":"ded86ac10cc79a7d28e2ea44778e792cef6c3470","modified":1602246605681},{"_id":"themes/lucky/source/lib/jquery-2.1.4.min.js","hash":"1327f754ff87d26bced46568543207e9df190aaa","modified":1602246605681},{"_id":"themes/lucky/source/img/alipay.jpg","hash":"bda816152f1d7e5e52755a079d196850e62d6c97","modified":1602246605650},{"_id":"themes/lucky/source/img/weixin.png","hash":"3ad8925d382e7cb5599b827b1b8793bcaefb2a1f","modified":1602246605665},{"_id":"themes/lucky/source/plugins/TweenMax/TweenMax.min.js","hash":"1079921a545c4726cde7a043350a4e3da3dde80f","modified":1602246606576},{"_id":"themes/lucky/source/plugins/live2d-widget.js/L2Dwidget.min.js.map","hash":"75322ae0754f0580c0fb5ce9176ab72ce4009903","modified":1602246606607},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/moc/Epsilon2.1.moc","hash":"2148649bde741b6e1557c0ea3c076e5ce5a23632","modified":1602246605743},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/snd/pinchIn_02.mp3","hash":"5b63e02607571ac601c500995e836e6c861b1c62","modified":1602246606420},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/snd/pinchOut_00.mp3","hash":"0654f38f6e9fd623eaf8be11b5d58c9d12991949","modified":1602246606420},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/snd/pinchOut_01.mp3","hash":"8a081030fd53c07bffe3edd48f87a371ca77296b","modified":1602246606420},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/snd/pinchOut_02.mp3","hash":"554edb2f3838cbdc27d1a9c6b8a9cb6eb465cbdd","modified":1602246606420},{"_id":"themes/lucky/source/live2d_models/z16/assets/moc/z16.256/texture_00.png","hash":"19f22619c246067d519aa1e6e477497cc4342414","modified":1602246606561},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_11.mtn","hash":"63b0adf0414ebad9a3bec91417629d983c546975","modified":1602246606498},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_12.mtn","hash":"b68b20df9b695e0d7ac93a5865097b27c3123f21","modified":1602246606498},{"_id":"themes/lucky/source/live2d_models/wanko/assets/moc/wanko.moc","hash":"7b188cd4dcddfe5bdba8ec51a65cb1c21cd2e57a","modified":1602246606545},{"_id":"themes/lucky/source/live2d_models/z16/assets/moc/z16.moc","hash":"6b0241e80e94664d694b43ad05333960de2550c1","modified":1602246606561},{"_id":"themes/lucky/source/live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_04.png","hash":"2c63a9622a875fea1abcdb9ef437b64556090d22","modified":1602246605821},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/moc/ni-j.2048/texture_00.png","hash":"413695bc00193e587b85c944df11d721192dd9a0","modified":1602246606163},{"_id":"themes/lucky/source/live2d_models/nico/assets/moc/nico.2048/texture_00.png","hash":"413695bc00193e587b85c944df11d721192dd9a0","modified":1602246606206},{"_id":"themes/lucky/source/live2d_models/nico/assets/moc/nico.2048/texture_02.png","hash":"8e4a632c61506e3cc07d8ba704aa4ec2567fe11b","modified":1602246606214},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/moc/nietzsche.2048/texture_00.png","hash":"413695bc00193e587b85c944df11d721192dd9a0","modified":1602246606245},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/moc/nipsilon.2048/texture_01.png","hash":"413695bc00193e587b85c944df11d721192dd9a0","modified":1602246606279},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/moc/shizuku.1024/texture_00.png","hash":"21bdb28b31783e23b26b3aa061e90be4088665aa","modified":1602246606357},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/moc/shizuku.1024/texture_03.png","hash":"07f568a2bb8045b6bdff7783fb4daf62c821f9ab","modified":1602246606357},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/moc/shizuku.1024/texture_05.png","hash":"0cd00007fb8bff62a2eb08e1d7c43abab8722224","modified":1602246606373},{"_id":"themes/lucky/source/live2d_models/nito/assets/moc/nito.2048/texture_01.png","hash":"413695bc00193e587b85c944df11d721192dd9a0","modified":1602246606326},{"_id":"themes/lucky/source/live2d_models/wanko/assets/moc/wanko.1024/texture_00.png","hash":"c405c1eeb82bcced7aa7a20f04a76168f60ad561","modified":1602246606545},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/moc/nietzsche.2048/texture_01.png","hash":"fc5a8b833e1b089808e893158a71b8597161fda0","modified":1602246606248},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/moc/haru01.1024/texture_01.png","hash":"dd05d6b7f8f0d0c167b040f41ffd7c10a3747d96","modified":1602246605868},{"_id":"themes/lucky/source/main.cde658.js","hash":"c1c74f8641972318f43be2f99dd6cd4c90b6689a","modified":1602419999625},{"_id":"themes/lucky/examples/images/Yilia-plus.png","hash":"23884fe970ec806b05511288f52cd576f5ac1fff","modified":1601870173622},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/moc/haru01.1024/texture_02.png","hash":"6a1e0b336da79557325da9f58a69a380d67ecbb1","modified":1602246605868},{"_id":"themes/lucky/source/slider.cf3a85.js","hash":"f3ae60c2aca0c43425b6fae856d45be6d253840b","modified":1602419999626},{"_id":"themes/lucky/source/lib/gitment.js","hash":"6efab6ebe558a6cab0e0004a737e3f739d614d5e","modified":1602246605681},{"_id":"themes/lucky/source/plugins/live2d-widget.js/L2Dwidget.common.js","hash":"053bf325dfd46b3f3b470079d9e9e43313be6eeb","modified":1602246606592},{"_id":"themes/lucky/source/lib/gitment.js.bak2","hash":"8065a9364e25414c6a37d4be181f1c6052c4d590","modified":1602246605681},{"_id":"themes/lucky/source/live2d_models/hibiki/assets/moc/hibiki.moc","hash":"deff9b550df1e2dc47a57f1099e46de6737a0ec6","modified":1602246605962},{"_id":"themes/lucky/source/live2d_models/izumi/assets/moc/izumi_illust.moc","hash":"819e029e0d81ed64c59d47fc747026d4bbe637d6","modified":1602246606071},{"_id":"themes/lucky/source/plugins/live2d-widget.js/L2Dwidget.0.min.js","hash":"483c29206ea8370f6e700cb9c0f10836d97f68ac","modified":1602246606576},{"_id":"themes/lucky/source/live2d_models/unitychan/assets/moc/unitychan.moc","hash":"94047b7bb9a99f43ab4dbe5b013a8fb9de854086","modified":1602246606514},{"_id":"themes/lucky/source/live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_03.png","hash":"80f11d03197912296cd27ce7f59f490336396309","modified":1602246605806},{"_id":"themes/lucky/source/live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_06.png","hash":"e04b38575cb49bf538d98d0bcc642be4eaf89f73","modified":1602246605821},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/moc/ni-j.2048/texture_01.png","hash":"f868cb3bffe97108ef677c43659a6ad7f6a906b2","modified":1602246606163},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/moc/shizuku.1024/texture_01.png","hash":"3d0e745f3e560071ee08beeecde186e5ea35d99e","modified":1602246606357},{"_id":"themes/lucky/source/live2d_models/z16/assets/moc/z16.1024/texture_00.png","hash":"c4f7c067d7d37601490554438ab801fce1feb92d","modified":1602246606561},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/moc/shizuku.1024/texture_04.png","hash":"f764d594841905db8b2998dd61c329866125ad97","modified":1602246606373},{"_id":"themes/lucky/examples/images/web.png","hash":"9748de6b01c6b044c421d548993b1024abeb8b0c","modified":1601870173627},{"_id":"themes/lucky/source/live2d_models/hijiki/assets/moc/hijiki.moc","hash":"44289e62545a7046e0f5231103a851750b78524e","modified":1602246605993},{"_id":"themes/lucky/source/live2d_models/miku/assets/moc/miku.moc","hash":"a57e92e12f1fcb21d4d3a9ac34f01badbeff3671","modified":1602246606149},{"_id":"themes/lucky/source/live2d_models/ni-j/assets/moc/ni-j.moc","hash":"d846e2c4a4db0f003f2eda466f64cf2165e39ad8","modified":1602246606163},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/moc/nietzsche.moc","hash":"63e70620e9eee593dbb77b26209ad64afa82f571","modified":1602246606259},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/moc/nipsilon.moc","hash":"77ea4fba30cd6f056d1175654a8c950523cdf37e","modified":1602246606295},{"_id":"themes/lucky/source/live2d_models/nito/assets/moc/nito.moc","hash":"aae6ab7a4687b166b30fb3bbfb1de5e91a5641e4","modified":1602246606326},{"_id":"themes/lucky/source/live2d_models/haru/01/assets/moc/haru01.moc","hash":"d2223b555b3bdbbd955301c4c5bcbe7ebe19bec1","modified":1602246605868},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/moc/haru02.moc","hash":"748cf01b45bebb3b217d6363f9d5ff81ab942787","modified":1602246605915},{"_id":"themes/lucky/source/live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_05.png","hash":"e6b2987797dbcf113879024df919aa716ded9d4e","modified":1602246605821},{"_id":"themes/lucky/source/live2d_models/haruto/assets/moc/haruto.2048/texture_00.png","hash":"62b970aa1480a1c18bdc4e74e297f2a1b34ca9fa","modified":1602246605946},{"_id":"themes/lucky/source/live2d_models/tororo/assets/moc/tororo.moc","hash":"44289e62545a7046e0f5231103a851750b78524e","modified":1602246606451},{"_id":"themes/lucky/source/live2d_models/nico/assets/moc/nico.2048/texture_01.png","hash":"9a19b242b9309624de1e43703b240c1c72bf2205","modified":1602246606213},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/moc/shizuku.1024/texture_02.png","hash":"055eb2da9c13e9116be93a1e60c0ea2b660af864","modified":1602246606357},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/moc/haru02.1024/texture_01.png","hash":"dd05d6b7f8f0d0c167b040f41ffd7c10a3747d96","modified":1602246605899},{"_id":"themes/lucky/source/live2d_models/hijiki/assets/moc/hijiki.2048/texture_00.png","hash":"66464e0d96439695b5542c5e2f5be60739c29999","modified":1602246605993},{"_id":"themes/lucky/source/live2d_models/nietzsche/assets/moc/nietzsche.2048/texture_02.png","hash":"9abe0e1b8fe05ad4c678f17fd0f47a064f98908d","modified":1602246606256},{"_id":"themes/lucky/source/live2d_models/koharu/assets/moc/koharu.2048/texture_00.png","hash":"0879b61b745084781722636bba9f278f31ce5fc1","modified":1602246606103},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/moc/nipsilon.2048/texture_00.png","hash":"8ea2e684b826d4a8548b237ab86b3bb701ca8d5b","modified":1602246606279},{"_id":"themes/lucky/source/live2d_models/nito/assets/moc/nito.2048/texture_00.png","hash":"8ea2e684b826d4a8548b237ab86b3bb701ca8d5b","modified":1602246606326},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/moc/tsumiki.2048/texture_00.png","hash":"0316bc67bc2bde4017530989f34d62981ed88ab5","modified":1602246606467},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/moc/tsumiki.2048/texture_01.png","hash":"ffbb082160de6e3bb664b1a4e16b503a80b549c2","modified":1602246606482},{"_id":"themes/lucky/source/live2d_models/haru/02/assets/moc/haru02.1024/texture_02.png","hash":"df02ff8355fca1389bbed5153dc1dadd8cd1c704","modified":1602246605899},{"_id":"themes/lucky/source/live2d_models/chitose/assets/moc/chitose.moc","hash":"7e328a496119887e4caaaa5b81adb3aacb0dac19","modified":1602246605728},{"_id":"themes/lucky/source/live2d_models/haruto/assets/moc/haruto.moc","hash":"57bec0b245b49ea941d61ba3dee671f20441afae","modified":1602246605946},{"_id":"themes/lucky/source/live2d_models/koharu/assets/moc/koharu.moc","hash":"5eec3fba21444dd6f774b913510b5955e2c0605b","modified":1602246606103},{"_id":"themes/lucky/source/live2d_models/tororo/assets/moc/tororo.2048/texture_00.png","hash":"98af764b541083e87fc2f8e85f02d2db38c898cc","modified":1602246606436},{"_id":"themes/lucky/source/live2d_models/nico/assets/moc/nico.moc","hash":"371b0d972aca62a2b67d32398be091d792f0b3cb","modified":1602246606218},{"_id":"themes/lucky/source/live2d_models/tsumiki/assets/moc/tsumiki.moc","hash":"cc023058ae61f70acf7580c4e2352b84eaf1a7b9","modified":1602246606482},{"_id":"themes/lucky/source/live2d_models/epsilon2_1/assets/moc/Epsilon2.1.2048/texture_00.png","hash":"5a245b4c78e6ebaad4d50e47361d1fada208ae5f","modified":1602246605743},{"_id":"themes/lucky/source/live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_02.png","hash":"1c2cf2502769b3a359c121823f9ecdb114063288","modified":1602246605806},{"_id":"themes/lucky/source/live2d_models/unitychan/assets/moc/unitychan.2048/texture_00.png","hash":"2268ef1522ce750bb63f59a6bd1022c8c531e307","modified":1602246606514},{"_id":"themes/lucky/source/live2d_models/hibiki/assets/moc/hibiki.2048/texture_00.png","hash":"91349297cc411865cf5605a998b68a97fe67eec5","modified":1602246605962},{"_id":"themes/lucky/source/live2d_models/nipsilon/assets/moc/nipsilon.2048/texture_02.png","hash":"8052842f4b880ce16a01703a128d8881f63f8543","modified":1602246606295},{"_id":"themes/lucky/source/mobile.35b535.js","hash":"5d5122a1d7f2543040e68cc4f513eaa833008507","modified":1602419999626},{"_id":"themes/lucky/source/lib/giteement.browser.js","hash":"824925ebd507d6b6fe3005f6c90c64809638456b","modified":1602246605665},{"_id":"themes/lucky/source/live2d_models/izumi/assets/moc/izumi_illust.1024/texture_02.png","hash":"4b45fb19ee5b662678692132feae93119ff56d08","modified":1602246606040},{"_id":"themes/lucky/source/plugins/live2d-widget.js/L2Dwidget.0.min.js.map","hash":"3b3a7076b747b092d6e48f42a8a3497aa21280ee","modified":1602246606592},{"_id":"themes/lucky/source/live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_01.png","hash":"da2a0785207727ba87a30ed6853dafd9978eb7b4","modified":1602246605806},{"_id":"themes/lucky/source/plugins/live2d-widget.js/L2Dwidget.common.js.map","hash":"8de60ae490ab3d62c91c8ce60a256079b6afd3d8","modified":1602246606592},{"_id":"themes/lucky/source/live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_00.png","hash":"ff5b30d94adfcca1e5b77a3b7d3d75d750707d83","modified":1602246605790},{"_id":"themes/lucky/source/live2d_models/izumi/assets/moc/izumi_illust.1024/texture_01.png","hash":"274627b4750bac66b29a9c19a939aca1655b1d27","modified":1602246606040},{"_id":"themes/lucky/source/live2d_models/izumi/assets/moc/izumi_illust.1024/texture_03.png","hash":"84005d6e75ed9db0f531b6e5e0d6d541da796b04","modified":1602246606056},{"_id":"themes/lucky/source/live2d_models/shizuku/assets/moc/shizuku.moc","hash":"c2670a0f75830edc89d7fe6d074de4ee67e8dc5d","modified":1602246606389},{"_id":"themes/lucky/source/live2d_models/miku/assets/moc/miku.2048/texture_00.png","hash":"26fe101720ab8e55fb62c87b563d0dbb903c5eaf","modified":1602246606149},{"_id":"themes/lucky/source/live2d_models/izumi/assets/moc/izumi_illust.1024/texture_00.png","hash":"bfcecfa399b328ac15eba45f2b6b3b18d50f2daf","modified":1602246606024},{"_id":"themes/lucky/source/live2d_models/gf/assets/moc/Gantzert_Felixander.moc","hash":"67d418af2db593b0b6f318e95f49d4370515c8f0","modified":1602246605837},{"_id":"themes/lucky/source/live2d_models/chitose/assets/moc/chitose.2048/texture_00.png","hash":"505dbba0bec5d7fda0cead773caa540a0158a610","modified":1602246605728},{"_id":"public/content.json","hash":"b4cef80d03a669baf34e71b80c962bfb7f8eae77","modified":1603354815851},{"_id":"public/comment/index.html","hash":"b3996616461abc9adc5a89f9505772b00c32dc81","modified":1603354815851},{"_id":"public/2020/10/22/2020-10-22-es6-async-methods/index.html","hash":"28d083a7017be9a45d3772a08a895339d8b89ad8","modified":1603354815851},{"_id":"public/2020/10/21/2020-10-21-browser-window-size/index.html","hash":"888ffd45975e05db13c1f4c8ff3f52c4723d60b8","modified":1603354815851},{"_id":"public/2020/10/11/2020-10-11-hexo-new-page/index.html","hash":"76deb303f63b8e21a96543d061b28892198df785","modified":1603354815851},{"_id":"public/2020/10/11/2020-10-11-gitee-update-pages-auto/index.html","hash":"8b090dc539b354df905377a5ced47887b70a2d8f","modified":1603354815851},{"_id":"public/2020/10/07/2020-10-07-deploy-hexo/index.html","hash":"9f5d0dc97da01c58eaa9892b622a1411e7495b65","modified":1603354815851},{"_id":"public/2020/09/30/2020-09-30-hexo-add-article-nav/index.html","hash":"069a7c9a76238810c34747f2a283d59fa390888c","modified":1603354815851},{"_id":"public/2020/09/27/2020-09-27-debian-install-command/index.html","hash":"3cad7d23f795d7d7355036fed6c857465c5ae540","modified":1603354815851},{"_id":"public/2020/09/27/2020-09-27-debian-install-k8s-offline/index.html","hash":"67dda40f9ac270fe637f26dd3a9dfffe9aabcca5","modified":1603354815851},{"_id":"public/2020/09/27/2020-09-27-docker-install-offline/index.html","hash":"727dccb239cdc3122a6f53ea80c2779f8e4b7595","modified":1603354815851},{"_id":"public/2020/09/27/2020-09-27-node-http-server/index.html","hash":"d7842ea3fff7d937b84376ee1764cdd8d3885a3c","modified":1603354815851},{"_id":"public/2020/09/17/2020-09-17-k8s-add-new-domain-name/index.html","hash":"0ac0b5bbd31cfba1e73d09785e671782877c292c","modified":1603354815851},{"_id":"public/2020/09/14/2020-09-14-ruby-rare-knowledge/index.html","hash":"683efe8b7fd9fd8525d9d4dbeb5070383a62c105","modified":1603354815851},{"_id":"public/2020/09/10/2020-09-10-debian-install-k8s/index.html","hash":"7369bd62f10eab5ce60f3dfe25ca29cd76391366","modified":1603354815851},{"_id":"public/2020/09/06/2020-09-06-interview-css/index.html","hash":"c49d1f2617789fbfae0ec5ab8c4df58bba0ee77a","modified":1603354815851},{"_id":"public/2020/09/04/2020-09-04-centos-install-k8s/index.html","hash":"a249a2551cf1f67a0b4b18cfb12275c999f939cd","modified":1603354815851},{"_id":"public/2020/05/11/2020-05-11-linux-connect-blueteeth/index.html","hash":"a6fb033cb35a27c90a76e4b147eca3cd6ad74321","modified":1603354815851},{"_id":"public/2019/10/29/2019-10-29-proxy-of-docker/index.html","hash":"ae0d83ea64fc3016c6cb9fabc038ddbfc1c1536b","modified":1603354815851},{"_id":"public/2019/10/22/2019-10-22-percentage-of-css/index.html","hash":"e0547ab2ade5ad95f477ed7c2d7ad31012aa6b3e","modified":1603354815851},{"_id":"public/2019/07/12/2019-07-12-网站推荐/index.html","hash":"526a2be8f0c2417ff20a8735668dc06ed18056b2","modified":1603354815851},{"_id":"public/2019/05/27/2019-05-27-flex布局/index.html","hash":"52fa478cc56f8ece0b70b2b8d438bbbff2c754e3","modified":1603354815851},{"_id":"public/2019/05/22/2019-05-22-css居中详解/index.html","hash":"978dd77a78e828c018468b56d7ed5067ff5968cc","modified":1603354815851},{"_id":"public/2019/05/08/2019-05-08-js事件委托机制/index.html","hash":"b735aff6f55071a1af8381b00e8e9c8c7fc5a6a2","modified":1603354815851},{"_id":"public/2019/04/03/2019-04-03-git环境配置/index.html","hash":"ad15df2990f8f9f553600d1b14f71dac6a4bb1ba","modified":1603354815851},{"_id":"public/2019/03/29/2019-03-29-ruby-open3死锁/index.html","hash":"343c7a3484ecc0c9a991fe621101e20ab90834ea","modified":1603354815851},{"_id":"public/2019/03/20/2019-03-20-Ruby-Rails学习资料/index.html","hash":"ebf589e1ebaa04cdcc00c2014b4e6ccfa307b0b6","modified":1603354815851},{"_id":"public/2019/03/19/2019-03-19-ruby基本知识/index.html","hash":"0c30308d85a80a2f44e6296aa2c733dd48ff1f82","modified":1603354815851},{"_id":"public/2019/03/15/2019-03-12-代理服务器的搭建/index.html","hash":"5c82df233a424376383f437eea2608927660889e","modified":1603354815851},{"_id":"public/2019/03/12/2019-03-12-DataTable/index.html","hash":"f671b5b2d218928625775799b1e7a57f5f4f0076","modified":1603354815851},{"_id":"public/2019/03/12/2019-03-12-DataTable使用正则/index.html","hash":"d08dc4ea7ad417b81afaadb20e91be8619693eed","modified":1603354815851},{"_id":"public/2019/03/05/2019-03-05-数据库/index.html","hash":"5c2ca8e79f9bff4ace4286ec0aaa758a07ab380e","modified":1603354815851},{"_id":"public/archives/index.html","hash":"099465c4d07200b52474855aab69b6e0a16b1afb","modified":1603354815851},{"_id":"public/archives/page/2/index.html","hash":"4216141941ce48bd5a0f03f0cccec7c5abb5e326","modified":1603354815851},{"_id":"public/archives/page/3/index.html","hash":"84d614a1fc70502dcf39cab6b90473db4053b29a","modified":1603354815851},{"_id":"public/archives/2019/index.html","hash":"9d85f42fb3cb74b22d53a93381f32439a937b4dd","modified":1603354815851},{"_id":"public/archives/2019/page/2/index.html","hash":"dda56381d09fd8f4870ddf260a8f0ec0ee5db756","modified":1603354815851},{"_id":"public/archives/2019/03/index.html","hash":"de05e925ae61afbc2e73915acec6e3d78ca2c60e","modified":1603354815851},{"_id":"public/archives/2019/04/index.html","hash":"ae7ec1efaf13d5f687b8ea4ec50618fa3b1858ca","modified":1603354815851},{"_id":"public/archives/2019/05/index.html","hash":"572403f9f694091cbbfdb90941764bc9ba26844e","modified":1603354815851},{"_id":"public/archives/2019/07/index.html","hash":"7c323631a53d8866f6011c3d44a008a253a2d127","modified":1603354815851},{"_id":"public/archives/2019/10/index.html","hash":"e6614042d335b8c606d8e99c620d623c9f3c752b","modified":1603354815851},{"_id":"public/archives/2020/index.html","hash":"ade05478858a011dd04d3cb8ee115ca55a130ea2","modified":1603354815851},{"_id":"public/archives/2020/page/2/index.html","hash":"50dbb3a5ac46952e51e9b08bdd9dc44b384cc10b","modified":1603354815851},{"_id":"public/archives/2020/05/index.html","hash":"8c4fc7834d2b8a0ae0e23b4f83b8c60e4d60fbc9","modified":1603354815851},{"_id":"public/archives/2020/09/index.html","hash":"3d2aa7773ae77d239a98888dbc41779e2ed92f6a","modified":1603354815851},{"_id":"public/archives/2020/10/index.html","hash":"d480b86b430e2df72663f058e026b6a2aaa04d22","modified":1603354815851},{"_id":"public/index.html","hash":"63f66a9f77724a4b8c84aa4aac9fbef2a898b146","modified":1603354815851},{"_id":"public/page/2/index.html","hash":"4fbab78f24ed1b77ce9344bf646928c05b4baa16","modified":1603354815851},{"_id":"public/page/3/index.html","hash":"455e9fad5e06971ec35b5ddb263acca2d7a2578e","modified":1603354815851},{"_id":"public/tags/mongo/index.html","hash":"fe56b4fdacb01c9d8c850e0b1a158ca6d881c94b","modified":1603354815851},{"_id":"public/tags/ruby/index.html","hash":"7414b4df5208ad65bc734da4819a4c655bba978f","modified":1603354815851},{"_id":"public/tags/DataTable/index.html","hash":"5c8ca74da553e40d58f444088251fd79da79fdd2","modified":1603354815851},{"_id":"public/tags/web/index.html","hash":"48d7a12eceab7edad6fa2a885708a40d8925804b","modified":1603354815851},{"_id":"public/tags/javascript/index.html","hash":"a170f292f2374f36e365f231b18cb5af0b7be67f","modified":1603354815851},{"_id":"public/tags/linux/index.html","hash":"e264f723d1b0c5cc0fde74e2d8fd67c273b370f4","modified":1603354815851},{"_id":"public/tags/network/index.html","hash":"af14c90274e9f14e02aaaea7b979253f993a5d0a","modified":1603354815851},{"_id":"public/tags/base/index.html","hash":"ff50238313c0e2530675652a48885b57b70473f7","modified":1603354815851},{"_id":"public/tags/rails/index.html","hash":"89076f0378c4d471501903e82eaa6fdaf4e15692","modified":1603354815851},{"_id":"public/tags/git/index.html","hash":"a800c9e668c871f4e9e8e02859f3008edc68448a","modified":1603354815851},{"_id":"public/tags/css/index.html","hash":"f0a3ac379c1fb2928cc563953d02c0a0fb46109c","modified":1603354815851},{"_id":"public/tags/projects/index.html","hash":"130eab1410d9e12b04df2702a1c4ffd867154eca","modified":1603354815851},{"_id":"public/tags/docker/index.html","hash":"c30b0a1066a3a249d60dc53748e474155aa4f6a3","modified":1603354815851},{"_id":"public/tags/html/index.html","hash":"777dc0b79b208002f85a1fb67f685ea78df711d3","modified":1603354815851},{"_id":"public/tags/kubernetes/index.html","hash":"1776815f17f33c2cdf05cef5c0bb98809eaacab7","modified":1603354815851},{"_id":"public/tags/debian/index.html","hash":"537a156e9387020ae2fb99db9b049431044ed7a8","modified":1603354815851},{"_id":"public/tags/ubuntu/index.html","hash":"da37a204f0d80cba835a8ab3c7e41207f46134cd","modified":1603354815851},{"_id":"public/tags/nodejs/index.html","hash":"f13125f3460b5b0a0684c86b173938b8e952b635","modified":1603354815851},{"_id":"public/tags/hexo/index.html","hash":"a69d4467d8430965c20cc3c397c32df90593bd30","modified":1603354815851},{"_id":"public/tags/centos/index.html","hash":"2189fa777b15939652d9837038b3833163aa760f","modified":1603354815851},{"_id":"public/fonts/default-skin.b257fa.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1603354815851},{"_id":"public/fonts/fonteditor.3da1ef.woff","hash":"5a945ddf318d3ca68d0a1e8695b23287ff7e9816","modified":1603354815851},{"_id":"public/fonts/fonteditor.3e0d4a.svg","hash":"de1fbf8378d1966d43bf620b8acd6bf900a15a73","modified":1603354815851},{"_id":"public/fonts/fonteditor.86c132.eot","hash":"c29905356fb2116a454a262d6f15cdeb593a6cec","modified":1603354815851},{"_id":"public/fonts/fonteditor.bbc4b5.woff2","hash":"c748dc092f066f7e12626c801d416e64b95dacea","modified":1603354815851},{"_id":"public/fonts/fonteditor.fe4d8a.ttf","hash":"95d1a4991df9ce15562ff0344b318b5fc5f9ab70","modified":1603354815851},{"_id":"public/fonts/tooltip.4004ff.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1603354815851},{"_id":"public/fonts/tooltip.d04149.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1603354815851},{"_id":"public/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1603354815851},{"_id":"public/img/forkme.png","hash":"b43e6e18b84edc40636204aa0eb9f266ef54a4e7","modified":1603354815851},{"_id":"public/img/gitee.svg","hash":"5eda5e779b8407430aa53f3c6c38bd0ecc04b003","modified":1603354815851},{"_id":"public/img/head.jpg","hash":"5b6f34880e460e77571126ad797ae2b9d88a4fe1","modified":1603354815851},{"_id":"public/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1603354815851},{"_id":"public/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1603354815851},{"_id":"public/live2d_models/chitose/assets/mtn/chitose_handwave.mtn","hash":"3d7a0f7ffda7d2ac3bb6fde6ccc49521c0d7713b","modified":1603354815851},{"_id":"public/live2d_models/chitose/assets/mtn/chitose_idle.mtn","hash":"f3d1ab532e49a20e98cadb0290c959d7f1086eb6","modified":1603354815851},{"_id":"public/live2d_models/chitose/assets/mtn/chitose_kime01.mtn","hash":"97308ef8c5798374a6b1ba6cdec53d6732a4728a","modified":1603354815851},{"_id":"public/live2d_models/chitose/assets/mtn/chitose_kime02.mtn","hash":"3eed16b70dc2f7b7e50417f19207e3cabccaa166","modified":1603354815851},{"_id":"public/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_idle_01.mtn","hash":"b4e67d3091aba34efcf9ff3659fa36f6f1a4bd22","modified":1603354815851},{"_id":"public/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_01.mtn","hash":"eecc2854bea6bf90c9f0a0013281ec600c32f2bc","modified":1603354815851},{"_id":"public/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_02.mtn","hash":"7a000a218b098172eeeb8a81e551d558bbaa6f8a","modified":1603354815851},{"_id":"public/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_03.mtn","hash":"3568fc9f7ba95f2521abec8e1241da62581ab7cf","modified":1603354815851},{"_id":"public/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_04.mtn","hash":"b717b620d044859762716d104e137dc9c09c8cce","modified":1603354815851},{"_id":"public/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_05.mtn","hash":"f3a671a29f5d831f04284a8d5fe5adb90cd1e400","modified":1603354815851},{"_id":"public/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_07.mtn","hash":"2fd581bfc662b050c41afb904b9ae54b59d7d010","modified":1603354815851},{"_id":"public/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_06.mtn","hash":"fec328bedb7d5af53e0cfd0eb5991f4574c3676a","modified":1603354815851},{"_id":"public/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_08.mtn","hash":"e61753f72a1c170926c59c71490596aaeee30ca6","modified":1603354815851},{"_id":"public/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_sp_01.mtn","hash":"d72c01b4d9c4faf0f4cb472c390a35712b2ee7f5","modified":1603354815851},{"_id":"public/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_sp_03.mtn","hash":"55c11be6e505791de438c43ad25c31409713544a","modified":1603354815851},{"_id":"public/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_sp_02.mtn","hash":"08f6d29160ce7100441efdd8ac7bbd89fc9c5120","modified":1603354815851},{"_id":"public/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_sp_04.mtn","hash":"42ae0fbe437cd97c623c09bee100c3695abb30ce","modified":1603354815851},{"_id":"public/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_sp_05.mtn","hash":"9eb78800c41148712ac30e1342f025110db0f8d3","modified":1603354815851},{"_id":"public/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_shake_01.mtn","hash":"8f81d974ada9b6800fa6eb852a41906a9e1f4c77","modified":1603354815851},{"_id":"public/live2d_models/gf/assets/mtn/A_00_idle.mtn","hash":"d383fc08986b4d1f746d71abbea6f7b5f54dcc95","modified":1603354815851},{"_id":"public/live2d_models/gf/assets/mtn/A_01.mtn","hash":"91d2def2e00393fcedaaca36cd80340fa95a2d1b","modified":1603354815851},{"_id":"public/live2d_models/gf/assets/mtn/A_02.mtn","hash":"9283c809509daf3f580dcb92bab14960b5a89283","modified":1603354815851},{"_id":"public/live2d_models/gf/assets/mtn/A_04.mtn","hash":"50360a6572518b447af3315236659a576aa1b248","modified":1603354815851},{"_id":"public/live2d_models/haruto/assets/mtn/01.mtn","hash":"61d7d590d9feb71b32fd6bd142b59410d75bc1fa","modified":1603354815851},{"_id":"public/live2d_models/haruto/assets/mtn/02.mtn","hash":"efc99efdff39c93372cff0f6d62c4e748e1a5593","modified":1603354815851},{"_id":"public/live2d_models/haruto/assets/mtn/03.mtn","hash":"a72b697a92a7cff40d15774b143b465b34cee5e6","modified":1603354815851},{"_id":"public/live2d_models/haruto/assets/mtn/04.mtn","hash":"32c888667455a3ff6f1b04f910c1a5cc4de30af0","modified":1603354815851},{"_id":"public/live2d_models/haruto/assets/mtn/05.mtn","hash":"637e00442da4042cd4b0ed2cc62ffb1559881814","modified":1603354815851},{"_id":"public/live2d_models/haruto/assets/mtn/06.mtn","hash":"df10cc1d333c96da1296a4853c1ddbd44d8a11f3","modified":1603354815851},{"_id":"public/live2d_models/haruto/assets/mtn/07.mtn","hash":"d8c9410135c81604eba665b59808089808e0851a","modified":1603354815851},{"_id":"public/live2d_models/haruto/assets/mtn/08.mtn","hash":"9b95ef8548b979d1fca557c74f8d66fb15b34578","modified":1603354815851},{"_id":"public/live2d_models/haruto/assets/mtn/09.mtn","hash":"ecf1283b72e1c4b7e3a97343cd97726813f18790","modified":1603354815851},{"_id":"public/live2d_models/haruto/assets/mtn/idle_02.mtn","hash":"d130dd1d194f05b3eb5391289b0339999e37c3a6","modified":1603354815851},{"_id":"public/live2d_models/hibiki/assets/mtn/hibiki_01.mtn","hash":"cd220b89c26e1267fd7ab8f7cfc714fcd4c3b5a3","modified":1603354815851},{"_id":"public/live2d_models/hibiki/assets/mtn/hibiki_02.mtn","hash":"985154bee77e2934afe74a45071f51e0aa1ac84d","modified":1603354815851},{"_id":"public/live2d_models/hibiki/assets/mtn/hibiki_03.mtn","hash":"0b2e7cb2a32b70a629d9d21205863bb163d06d47","modified":1603354815851},{"_id":"public/live2d_models/hibiki/assets/mtn/hibiki_04.mtn","hash":"6a753859998d7afa17f119f37c5765f0c10b7bca","modified":1603354815851},{"_id":"public/live2d_models/hibiki/assets/mtn/hibiki_05.mtn","hash":"67dc8d35f050e36d08010d55ddbfd06544fb7ad5","modified":1603354815851},{"_id":"public/live2d_models/hibiki/assets/mtn/idle_01.mtn","hash":"3fac7f98ab71858018cbbf21b5a3ad99166d275b","modified":1603354815851},{"_id":"public/live2d_models/hibiki/assets/mtn/idle_02.mtn","hash":"9f7dae129a20775b3209a16ee28e27f496e90ba5","modified":1603354815851},{"_id":"public/live2d_models/hibiki/assets/mtn/idle_03.mtn","hash":"c85916f8699673b0511fd00cd1953896879e0cc5","modified":1603354815851},{"_id":"public/live2d_models/hibiki/assets/mtn/idle_04.mtn","hash":"80d4e53606b3268623b03d12a28570efdb5739ad","modified":1603354815851},{"_id":"public/live2d_models/hibiki/assets/snd/hibiki_01.mp3","hash":"2880911aa4a85958fe02e54b912fbf7e6a1896c6","modified":1603354815851},{"_id":"public/live2d_models/hibiki/assets/snd/hibiki_02.mp3","hash":"75358d4c7ec03c4b1dc02ef60c716d94f031fe2f","modified":1603354815851},{"_id":"public/live2d_models/hibiki/assets/snd/hibiki_03.mp3","hash":"df05cb8288b17e1ad00ed66a731f1558db28cf9b","modified":1603354815851},{"_id":"public/live2d_models/hijiki/assets/mtn/00_idle.mtn","hash":"b224c60e463b9f71ddbfc0c720e430496c175f4f","modified":1603354815851},{"_id":"public/live2d_models/hijiki/assets/mtn/01.mtn","hash":"fb550833ae22c9954c3e01df37ed29b2d61700f2","modified":1603354815851},{"_id":"public/live2d_models/hijiki/assets/mtn/02.mtn","hash":"7eafc52edc73b7cb80ae70d34b43c6ac778fa47b","modified":1603354815851},{"_id":"public/live2d_models/hijiki/assets/mtn/03.mtn","hash":"f900737c7a98441cbb2e05255427e6260e19ae68","modified":1603354815851},{"_id":"public/live2d_models/hijiki/assets/mtn/04.mtn","hash":"c7a25d3c5d783639bae18db2f3cd284b819c3c85","modified":1603354815851},{"_id":"public/live2d_models/hijiki/assets/mtn/05.mtn","hash":"dd20ad24b5d1830a5d44b9bccb28f922eea5e0e5","modified":1603354815851},{"_id":"public/live2d_models/hijiki/assets/mtn/06.mtn","hash":"ad404bd852d276cdd3d054c953e23f90e4e45ae1","modified":1603354815851},{"_id":"public/live2d_models/hijiki/assets/mtn/07.mtn","hash":"b7f2e3a9fa4f3ffbb6e64a08f8d9f45ca1868ffb","modified":1603354815851},{"_id":"public/live2d_models/hijiki/assets/mtn/08.mtn","hash":"4411c7651ff65195b113d95e7d5ebef8a59a37d9","modified":1603354815851},{"_id":"public/live2d_models/izumi/assets/mtn/idle_01.mtn","hash":"ce50f5c562b282dcb11679f682fe0f9e1bb0f37b","modified":1603354815851},{"_id":"public/live2d_models/izumi/assets/mtn/idle_02.mtn","hash":"0c6b52bf64db7bbfee81ee24240ca991320764b4","modified":1603354815851},{"_id":"public/live2d_models/izumi/assets/mtn/idle_03.mtn","hash":"b374923d973970f2c8331b3420660952e2bd8bf5","modified":1603354815851},{"_id":"public/live2d_models/izumi/assets/mtn/idle_04.mtn","hash":"97c0a45af4f0b9f4b828f43eccb1c77c360af637","modified":1603354815851},{"_id":"public/live2d_models/izumi/assets/mtn/izumi_01.mtn","hash":"36286812dc692e00a0b69e71d7fe3c8a2b672281","modified":1603354815851},{"_id":"public/live2d_models/izumi/assets/mtn/izumi_02.mtn","hash":"90add71910fd83c1c66bfb73db6d6d4766c98dac","modified":1603354815851},{"_id":"public/live2d_models/izumi/assets/mtn/izumi_03.mtn","hash":"fc7f8e01f8e7744cbd13a8fea44dda8270f21aeb","modified":1603354815851},{"_id":"public/live2d_models/izumi/assets/mtn/izumi_04.mtn","hash":"551b95d80d31ed4f06d19d99ccc4f795a8392ea3","modified":1603354815851},{"_id":"public/live2d_models/izumi/assets/mtn/izumi_05.mtn","hash":"dbfea56881f31a79bffb6d107e7b1fa867e2da0e","modified":1603354815851},{"_id":"public/live2d_models/izumi/assets/mtn/izumi_06.mtn","hash":"c1a63e659fcc6d5b1b0eac7eaff60faf43e2cb28","modified":1603354815851},{"_id":"public/live2d_models/izumi/assets/mtn/izumi_07.mtn","hash":"e2f9e8cb428fa83251a45166d8f9acad570a47d9","modified":1603354815851},{"_id":"public/live2d_models/izumi/assets/mtn/izumi_08.mtn","hash":"19fc90977a0ca30c18f4afae90d4c3ea27a9b094","modified":1603354815851},{"_id":"public/live2d_models/izumi/assets/mtn/izumi_09.mtn","hash":"97199471755394bed243a29b4cb8397518487296","modified":1603354815851},{"_id":"public/live2d_models/izumi/assets/mtn/izumi_10.mtn","hash":"244ae631fb963ed7619e5d63f189d947a2497eb2","modified":1603354815851},{"_id":"public/live2d_models/izumi/assets/snd/izumi_01.mp3","hash":"11dd394ab4d11d3a3c6d6a1a305ff3a1d1fed21d","modified":1603354815851},{"_id":"public/live2d_models/izumi/assets/snd/izumi_02.mp3","hash":"d35189bae63cc6ef18d3a949c4a46dd5ed74c6b3","modified":1603354815851},{"_id":"public/live2d_models/izumi/assets/snd/izumi_03.mp3","hash":"b3d6e98bc30eaf8ac0cf7ffe2f297742a819b380","modified":1603354815851},{"_id":"public/live2d_models/izumi/assets/snd/izumi_04.mp3","hash":"7647fb1e8823bb48ee5f82dbeac35e3f61b74bef","modified":1603354815851},{"_id":"public/live2d_models/izumi/assets/snd/izumi_06.mp3","hash":"f39ee4b85ed9877100c028bf938a9a8fd0d2cb6b","modified":1603354815851},{"_id":"public/live2d_models/izumi/assets/snd/izumi_08.mp3","hash":"0b73b4f9216ee6b944a91b599c942d567a39fe0f","modified":1603354815851},{"_id":"public/live2d_models/koharu/assets/mtn/02.mtn","hash":"efc99efdff39c93372cff0f6d62c4e748e1a5593","modified":1603354815851},{"_id":"public/live2d_models/koharu/assets/mtn/01.mtn","hash":"61d7d590d9feb71b32fd6bd142b59410d75bc1fa","modified":1603354815851},{"_id":"public/live2d_models/koharu/assets/mtn/03.mtn","hash":"a72b697a92a7cff40d15774b143b465b34cee5e6","modified":1603354815851},{"_id":"public/live2d_models/koharu/assets/mtn/04.mtn","hash":"32c888667455a3ff6f1b04f910c1a5cc4de30af0","modified":1603354815851},{"_id":"public/live2d_models/koharu/assets/mtn/05.mtn","hash":"637e00442da4042cd4b0ed2cc62ffb1559881814","modified":1603354815851},{"_id":"public/live2d_models/koharu/assets/mtn/06.mtn","hash":"df10cc1d333c96da1296a4853c1ddbd44d8a11f3","modified":1603354815851},{"_id":"public/live2d_models/koharu/assets/mtn/08.mtn","hash":"9b95ef8548b979d1fca557c74f8d66fb15b34578","modified":1603354815851},{"_id":"public/live2d_models/koharu/assets/mtn/07.mtn","hash":"d8c9410135c81604eba665b59808089808e0851a","modified":1603354815851},{"_id":"public/live2d_models/koharu/assets/mtn/09.mtn","hash":"ecf1283b72e1c4b7e3a97343cd97726813f18790","modified":1603354815851},{"_id":"public/live2d_models/koharu/assets/mtn/idle.mtn","hash":"058d4628ab04bf42c279501ba4fa37116d384e41","modified":1603354815851},{"_id":"public/live2d_models/miku/assets/mtn/miku_idle_01.mtn","hash":"5633f73601cf8b0a318e7a7265f71cc782683251","modified":1603354815851},{"_id":"public/live2d_models/miku/assets/mtn/miku_m_01.mtn","hash":"bd0ea5f2f0528b21c4e5632838b69e478b652e88","modified":1603354815851},{"_id":"public/live2d_models/miku/assets/mtn/miku_m_03.mtn","hash":"94ef9d31a78f7f90d3fb213c4353afbdb3462cff","modified":1603354815851},{"_id":"public/live2d_models/miku/assets/mtn/miku_m_02.mtn","hash":"2eda9602d626d89285e0c0c5f564383964516cc8","modified":1603354815851},{"_id":"public/live2d_models/miku/assets/mtn/miku_m_04.mtn","hash":"5c440e8f4cd45e73a7c8044ea0e2ea11234f9fd9","modified":1603354815851},{"_id":"public/live2d_models/miku/assets/mtn/miku_m_05.mtn","hash":"73b9b162c1dbf9a6747364ae47b12cba9da0bbec","modified":1603354815851},{"_id":"public/live2d_models/miku/assets/mtn/miku_m_06.mtn","hash":"0bfd6ad29e5e171a1ce03a7acb8ffcca9f463902","modified":1603354815851},{"_id":"public/live2d_models/miku/assets/mtn/miku_shake_01.mtn","hash":"190875ab6cdeee7ae87c4c296429b848c942dd8a","modified":1603354815851},{"_id":"public/live2d_models/ni-j/assets/mtn/00_idle.mtn","hash":"3686b7bfdb43f85f4fe1d94ed59379d2c4bee41d","modified":1603354815851},{"_id":"public/live2d_models/ni-j/assets/mtn/01_happy.mtn","hash":"2020573671b39c81fbd784a8b873ebee019ca501","modified":1603354815851},{"_id":"public/live2d_models/ni-j/assets/mtn/04_surprise.mtn","hash":"4b911af06de9bc6f386aecd623851e5799edaa96","modified":1603354815851},{"_id":"public/live2d_models/ni-j/assets/mtn/02_angry.mtn","hash":"f75e1f580c64695fbbf8ba3c5f49eafc7208411d","modified":1603354815851},{"_id":"public/live2d_models/ni-j/assets/mtn/03_fear.mtn","hash":"b6cdb8fa48960b2a6e66d78ea992221e8108437b","modified":1603354815851},{"_id":"public/live2d_models/ni-j/assets/mtn/05_fun.mtn","hash":"4b956c9c028dce753fafa1859404a136975786d4","modified":1603354815851},{"_id":"public/live2d_models/ni-j/assets/mtn/06_love.mtn","hash":"c9f90cc2e2be55ac9c19cf6a962330dad3833fc1","modified":1603354815851},{"_id":"public/live2d_models/ni-j/assets/mtn/07_bye.mtn","hash":"6a3e90e8efb64cd5b187196625a3d8915efb21c8","modified":1603354815851},{"_id":"public/live2d_models/ni-j/assets/mtn/08_sad.mtn","hash":"63647d9320bf3928d658e1275adbfaeba88748b7","modified":1603354815851},{"_id":"public/live2d_models/ni-j/assets/mtn/09_yawn.mtn","hash":"e0e29a712b01be59ae8bba2e1a0d850e06260d20","modified":1603354815851},{"_id":"public/live2d_models/ni-j/assets/mtn/10_yeah.mtn","hash":"58c4bda1339f41fa8a7e554509a7a871bad392b8","modified":1603354815851},{"_id":"public/live2d_models/ni-j/assets/mtn/11_muscle.mtn","hash":"7d0e3466a996f8704e86913c723ac4b82f14ff47","modified":1603354815851},{"_id":"public/live2d_models/ni-j/assets/mtn/14_ sigh.mtn","hash":"80c4e4f539253d86a7aa5faae2c5e5a3a7b1adcc","modified":1603354815851},{"_id":"public/live2d_models/ni-j/assets/mtn/15_joy.mtn","hash":"b76a24efc57e4c2cc4abf70c293b2e800029a20d","modified":1603354815851},{"_id":"public/live2d_models/ni-j/assets/mtn/17_yes.mtn","hash":"a023cc93e55b3940f1a8690dcfa7ad1cfa534fad","modified":1603354815851},{"_id":"public/live2d_models/ni-j/assets/mtn/18_no.mtn","hash":"9a18a2537bf6634da2bafd3a57d236de30c73b4e","modified":1603354815851},{"_id":"public/live2d_models/ni-j/assets/mtn/19_walk.mtn","hash":"035516e8cdaa5b3c6e7524daca72294284a81126","modified":1603354815851},{"_id":"public/live2d_models/ni-j/assets/mtn/20_sleep.mtn","hash":"914e4670825467e5e8d2f6983bd21c7190e57310","modified":1603354815851},{"_id":"public/live2d_models/nico/assets/mtn/00_idle.mtn","hash":"3686b7bfdb43f85f4fe1d94ed59379d2c4bee41d","modified":1603354815851},{"_id":"public/live2d_models/nico/assets/mtn/01_happy.mtn","hash":"2020573671b39c81fbd784a8b873ebee019ca501","modified":1603354815851},{"_id":"public/live2d_models/nico/assets/mtn/02_angry.mtn","hash":"f75e1f580c64695fbbf8ba3c5f49eafc7208411d","modified":1603354815851},{"_id":"public/live2d_models/nico/assets/mtn/03_fear.mtn","hash":"b6cdb8fa48960b2a6e66d78ea992221e8108437b","modified":1603354815851},{"_id":"public/live2d_models/nico/assets/mtn/04_surprise.mtn","hash":"4b911af06de9bc6f386aecd623851e5799edaa96","modified":1603354815851},{"_id":"public/live2d_models/nico/assets/mtn/06_love.mtn","hash":"c9f90cc2e2be55ac9c19cf6a962330dad3833fc1","modified":1603354815851},{"_id":"public/live2d_models/nico/assets/mtn/05_fun.mtn","hash":"4b956c9c028dce753fafa1859404a136975786d4","modified":1603354815851},{"_id":"public/live2d_models/nico/assets/mtn/07_bye.mtn","hash":"6a3e90e8efb64cd5b187196625a3d8915efb21c8","modified":1603354815851},{"_id":"public/live2d_models/nico/assets/mtn/08_sad.mtn","hash":"63647d9320bf3928d658e1275adbfaeba88748b7","modified":1603354815851},{"_id":"public/live2d_models/nico/assets/mtn/09_yawn.mtn","hash":"e0e29a712b01be59ae8bba2e1a0d850e06260d20","modified":1603354815851},{"_id":"public/live2d_models/nico/assets/mtn/10_yeah.mtn","hash":"58c4bda1339f41fa8a7e554509a7a871bad392b8","modified":1603354815851},{"_id":"public/live2d_models/nico/assets/mtn/11_muscle.mtn","hash":"7d0e3466a996f8704e86913c723ac4b82f14ff47","modified":1603354815851},{"_id":"public/live2d_models/nico/assets/mtn/12_stagger.mtn","hash":"3f1a0b25cb1b9fb150f7a9ef37e8c9ba8d4e6ba1","modified":1603354815851},{"_id":"public/live2d_models/nico/assets/mtn/13_cry.mtn","hash":"27709b59d2e6cba73d69a67cadb8bf50413206a9","modified":1603354815851},{"_id":"public/live2d_models/nico/assets/mtn/14_ sigh.mtn","hash":"80c4e4f539253d86a7aa5faae2c5e5a3a7b1adcc","modified":1603354815851},{"_id":"public/live2d_models/nico/assets/mtn/15_joy.mtn","hash":"b76a24efc57e4c2cc4abf70c293b2e800029a20d","modified":1603354815851},{"_id":"public/live2d_models/nico/assets/mtn/16_menace.mtn","hash":"6edb6b114d53d7f93cff164992db475b0b6f09c3","modified":1603354815851},{"_id":"public/live2d_models/nico/assets/mtn/17_yes.mtn","hash":"a023cc93e55b3940f1a8690dcfa7ad1cfa534fad","modified":1603354815851},{"_id":"public/live2d_models/nico/assets/mtn/18_no.mtn","hash":"9a18a2537bf6634da2bafd3a57d236de30c73b4e","modified":1603354815851},{"_id":"public/live2d_models/nico/assets/mtn/19_walk.mtn","hash":"035516e8cdaa5b3c6e7524daca72294284a81126","modified":1603354815851},{"_id":"public/live2d_models/nietzsche/assets/mtn/01_happy.mtn","hash":"2020573671b39c81fbd784a8b873ebee019ca501","modified":1603354815851},{"_id":"public/live2d_models/nico/assets/mtn/20_sleep.mtn","hash":"914e4670825467e5e8d2f6983bd21c7190e57310","modified":1603354815851},{"_id":"public/live2d_models/nietzsche/assets/mtn/00_idle.mtn","hash":"3686b7bfdb43f85f4fe1d94ed59379d2c4bee41d","modified":1603354815851},{"_id":"public/live2d_models/nietzsche/assets/mtn/03_fear.mtn","hash":"b6cdb8fa48960b2a6e66d78ea992221e8108437b","modified":1603354815851},{"_id":"public/live2d_models/nietzsche/assets/mtn/04_surprise.mtn","hash":"4b911af06de9bc6f386aecd623851e5799edaa96","modified":1603354815851},{"_id":"public/live2d_models/nietzsche/assets/mtn/05_fun.mtn","hash":"4b956c9c028dce753fafa1859404a136975786d4","modified":1603354815851},{"_id":"public/live2d_models/nietzsche/assets/mtn/06_love.mtn","hash":"c9f90cc2e2be55ac9c19cf6a962330dad3833fc1","modified":1603354815851},{"_id":"public/live2d_models/nietzsche/assets/mtn/07_bye.mtn","hash":"6a3e90e8efb64cd5b187196625a3d8915efb21c8","modified":1603354815851},{"_id":"public/live2d_models/nietzsche/assets/mtn/08_sad.mtn","hash":"63647d9320bf3928d658e1275adbfaeba88748b7","modified":1603354815851},{"_id":"public/live2d_models/nietzsche/assets/mtn/09_yawn.mtn","hash":"e0e29a712b01be59ae8bba2e1a0d850e06260d20","modified":1603354815851},{"_id":"public/live2d_models/nietzsche/assets/mtn/10_yeah.mtn","hash":"58c4bda1339f41fa8a7e554509a7a871bad392b8","modified":1603354815851},{"_id":"public/live2d_models/nietzsche/assets/mtn/11_muscle.mtn","hash":"7d0e3466a996f8704e86913c723ac4b82f14ff47","modified":1603354815851},{"_id":"public/live2d_models/nietzsche/assets/mtn/12_stagger.mtn","hash":"3f1a0b25cb1b9fb150f7a9ef37e8c9ba8d4e6ba1","modified":1603354815851},{"_id":"public/live2d_models/nietzsche/assets/mtn/13_cry.mtn","hash":"27709b59d2e6cba73d69a67cadb8bf50413206a9","modified":1603354815851},{"_id":"public/live2d_models/nietzsche/assets/mtn/14_ sigh.mtn","hash":"80c4e4f539253d86a7aa5faae2c5e5a3a7b1adcc","modified":1603354815851},{"_id":"public/live2d_models/nietzsche/assets/mtn/15_joy.mtn","hash":"b76a24efc57e4c2cc4abf70c293b2e800029a20d","modified":1603354815851},{"_id":"public/live2d_models/nietzsche/assets/mtn/16_menace.mtn","hash":"6edb6b114d53d7f93cff164992db475b0b6f09c3","modified":1603354815851},{"_id":"public/live2d_models/nietzsche/assets/mtn/18_no.mtn","hash":"9a18a2537bf6634da2bafd3a57d236de30c73b4e","modified":1603354815851},{"_id":"public/live2d_models/nietzsche/assets/mtn/19_walk.mtn","hash":"035516e8cdaa5b3c6e7524daca72294284a81126","modified":1603354815851},{"_id":"public/live2d_models/nietzsche/assets/mtn/17_yes.mtn","hash":"a023cc93e55b3940f1a8690dcfa7ad1cfa534fad","modified":1603354815851},{"_id":"public/live2d_models/nietzsche/assets/mtn/20_sleep.mtn","hash":"914e4670825467e5e8d2f6983bd21c7190e57310","modified":1603354815851},{"_id":"public/live2d_models/nipsilon/assets/mtn/00_idle.mtn","hash":"3686b7bfdb43f85f4fe1d94ed59379d2c4bee41d","modified":1603354815851},{"_id":"public/live2d_models/nipsilon/assets/mtn/01_happy.mtn","hash":"2020573671b39c81fbd784a8b873ebee019ca501","modified":1603354815851},{"_id":"public/live2d_models/nipsilon/assets/mtn/02_angry.mtn","hash":"f75e1f580c64695fbbf8ba3c5f49eafc7208411d","modified":1603354815851},{"_id":"public/live2d_models/nipsilon/assets/mtn/03_fear.mtn","hash":"b6cdb8fa48960b2a6e66d78ea992221e8108437b","modified":1603354815851},{"_id":"public/live2d_models/nipsilon/assets/mtn/04_surprise.mtn","hash":"4b911af06de9bc6f386aecd623851e5799edaa96","modified":1603354815851},{"_id":"public/live2d_models/nipsilon/assets/mtn/05_fun.mtn","hash":"4b956c9c028dce753fafa1859404a136975786d4","modified":1603354815851},{"_id":"public/live2d_models/nipsilon/assets/mtn/06_love.mtn","hash":"c9f90cc2e2be55ac9c19cf6a962330dad3833fc1","modified":1603354815851},{"_id":"public/live2d_models/nipsilon/assets/mtn/07_bye.mtn","hash":"6a3e90e8efb64cd5b187196625a3d8915efb21c8","modified":1603354815851},{"_id":"public/live2d_models/nipsilon/assets/mtn/08_sad.mtn","hash":"63647d9320bf3928d658e1275adbfaeba88748b7","modified":1603354815851},{"_id":"public/live2d_models/nipsilon/assets/mtn/09_yawn.mtn","hash":"e0e29a712b01be59ae8bba2e1a0d850e06260d20","modified":1603354815851},{"_id":"public/live2d_models/nipsilon/assets/mtn/10_yeah.mtn","hash":"58c4bda1339f41fa8a7e554509a7a871bad392b8","modified":1603354815851},{"_id":"public/live2d_models/nipsilon/assets/mtn/11_muscle.mtn","hash":"7d0e3466a996f8704e86913c723ac4b82f14ff47","modified":1603354815851},{"_id":"public/live2d_models/nipsilon/assets/mtn/12_stagger.mtn","hash":"3f1a0b25cb1b9fb150f7a9ef37e8c9ba8d4e6ba1","modified":1603354815851},{"_id":"public/live2d_models/nipsilon/assets/mtn/13_cry.mtn","hash":"27709b59d2e6cba73d69a67cadb8bf50413206a9","modified":1603354815851},{"_id":"public/live2d_models/nipsilon/assets/mtn/14_ sigh.mtn","hash":"80c4e4f539253d86a7aa5faae2c5e5a3a7b1adcc","modified":1603354815851},{"_id":"public/live2d_models/nipsilon/assets/mtn/15_joy.mtn","hash":"b76a24efc57e4c2cc4abf70c293b2e800029a20d","modified":1603354815851},{"_id":"public/live2d_models/nipsilon/assets/mtn/16_menace.mtn","hash":"6edb6b114d53d7f93cff164992db475b0b6f09c3","modified":1603354815851},{"_id":"public/live2d_models/nipsilon/assets/mtn/17_yes.mtn","hash":"a023cc93e55b3940f1a8690dcfa7ad1cfa534fad","modified":1603354815851},{"_id":"public/live2d_models/nipsilon/assets/mtn/18_no.mtn","hash":"9a18a2537bf6634da2bafd3a57d236de30c73b4e","modified":1603354815851},{"_id":"public/live2d_models/nipsilon/assets/mtn/19_walk.mtn","hash":"035516e8cdaa5b3c6e7524daca72294284a81126","modified":1603354815851},{"_id":"public/live2d_models/nito/assets/mtn/00_idle.mtn","hash":"3686b7bfdb43f85f4fe1d94ed59379d2c4bee41d","modified":1603354815851},{"_id":"public/live2d_models/nito/assets/mtn/01_happy.mtn","hash":"2020573671b39c81fbd784a8b873ebee019ca501","modified":1603354815851},{"_id":"public/live2d_models/nito/assets/mtn/04_surprise.mtn","hash":"4b911af06de9bc6f386aecd623851e5799edaa96","modified":1603354815851},{"_id":"public/live2d_models/nito/assets/mtn/03_fear.mtn","hash":"b6cdb8fa48960b2a6e66d78ea992221e8108437b","modified":1603354815851},{"_id":"public/live2d_models/nito/assets/mtn/02_angry.mtn","hash":"f75e1f580c64695fbbf8ba3c5f49eafc7208411d","modified":1603354815851},{"_id":"public/live2d_models/nito/assets/mtn/05_fun.mtn","hash":"4b956c9c028dce753fafa1859404a136975786d4","modified":1603354815851},{"_id":"public/live2d_models/nito/assets/mtn/06_love.mtn","hash":"c9f90cc2e2be55ac9c19cf6a962330dad3833fc1","modified":1603354815851},{"_id":"public/live2d_models/nito/assets/mtn/07_bye.mtn","hash":"6a3e90e8efb64cd5b187196625a3d8915efb21c8","modified":1603354815851},{"_id":"public/live2d_models/nito/assets/mtn/08_sad.mtn","hash":"63647d9320bf3928d658e1275adbfaeba88748b7","modified":1603354815851},{"_id":"public/live2d_models/nito/assets/mtn/09_yawn.mtn","hash":"e0e29a712b01be59ae8bba2e1a0d850e06260d20","modified":1603354815851},{"_id":"public/live2d_models/nito/assets/mtn/10_yeah.mtn","hash":"58c4bda1339f41fa8a7e554509a7a871bad392b8","modified":1603354815851},{"_id":"public/live2d_models/nito/assets/mtn/11_muscle.mtn","hash":"7d0e3466a996f8704e86913c723ac4b82f14ff47","modified":1603354815851},{"_id":"public/live2d_models/nito/assets/mtn/12_stagger.mtn","hash":"3f1a0b25cb1b9fb150f7a9ef37e8c9ba8d4e6ba1","modified":1603354815851},{"_id":"public/live2d_models/nito/assets/mtn/13_cry.mtn","hash":"27709b59d2e6cba73d69a67cadb8bf50413206a9","modified":1603354815851},{"_id":"public/live2d_models/nito/assets/mtn/14_ sigh.mtn","hash":"80c4e4f539253d86a7aa5faae2c5e5a3a7b1adcc","modified":1603354815851},{"_id":"public/live2d_models/nito/assets/mtn/15_joy.mtn","hash":"b76a24efc57e4c2cc4abf70c293b2e800029a20d","modified":1603354815851},{"_id":"public/live2d_models/nito/assets/mtn/16_menace.mtn","hash":"6edb6b114d53d7f93cff164992db475b0b6f09c3","modified":1603354815851},{"_id":"public/live2d_models/nito/assets/mtn/17_yes.mtn","hash":"a023cc93e55b3940f1a8690dcfa7ad1cfa534fad","modified":1603354815851},{"_id":"public/live2d_models/nito/assets/mtn/18_no.mtn","hash":"9a18a2537bf6634da2bafd3a57d236de30c73b4e","modified":1603354815851},{"_id":"public/live2d_models/nito/assets/mtn/19_walk.mtn","hash":"035516e8cdaa5b3c6e7524daca72294284a81126","modified":1603354815851},{"_id":"public/live2d_models/nito/assets/mtn/20_sleep.mtn","hash":"914e4670825467e5e8d2f6983bd21c7190e57310","modified":1603354815851},{"_id":"public/live2d_models/shizuku/assets/mtn/flickHead_00.mtn","hash":"f64c79c9171660db5c440bef229ac2e35a1597d5","modified":1603354815851},{"_id":"public/live2d_models/shizuku/assets/mtn/flickHead_01.mtn","hash":"a1011d6bf397bcd3c3c968d9616f88fe1ffbc83c","modified":1603354815851},{"_id":"public/live2d_models/shizuku/assets/mtn/flickHead_02.mtn","hash":"d3c9c0acb4dc25a2274f3b9faa71e5ce60ad92e4","modified":1603354815851},{"_id":"public/live2d_models/shizuku/assets/mtn/idle_00.mtn","hash":"378b4577217c604c9d28ab4edf8b707c8d8c2fbb","modified":1603354815851},{"_id":"public/live2d_models/shizuku/assets/mtn/idle_01.mtn","hash":"88c2494655dbb712b842f03232b619f381753d52","modified":1603354815851},{"_id":"public/live2d_models/shizuku/assets/mtn/idle_02.mtn","hash":"7f5d2cf8706007c8659938eba132a68c470a4c26","modified":1603354815851},{"_id":"public/live2d_models/shizuku/assets/mtn/pinchIn_00.mtn","hash":"70978b4c983f6a9fd6d3d9c24571586f7d6eac30","modified":1603354815851},{"_id":"public/live2d_models/shizuku/assets/mtn/pinchIn_01.mtn","hash":"a5fefb45115695db72b9499e627a51b2b9394f2c","modified":1603354815851},{"_id":"public/live2d_models/shizuku/assets/mtn/pinchIn_02.mtn","hash":"aa0d66ca9b06c374577fd7e64e89756de1e1f2ae","modified":1603354815851},{"_id":"public/live2d_models/shizuku/assets/mtn/pinchOut_00.mtn","hash":"e07fe8fd8c2810e3c1d28b730bd49c8c25849bad","modified":1603354815851},{"_id":"public/live2d_models/shizuku/assets/mtn/pinchOut_01.mtn","hash":"e05df948d08b17f34c993a9c1f901190509d5db0","modified":1603354815851},{"_id":"public/live2d_models/shizuku/assets/mtn/pinchOut_02.mtn","hash":"b323fd350d334b33bbdfb31194ae664089986c27","modified":1603354815851},{"_id":"public/live2d_models/shizuku/assets/mtn/shake_00.mtn","hash":"5185d02c7ab9f0bec3d4a890b54b2378e553373d","modified":1603354815851},{"_id":"public/live2d_models/shizuku/assets/mtn/shake_01.mtn","hash":"e812985a56796e122018f9d57d1606a4866ff7d1","modified":1603354815851},{"_id":"public/live2d_models/shizuku/assets/mtn/tapBody_00.mtn","hash":"835aa3d4a8fbd26c0bb66b164a19464fa3f17a99","modified":1603354815851},{"_id":"public/live2d_models/shizuku/assets/mtn/shake_02.mtn","hash":"2702970805e07777974c383613e631730982bcff","modified":1603354815851},{"_id":"public/live2d_models/shizuku/assets/mtn/tapBody_02.mtn","hash":"a75acb51c1191ce5050d3ee1af6f2dcc787c7c5e","modified":1603354815851},{"_id":"public/live2d_models/shizuku/assets/mtn/tapBody_01.mtn","hash":"78fca17436ab5e065e27f419f135aa6c0a0b52ef","modified":1603354815851},{"_id":"public/live2d_models/shizuku/assets/snd/flickHead_00.mp3","hash":"356388d939006b03cf9e6158c603b58d4800bec1","modified":1603354815851},{"_id":"public/live2d_models/shizuku/assets/snd/flickHead_01.mp3","hash":"436d0bbccf6e7a2744447554947eee4563608970","modified":1603354815851},{"_id":"public/live2d_models/shizuku/assets/snd/flickHead_02.mp3","hash":"5f63477ce63f2073e24d68fea906fe136fe6349e","modified":1603354815851},{"_id":"public/live2d_models/shizuku/assets/snd/pinchIn_00.mp3","hash":"f9baa3b7cadec20b714135fc49cfab3ff6adeeb4","modified":1603354815851},{"_id":"public/live2d_models/shizuku/assets/snd/pinchIn_01.mp3","hash":"d5c8cc6f61b56222a83a5174f75006f83c3b88da","modified":1603354815851},{"_id":"public/live2d_models/shizuku/assets/snd/shake_00.mp3","hash":"f65dd58e7b44ec5c865d13c190316070b625b5fe","modified":1603354815851},{"_id":"public/live2d_models/shizuku/assets/snd/tapBody_00.mp3","hash":"003e68a59a9c8392e230f34c91860efbd946277a","modified":1603354815851},{"_id":"public/live2d_models/shizuku/assets/snd/shake_01.mp3","hash":"c1e0e8a07ff268ee06c2b7825d1b645e193f21b9","modified":1603354815851},{"_id":"public/live2d_models/shizuku/assets/snd/tapBody_01.mp3","hash":"5314b50f153df71559e51e2586581c006df00722","modified":1603354815851},{"_id":"public/live2d_models/shizuku/assets/snd/tapBody_02.mp3","hash":"15e7815ed0a0e5164e18e0c53b97aedc742a134d","modified":1603354815851},{"_id":"public/live2d_models/tororo/assets/mtn/00_idle.mtn","hash":"b224c60e463b9f71ddbfc0c720e430496c175f4f","modified":1603354815851},{"_id":"public/live2d_models/tororo/assets/mtn/01.mtn","hash":"fb550833ae22c9954c3e01df37ed29b2d61700f2","modified":1603354815851},{"_id":"public/live2d_models/tororo/assets/mtn/02.mtn","hash":"7eafc52edc73b7cb80ae70d34b43c6ac778fa47b","modified":1603354815851},{"_id":"public/live2d_models/tororo/assets/mtn/03.mtn","hash":"f900737c7a98441cbb2e05255427e6260e19ae68","modified":1603354815851},{"_id":"public/live2d_models/tororo/assets/mtn/04.mtn","hash":"c7a25d3c5d783639bae18db2f3cd284b819c3c85","modified":1603354815851},{"_id":"public/live2d_models/tororo/assets/mtn/05.mtn","hash":"dd20ad24b5d1830a5d44b9bccb28f922eea5e0e5","modified":1603354815851},{"_id":"public/live2d_models/tororo/assets/mtn/08.mtn","hash":"4411c7651ff65195b113d95e7d5ebef8a59a37d9","modified":1603354815851},{"_id":"public/live2d_models/tororo/assets/mtn/07.mtn","hash":"b7f2e3a9fa4f3ffbb6e64a08f8d9f45ca1868ffb","modified":1603354815851},{"_id":"public/live2d_models/tororo/assets/mtn/06.mtn","hash":"ad404bd852d276cdd3d054c953e23f90e4e45ae1","modified":1603354815851},{"_id":"public/live2d_models/tsumiki/assets/mtn/P01.mtn","hash":"4b6d266d9fe31e01c4e13ac2049435b5d70b5589","modified":1603354815851},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_idle_01.mtn","hash":"dd178b1cb3817bd2d7e6f56f25daf3ffacd4afdd","modified":1603354815851},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_01.mtn","hash":"b1b0e2237926a52970703bcfdd5cf6bb6fc39248","modified":1603354815851},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_01_df.mtn","hash":"4b008605c2f61f37fd295d929df8b51e9f1f447e","modified":1603354815851},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_02.mtn","hash":"43f73acf0ec68e5ddda2fb212b3bd62b4ec63829","modified":1603354815851},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_03.mtn","hash":"bbd6a2cbe87dea113024d9d953bb42864cad31a5","modified":1603354815851},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_04.mtn","hash":"b6395b5acb2136c8265f37483cfe60b4a1bfb66d","modified":1603354815851},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_07.mtn","hash":"ec5da8fb40ff26dc3e9f306cade5f4bfc2f15642","modified":1603354815851},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_06.mtn","hash":"2641628ced0c982f214242744da73f1ab048c078","modified":1603354815851},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_05.mtn","hash":"c118b3bcbf03d0cc07c9f6a2a8e8c495f07f4091","modified":1603354815851},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_09.mtn","hash":"c4f3635225ba606873a7c14cc91bf5a28a2afa95","modified":1603354815851},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_10.mtn","hash":"8e6d0609ae64f8dd4db0e5e85addbc677fac3a79","modified":1603354815851},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_08.mtn","hash":"98768aafeb239e75f788969eb995adbe7a89bc3f","modified":1603354815851},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_13.mtn","hash":"d20d09dfbdf42d13240c45f9d2fa4474a4541dd8","modified":1603354815851},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_14.mtn","hash":"2480493fffb4fd8135ef1e88c5f717952b7d6542","modified":1603354815851},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_15.mtn","hash":"4fa8d8667c41cd5b3c49cf4bdd8b36cf0a9158b9","modified":1603354815851},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_17.mtn","hash":"6346ebcf76b0780987f552b16c4c62c39732597f","modified":1603354815851},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_19.mtn","hash":"685fc0130899e903d9c9433ec1c1a987323d6c8c","modified":1603354815851},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_18.mtn","hash":"34fbff31238e9b6a541f5f03a00bec5cbcec6649","modified":1603354815851},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_16.mtn","hash":"03843599008ab2ee23d9d03174924609ad042ce6","modified":1603354815851},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_20.mtn","hash":"076ca7be2c81e776794245a3865478b20428e416","modified":1603354815851},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_22.mtn","hash":"0fb02e4734ab8c455e1405dfed9546af583595ae","modified":1603354815851},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_21.mtn","hash":"bd917f60537e4e9037c85bf356d4c25e75e2807c","modified":1603354815851},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_23.mtn","hash":"d5a156e295e575c615b673350c025e3270afee8e","modified":1603354815851},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_24.mtn","hash":"696502793e9917abc495645be784262e3b997bde","modified":1603354815851},{"_id":"public/live2d_models/unitychan/assets/mtn/idle_01.mtn","hash":"e38a7dcfcad059b695f935b2071a1270c1ddf905","modified":1603354815851},{"_id":"public/live2d_models/unitychan/assets/mtn/idle_02.mtn","hash":"8c3929962a4991c94bf7aeaf33169d61ccaccb2c","modified":1603354815851},{"_id":"public/live2d_models/unitychan/assets/mtn/m_01.mtn","hash":"97d08b57c3b07a854f69cdef3ce6d13a2b2ece1c","modified":1603354815851},{"_id":"public/live2d_models/unitychan/assets/mtn/m_02.mtn","hash":"a4dd9580452854f6adc7b30e9e85702a7641179c","modified":1603354815851},{"_id":"public/live2d_models/unitychan/assets/mtn/m_03.mtn","hash":"dd140c6c4702f3fbd785a85a4d5d8cfa32b9bc32","modified":1603354815851},{"_id":"public/live2d_models/unitychan/assets/mtn/m_04.mtn","hash":"32f8515854a89878c5becbabf56dabd4c675d437","modified":1603354815851},{"_id":"public/live2d_models/unitychan/assets/mtn/m_05.mtn","hash":"ca1f068a2c9c56519e4306115b95d1f497f31124","modified":1603354815851},{"_id":"public/live2d_models/unitychan/assets/mtn/m_06.mtn","hash":"cb16f119956346e4b15a1c432491423893cf2389","modified":1603354815851},{"_id":"public/live2d_models/unitychan/assets/mtn/m_08.mtn","hash":"fbd6ae1967446a421d8505a8d29d5f7f64b5c0d7","modified":1603354815851},{"_id":"public/live2d_models/unitychan/assets/mtn/m_07.mtn","hash":"35caceb556d9bb4fc2a5ed4f8c51d766a6e70405","modified":1603354815851},{"_id":"public/live2d_models/unitychan/assets/mtn/m_09.mtn","hash":"4b942bfbde2a82f19bb4aab7e54e3caae9691da6","modified":1603354815851},{"_id":"public/live2d_models/unitychan/assets/mtn/m_10.mtn","hash":"837f0cda82543d87c12108957a16e482964f3796","modified":1603354815851},{"_id":"public/live2d_models/unitychan/assets/mtn/m_11.mtn","hash":"2c5ec476b9e3246d8c7a5ae4611401d3420cfa1e","modified":1603354815851},{"_id":"public/live2d_models/unitychan/assets/mtn/m_13.mtn","hash":"f08d7f660fda4029fec2acb1f1389f855b5d1b96","modified":1603354815851},{"_id":"public/live2d_models/unitychan/assets/mtn/m_14.mtn","hash":"4c5c7fdc05237a090341d4690bd7e07344728e9e","modified":1603354815851},{"_id":"public/live2d_models/unitychan/assets/mtn/m_12.mtn","hash":"90e96587969b78785c16cdffbdbe0b220cac39b7","modified":1603354815851},{"_id":"public/live2d_models/wanko/assets/mtn/idle_01.mtn","hash":"908abce18f6cf7fd4bc1486f048c25a517f4a34a","modified":1603354815851},{"_id":"public/live2d_models/wanko/assets/mtn/idle_02.mtn","hash":"865874c50848fbc9a55011391531e2ec171c9b91","modified":1603354815851},{"_id":"public/live2d_models/wanko/assets/mtn/idle_03.mtn","hash":"84684914ebf5dc5b2df160338bb97dcc0a978476","modified":1603354815851},{"_id":"public/live2d_models/wanko/assets/mtn/idle_04.mtn","hash":"78e22091792abb0600f724a5dfd60371257954e8","modified":1603354815851},{"_id":"public/live2d_models/wanko/assets/mtn/shake_01.mtn","hash":"dffc54733127832f8f5e91aced55a83da58fa215","modified":1603354815851},{"_id":"public/live2d_models/wanko/assets/mtn/touch_02.mtn","hash":"4d1f099fbd18d15c598a644227ed5bf942a2ba71","modified":1603354815851},{"_id":"public/live2d_models/wanko/assets/mtn/shake_02.mtn","hash":"7b6c914f6c33450eda2e53d9b638fd7045c0f683","modified":1603354815851},{"_id":"public/live2d_models/wanko/assets/mtn/touch_01.mtn","hash":"99270ea8fe1f8f5d88eadb94f36bd0810009d1e6","modified":1603354815851},{"_id":"public/live2d_models/wanko/assets/mtn/touch_03.mtn","hash":"9c394975083915f0f3786caff1762381348b041e","modified":1603354815851},{"_id":"public/live2d_models/wanko/assets/mtn/touch_04.mtn","hash":"8d2302cfdaec698e575048797ff4f30ae4d202de","modified":1603354815851},{"_id":"public/live2d_models/wanko/assets/mtn/touch_05.mtn","hash":"9610bb8a937ba9b11445a3894d8cc0733a2b67e5","modified":1603354815851},{"_id":"public/live2d_models/wanko/assets/mtn/touch_06.mtn","hash":"feb9237c73f2045ed1704c01b5362c9a54ee5a18","modified":1603354815851},{"_id":"public/live2d_models/z16/assets/mtn/idle.mtn","hash":"f6b879d9f1d096509a7edbc971b8fdd9697932e9","modified":1603354815851},{"_id":"public/live2d_models/haru/01/assets/mtn/flickHead_00.mtn","hash":"66577f6dde2bec905930fba0dd5f06de939c8f1e","modified":1603354815851},{"_id":"public/live2d_models/haru/01/assets/mtn/idle_00.mtn","hash":"bbaaafe4de159dd4fb73d137d283c640d3fede53","modified":1603354815851},{"_id":"public/live2d_models/haru/01/assets/mtn/idle_01.mtn","hash":"035c196f276ed177239ea05eeaece68b0fda2935","modified":1603354815851},{"_id":"public/live2d_models/haru/01/assets/mtn/pinchIn_00.mtn","hash":"ed792ed8226aa5a3e5bf059285b2c95855c11303","modified":1603354815851},{"_id":"public/live2d_models/haru/01/assets/mtn/pinchOut_00.mtn","hash":"db831991287e3a4724578f068a68e48168081d5a","modified":1603354815851},{"_id":"public/live2d_models/haru/01/assets/mtn/shake_00.mtn","hash":"7e938c4abe83273766c4562a571301811dea1de6","modified":1603354815851},{"_id":"public/live2d_models/haru/01/assets/mtn/tapBody_01.mtn","hash":"91fbfe1870f7a0a5f5fdb87c213c41b2a8cb5648","modified":1603354815851},{"_id":"public/live2d_models/haru/01/assets/mtn/tapBody_00.mtn","hash":"4041b2f1f2f4a84454180f9dab14e46d99e135c0","modified":1603354815851},{"_id":"public/live2d_models/haru/01/assets/mtn/tapBody_03.mtn","hash":"fcd573576112ad5f4e4b7dc0b750de79f150f971","modified":1603354815851},{"_id":"public/live2d_models/haru/01/assets/mtn/tapBody_02.mtn","hash":"e93a2163cbb85525338e11a520e317329b11fb65","modified":1603354815851},{"_id":"public/live2d_models/haru/01/assets/mtn/tapBody_04.mtn","hash":"557811c5f4ddbd393542366ef95794b19fc60387","modified":1603354815851},{"_id":"public/live2d_models/haru/01/assets/mtn/tapBody_05.mtn","hash":"5f48e50e938f98636519c370745a39b921907719","modified":1603354815851},{"_id":"public/live2d_models/haru/01/assets/mtn/tapBody_06.mtn","hash":"3d06ac66c04eb12c64d36551dd85389f0b0ee51f","modified":1603354815851},{"_id":"public/live2d_models/haru/01/assets/mtn/tapBody_07.mtn","hash":"d299747aaf27377d552ef1f8b4fce9871a65c37d","modified":1603354815851},{"_id":"public/live2d_models/haru/01/assets/mtn/tapBody_08.mtn","hash":"64a03a904d701039bf81e1296ee79537c2e8800e","modified":1603354815851},{"_id":"public/live2d_models/haru/01/assets/mtn/tapBody_09.mtn","hash":"4f50c17dcf352995e51a4d462b9ca7a9e9197d5c","modified":1603354815851},{"_id":"public/live2d_models/haru/01/assets/snd/flickHead_00.mp3","hash":"0b447e7e38eb20f3f7e8ba2a5ea5f521f6e37a26","modified":1603354815851},{"_id":"public/live2d_models/haru/01/assets/snd/pinchIn_00.mp3","hash":"d143662d2c8cfb1150f719d3d55c75d454535690","modified":1603354815851},{"_id":"public/live2d_models/haru/01/assets/snd/pinchOut_00.mp3","hash":"6872da79e1b515b2c996eecee4ca150e22aa48c0","modified":1603354815851},{"_id":"public/live2d_models/haru/01/assets/snd/shake_00.mp3","hash":"28b245865f200b61cb009dfbd3811d9e9b0748fb","modified":1603354815851},{"_id":"public/live2d_models/haru/01/assets/snd/tapBody_00.mp3","hash":"23c998ca4549b7908aef029d28b6ae22cbfcdc82","modified":1603354815851},{"_id":"public/live2d_models/haru/01/assets/snd/tapBody_01.mp3","hash":"d3d5607dbe394225e2ee858531b7767f567c4e10","modified":1603354815851},{"_id":"public/live2d_models/haru/01/assets/snd/tapBody_02.mp3","hash":"be111df9ecd006e992f94cb4280c2b66d9cd23ed","modified":1603354815851},{"_id":"public/live2d_models/haru/02/assets/mtn/flickHead_00.mtn","hash":"66577f6dde2bec905930fba0dd5f06de939c8f1e","modified":1603354815851},{"_id":"public/live2d_models/haru/02/assets/mtn/idle_00.mtn","hash":"bbaaafe4de159dd4fb73d137d283c640d3fede53","modified":1603354815851},{"_id":"public/live2d_models/haru/02/assets/mtn/idle_01.mtn","hash":"035c196f276ed177239ea05eeaece68b0fda2935","modified":1603354815851},{"_id":"public/live2d_models/haru/02/assets/mtn/idle_02.mtn","hash":"82291b3b78339d52f559a65d02b78e0b30180503","modified":1603354815851},{"_id":"public/live2d_models/haru/02/assets/mtn/pinchIn_00.mtn","hash":"ed792ed8226aa5a3e5bf059285b2c95855c11303","modified":1603354815851},{"_id":"public/live2d_models/haru/02/assets/mtn/pinchOut_00.mtn","hash":"db831991287e3a4724578f068a68e48168081d5a","modified":1603354815851},{"_id":"public/live2d_models/haru/02/assets/mtn/shake_00.mtn","hash":"7e938c4abe83273766c4562a571301811dea1de6","modified":1603354815851},{"_id":"public/live2d_models/haru/02/assets/mtn/tapBody_00.mtn","hash":"4041b2f1f2f4a84454180f9dab14e46d99e135c0","modified":1603354815851},{"_id":"public/live2d_models/haru/02/assets/mtn/tapBody_01.mtn","hash":"91fbfe1870f7a0a5f5fdb87c213c41b2a8cb5648","modified":1603354815851},{"_id":"public/live2d_models/haru/02/assets/mtn/tapBody_02.mtn","hash":"e93a2163cbb85525338e11a520e317329b11fb65","modified":1603354815851},{"_id":"public/live2d_models/haru/02/assets/mtn/tapBody_03.mtn","hash":"fcd573576112ad5f4e4b7dc0b750de79f150f971","modified":1603354815851},{"_id":"public/live2d_models/haru/02/assets/mtn/tapBody_04.mtn","hash":"557811c5f4ddbd393542366ef95794b19fc60387","modified":1603354815851},{"_id":"public/live2d_models/haru/02/assets/mtn/tapBody_05.mtn","hash":"5f48e50e938f98636519c370745a39b921907719","modified":1603354815851},{"_id":"public/live2d_models/haru/02/assets/mtn/tapBody_06.mtn","hash":"3d06ac66c04eb12c64d36551dd85389f0b0ee51f","modified":1603354815851},{"_id":"public/live2d_models/haru/02/assets/mtn/tapBody_07.mtn","hash":"d299747aaf27377d552ef1f8b4fce9871a65c37d","modified":1603354815851},{"_id":"public/live2d_models/haru/02/assets/mtn/tapBody_08.mtn","hash":"64a03a904d701039bf81e1296ee79537c2e8800e","modified":1603354815851},{"_id":"public/live2d_models/haru/02/assets/mtn/tapBody_09.mtn","hash":"4f50c17dcf352995e51a4d462b9ca7a9e9197d5c","modified":1603354815851},{"_id":"public/live2d_models/haru/02/assets/snd/flickHead_00.mp3","hash":"0b447e7e38eb20f3f7e8ba2a5ea5f521f6e37a26","modified":1603354815851},{"_id":"public/live2d_models/haru/02/assets/snd/pinchIn_00.mp3","hash":"d143662d2c8cfb1150f719d3d55c75d454535690","modified":1603354815851},{"_id":"public/live2d_models/haru/02/assets/snd/pinchOut_00.mp3","hash":"6872da79e1b515b2c996eecee4ca150e22aa48c0","modified":1603354815851},{"_id":"public/live2d_models/haru/02/assets/snd/tapBody_00.mp3","hash":"23c998ca4549b7908aef029d28b6ae22cbfcdc82","modified":1603354815851},{"_id":"public/live2d_models/haru/02/assets/snd/shake_00.mp3","hash":"28b245865f200b61cb009dfbd3811d9e9b0748fb","modified":1603354815851},{"_id":"public/live2d_models/haru/02/assets/snd/tapBody_01.mp3","hash":"d3d5607dbe394225e2ee858531b7767f567c4e10","modified":1603354815851},{"_id":"public/live2d_models/haru/02/assets/snd/tapBody_02.mp3","hash":"be111df9ecd006e992f94cb4280c2b66d9cd23ed","modified":1603354815851},{"_id":"public/live2d_models/z16/assets/moc/z16.256/texture_00.png","hash":"19f22619c246067d519aa1e6e477497cc4342414","modified":1603354815851},{"_id":"public/live2d_models/z16/assets/moc/z16.512/texture_00.png","hash":"251b9f944fb1575c01a62b8a9d7522fe76954b3b","modified":1603354815851},{"_id":"public/live2d_models/haru/02/assets/moc/haru02.1024/texture_00.png","hash":"f3c4103630bbf0660f793f90a14b51fdb7dfb7ea","modified":1603354815851},{"_id":"public/lib/gitment.js.bak","hash":"ded86ac10cc79a7d28e2ea44778e792cef6c3470","modified":1603354815851},{"_id":"public/img/biubiubiu.gif","hash":"cccda381f96abe91b4d698da793abd6496466d3d","modified":1603354815851},{"_id":"public/img/alipay.jpg","hash":"bda816152f1d7e5e52755a079d196850e62d6c97","modified":1603354815851},{"_id":"public/live2d_models/epsilon2_1/assets/moc/Epsilon2.1.moc","hash":"2148649bde741b6e1557c0ea3c076e5ce5a23632","modified":1603354815851},{"_id":"public/live2d_models/gf/assets/mtn/A_03.mtn","hash":"afec07ed22acdf28a5c49b78c560e29c3c2cfaa0","modified":1603354815851},{"_id":"public/live2d_models/gf/assets/mtn/A_05.mtn","hash":"40ad1e684108035c6478b76c9e4e1953104725da","modified":1603354815851},{"_id":"public/live2d_models/hibiki/assets/snd/hibiki_04.mp3","hash":"57d76906838b186bee2d47f768e54ac18e44d472","modified":1603354815851},{"_id":"public/live2d_models/hibiki/assets/snd/hibiki_05.mp3","hash":"e8788bb9e92467e21933ac2140114a21b9ad215a","modified":1603354815851},{"_id":"public/live2d_models/izumi/assets/snd/izumi_05.mp3","hash":"05e44723c24b387a0eab37a0ab4120ef19ae317e","modified":1603354815851},{"_id":"public/live2d_models/izumi/assets/snd/izumi_07.mp3","hash":"0c13c0096d02ceb37b3bcce085206b5d6d8ae834","modified":1603354815851},{"_id":"public/live2d_models/izumi/assets/snd/izumi_09.mp3","hash":"f7bce48ee99bdad6fa187c484872eafce0b0e351","modified":1603354815851},{"_id":"public/live2d_models/izumi/assets/snd/izumi_10.mp3","hash":"53013c1cc56296a3843d4c8e3f01fd67747b169b","modified":1603354815851},{"_id":"public/live2d_models/ni-j/assets/mtn/13_cry.mtn","hash":"27709b59d2e6cba73d69a67cadb8bf50413206a9","modified":1603354815851},{"_id":"public/live2d_models/ni-j/assets/mtn/12_stagger.mtn","hash":"3f1a0b25cb1b9fb150f7a9ef37e8c9ba8d4e6ba1","modified":1603354815851},{"_id":"public/live2d_models/ni-j/assets/mtn/16_menace.mtn","hash":"6edb6b114d53d7f93cff164992db475b0b6f09c3","modified":1603354815851},{"_id":"public/live2d_models/nietzsche/assets/mtn/02_angry.mtn","hash":"f75e1f580c64695fbbf8ba3c5f49eafc7208411d","modified":1603354815851},{"_id":"public/live2d_models/nipsilon/assets/mtn/20_sleep.mtn","hash":"914e4670825467e5e8d2f6983bd21c7190e57310","modified":1603354815851},{"_id":"public/live2d_models/shizuku/assets/snd/pinchIn_02.mp3","hash":"5b63e02607571ac601c500995e836e6c861b1c62","modified":1603354815851},{"_id":"public/live2d_models/shizuku/assets/snd/pinchOut_00.mp3","hash":"0654f38f6e9fd623eaf8be11b5d58c9d12991949","modified":1603354815851},{"_id":"public/live2d_models/shizuku/assets/snd/pinchOut_01.mp3","hash":"8a081030fd53c07bffe3edd48f87a371ca77296b","modified":1603354815851},{"_id":"public/live2d_models/shizuku/assets/snd/pinchOut_02.mp3","hash":"554edb2f3838cbdc27d1a9c6b8a9cb6eb465cbdd","modified":1603354815851},{"_id":"public/live2d_models/shizuku/assets/snd/shake_02.mp3","hash":"8882b94bce00f09232588b7301badb105fa8acab","modified":1603354815851},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_12.mtn","hash":"b68b20df9b695e0d7ac93a5865097b27c3123f21","modified":1603354815851},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_11.mtn","hash":"63b0adf0414ebad9a3bec91417629d983c546975","modified":1603354815851},{"_id":"public/live2d_models/wanko/assets/moc/wanko.moc","hash":"7b188cd4dcddfe5bdba8ec51a65cb1c21cd2e57a","modified":1603354815851},{"_id":"public/live2d_models/z16/assets/moc/z16.moc","hash":"6b0241e80e94664d694b43ad05333960de2550c1","modified":1603354815851},{"_id":"public/live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_04.png","hash":"2c63a9622a875fea1abcdb9ef437b64556090d22","modified":1603354815851},{"_id":"public/live2d_models/haru/01/assets/mtn/idle_02.mtn","hash":"82291b3b78339d52f559a65d02b78e0b30180503","modified":1603354815851},{"_id":"public/live2d_models/ni-j/assets/moc/ni-j.2048/texture_00.png","hash":"413695bc00193e587b85c944df11d721192dd9a0","modified":1603354815851},{"_id":"public/live2d_models/nico/assets/moc/nico.2048/texture_00.png","hash":"413695bc00193e587b85c944df11d721192dd9a0","modified":1603354815851},{"_id":"public/live2d_models/nico/assets/moc/nico.2048/texture_02.png","hash":"8e4a632c61506e3cc07d8ba704aa4ec2567fe11b","modified":1603354815851},{"_id":"public/live2d_models/nietzsche/assets/moc/nietzsche.2048/texture_00.png","hash":"413695bc00193e587b85c944df11d721192dd9a0","modified":1603354815851},{"_id":"public/live2d_models/nipsilon/assets/moc/nipsilon.2048/texture_01.png","hash":"413695bc00193e587b85c944df11d721192dd9a0","modified":1603354815851},{"_id":"public/live2d_models/nito/assets/moc/nito.2048/texture_01.png","hash":"413695bc00193e587b85c944df11d721192dd9a0","modified":1603354815851},{"_id":"public/live2d_models/shizuku/assets/moc/shizuku.1024/texture_00.png","hash":"21bdb28b31783e23b26b3aa061e90be4088665aa","modified":1603354815851},{"_id":"public/live2d_models/shizuku/assets/moc/shizuku.1024/texture_03.png","hash":"07f568a2bb8045b6bdff7783fb4daf62c821f9ab","modified":1603354815851},{"_id":"public/live2d_models/shizuku/assets/moc/shizuku.1024/texture_05.png","hash":"0cd00007fb8bff62a2eb08e1d7c43abab8722224","modified":1603354815851},{"_id":"public/live2d_models/wanko/assets/moc/wanko.1024/texture_00.png","hash":"c405c1eeb82bcced7aa7a20f04a76168f60ad561","modified":1603354815851},{"_id":"public/live2d_models/haru/01/assets/moc/haru01.1024/texture_00.png","hash":"f3c4103630bbf0660f793f90a14b51fdb7dfb7ea","modified":1603354815851},{"_id":"public/live2d_models/haru/01/assets/moc/haru01.1024/texture_01.png","hash":"dd05d6b7f8f0d0c167b040f41ffd7c10a3747d96","modified":1603354815851},{"_id":"public/live2d_models/haru/01/assets/moc/haru01.1024/texture_02.png","hash":"6a1e0b336da79557325da9f58a69a380d67ecbb1","modified":1603354815851},{"_id":"public/live2d_models/haru/02/assets/moc/haru02.1024/texture_01.png","hash":"dd05d6b7f8f0d0c167b040f41ffd7c10a3747d96","modified":1603354815851},{"_id":"public/lib/gitment.js.bak2","hash":"8065a9364e25414c6a37d4be181f1c6052c4d590","modified":1603354815851},{"_id":"public/img/weixin.png","hash":"3ad8925d382e7cb5599b827b1b8793bcaefb2a1f","modified":1603354815851},{"_id":"public/plugins/live2d-widget.js/L2Dwidget.min.js.map","hash":"75322ae0754f0580c0fb5ce9176ab72ce4009903","modified":1603354815851},{"_id":"public/live2d_models/hibiki/assets/moc/hibiki.moc","hash":"deff9b550df1e2dc47a57f1099e46de6737a0ec6","modified":1603354815851},{"_id":"public/live2d_models/unitychan/assets/moc/unitychan.moc","hash":"94047b7bb9a99f43ab4dbe5b013a8fb9de854086","modified":1603354815851},{"_id":"public/live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_03.png","hash":"80f11d03197912296cd27ce7f59f490336396309","modified":1603354815851},{"_id":"public/live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_06.png","hash":"e04b38575cb49bf538d98d0bcc642be4eaf89f73","modified":1603354815851},{"_id":"public/live2d_models/ni-j/assets/moc/ni-j.2048/texture_01.png","hash":"f868cb3bffe97108ef677c43659a6ad7f6a906b2","modified":1603354815851},{"_id":"public/live2d_models/nietzsche/assets/moc/nietzsche.2048/texture_01.png","hash":"fc5a8b833e1b089808e893158a71b8597161fda0","modified":1603354815851},{"_id":"public/live2d_models/shizuku/assets/moc/shizuku.1024/texture_01.png","hash":"3d0e745f3e560071ee08beeecde186e5ea35d99e","modified":1603354815851},{"_id":"public/live2d_models/shizuku/assets/moc/shizuku.1024/texture_04.png","hash":"f764d594841905db8b2998dd61c329866125ad97","modified":1603354815851},{"_id":"public/live2d_models/unitychan/assets/moc/unitychan.2048/texture_00.png","hash":"2268ef1522ce750bb63f59a6bd1022c8c531e307","modified":1603354815851},{"_id":"public/live2d_models/z16/assets/moc/z16.1024/texture_00.png","hash":"c4f7c067d7d37601490554438ab801fce1feb92d","modified":1603354815851},{"_id":"public/baidu_verify_code-DKptWBbgP9.html","hash":"34d1d7847f24e014fac17bc9cb450ce9d690db48","modified":1603354815851},{"_id":"public/lib/busuanzi.pure.js","hash":"f54c44e2b30e551540b83640dd8c5ff266e157d5","modified":1603354815851},{"_id":"public/lib/clickLove.js","hash":"9e8e79d69ad8338761272f86fe5cad0ad5e503cc","modified":1603354815851},{"_id":"public/lib/default.css","hash":"c9c344d5c98cc90b5583865e71726bab1046cdeb","modified":1603354815851},{"_id":"public/lib/gitment.css","hash":"cb2e0be2c7ebbcc3e756340c811864115bf0ec56","modified":1603354815851},{"_id":"public/lib/oauthcallback.browser.js","hash":"989b9e2638336461a9911ebf60e9a839819dd11f","modified":1603354815851},{"_id":"public/lib/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1603354815851},{"_id":"public/lib/snow.js","hash":"12ed5d697aa8a337064a1827ea94c0652c36b4e5","modified":1603354815851},{"_id":"public/live2d_models/chitose/package-lock.json","hash":"81416d5dc6eb73844dc5d23620d2d8926cf2cc16","modified":1603354815851},{"_id":"public/live2d_models/chitose/package.json","hash":"c5b1696877925757a369dde0b66ae857a184a1a3","modified":1603354815851},{"_id":"public/live2d_models/epsilon2_1/package-lock.json","hash":"dcd7a1d062ac78cbc821b0aed14a5888f6ac6c66","modified":1603354815851},{"_id":"public/live2d_models/epsilon2_1/package.json","hash":"183bc1baa9ba97b40a74799a66a215665a8313c7","modified":1603354815851},{"_id":"public/live2d_models/gf/package-lock.json","hash":"a69cde4811a9868b17ecc5c30cd109a8dac31517","modified":1603354815851},{"_id":"public/live2d_models/gf/package.json","hash":"7db5654fd135fa7983df40d88969ad29a5ffb17d","modified":1603354815851},{"_id":"public/live2d_models/haru/package-lock.json","hash":"a7ec24dfd1ac820792945d002f940ac148e38f1d","modified":1603354815851},{"_id":"public/live2d_models/haru/package.json","hash":"db61eea30ab8ec7d54954006f80d2699cb9725ec","modified":1603354815851},{"_id":"public/live2d_models/haruto/package-lock.json","hash":"67e0274fdd53300f873656c9464cb1ee1f41cfe6","modified":1603354815851},{"_id":"public/live2d_models/haruto/package.json","hash":"c80910992505ea994a619b4a89423558e1b7892c","modified":1603354815851},{"_id":"public/live2d_models/hibiki/package-lock.json","hash":"81a0982aba92efdbd98f9b5203319385aa3cad52","modified":1603354815851},{"_id":"public/live2d_models/hibiki/package.json","hash":"cf6af2a7188ed72fcbffbff207e000fa3f8a482f","modified":1603354815851},{"_id":"public/live2d_models/hijiki/package-lock.json","hash":"985ee74389f276692c88f3b039fcc632dc73819d","modified":1603354815851},{"_id":"public/live2d_models/hijiki/package.json","hash":"8f82d1cf92106d059f3a619910e5cc83bb6044d0","modified":1603354815851},{"_id":"public/live2d_models/izumi/package-lock.json","hash":"0e18be77e558654ef7eb84ac037226c6a2fc1e58","modified":1603354815851},{"_id":"public/live2d_models/izumi/package.json","hash":"2a15a868b8fbbf50a975ab23063585f0ece7f206","modified":1603354815851},{"_id":"public/live2d_models/koharu/package-lock.json","hash":"5ee7591c194c1f8c89dfe437863cd0a6b161f832","modified":1603354815851},{"_id":"public/live2d_models/koharu/package.json","hash":"4d7cb22cf4e1449b0babd18189a8dc1eb1ee9e0e","modified":1603354815851},{"_id":"public/live2d_models/miku/package-lock.json","hash":"ec31a7cc0e536e3c79d392a89674018ce2a3c488","modified":1603354815851},{"_id":"public/live2d_models/miku/package.json","hash":"057f45aa125f0a95be51ba828d3e12a61058ee73","modified":1603354815851},{"_id":"public/live2d_models/ni-j/package-lock.json","hash":"2e6c14a3f4167e5de16492b0e8cbd6f9b5bc09e7","modified":1603354815851},{"_id":"public/live2d_models/ni-j/package.json","hash":"b1ca7b43b45ee03b4dfbaeded741b6edf9e1523b","modified":1603354815851},{"_id":"public/live2d_models/nico/package-lock.json","hash":"6ebcc37f9661edd9b03d4922cc6bdfe66d90e765","modified":1603354815851},{"_id":"public/live2d_models/nico/package.json","hash":"e9cdb3b41566fb453b0e38e7763cfbc36a8c9241","modified":1603354815851},{"_id":"public/live2d_models/nietzsche/package-lock.json","hash":"0ddcbcd20431260f3e25b3f1ee758357ef934cc5","modified":1603354815851},{"_id":"public/live2d_models/nietzsche/package.json","hash":"d89fe315b6a1b547c15eeef6ad5bbf38458f1bb6","modified":1603354815851},{"_id":"public/live2d_models/nipsilon/package-lock.json","hash":"afb471ff865ae1327beae650bfe0a602ad27a92a","modified":1603354815851},{"_id":"public/live2d_models/nipsilon/package.json","hash":"6b10ad8d148e29876559e9bf3dbfac3998f55c92","modified":1603354815851},{"_id":"public/live2d_models/nito/package-lock.json","hash":"caf6080b25844aa44cb51dae30fb34691793eb07","modified":1603354815851},{"_id":"public/live2d_models/nito/package.json","hash":"09493580a6cd62f46859babec6c9f13dc617d4ea","modified":1603354815851},{"_id":"public/live2d_models/shizuku/package-lock.json","hash":"7a70380a9b50f5b7374fcf07af2fc8e59205e8d8","modified":1603354815851},{"_id":"public/live2d_models/shizuku/package.json","hash":"9ace1963033ab9a396ff7b8c90de4c8c48b51c0d","modified":1603354815851},{"_id":"public/live2d_models/tororo/package-lock.json","hash":"adca3b14a22758a9b5d6d392354a9916a4283505","modified":1603354815851},{"_id":"public/live2d_models/tororo/package.json","hash":"68f3ec7e366ec1c7c58112acb04a75ffc3feca58","modified":1603354815851},{"_id":"public/live2d_models/tsumiki/package-lock.json","hash":"d96d7121a59557be2bad97237e784fbdb01d7096","modified":1603354815851},{"_id":"public/live2d_models/tsumiki/package.json","hash":"baed56b3f5f732adb02aca10859687dcaf0faffc","modified":1603354815851},{"_id":"public/live2d_models/unitychan/package-lock.json","hash":"edb139e5fe6b99dbe2061533da424fef16c2a89d","modified":1603354815851},{"_id":"public/live2d_models/unitychan/package.json","hash":"fbd004c83803cc378e30a4dd4b942950add8dc5a","modified":1603354815851},{"_id":"public/live2d_models/wanko/package-lock.json","hash":"121d859582cd7a7cadec5ad7391d74461b179128","modified":1603354815851},{"_id":"public/live2d_models/wanko/package.json","hash":"2bca16153b313e3582df1438cf4bad8a9c8ffd16","modified":1603354815851},{"_id":"public/live2d_models/z16/package-lock.json","hash":"f3d9457756272106295c1b7b15b0cd65590aaf43","modified":1603354815851},{"_id":"public/live2d_models/z16/package.json","hash":"25eb264b356de9f58c7b068b601b292ed3950864","modified":1603354815851},{"_id":"public/plugins/TweenMax/HoverImg.js","hash":"ecc51aed76c22ca181870d4ba47765c0598e3a1b","modified":1603354815851},{"_id":"public/plugins/TweenMax/charming.min.js","hash":"0b11f943ec562c9031be07203058650eee74d73d","modified":1603354815851},{"_id":"public/plugins/activate-power-mode/activate-power-mode.js","hash":"8161c7d2b8fd7fa407db3c3429edd8d19f82ae81","modified":1603354815851},{"_id":"public/plugins/live2d-widget.js/manifest.json","hash":"d3c86ddfd62f3560e306910369745116005f3892","modified":1603354815851},{"_id":"public/plugins/ribbon.js/ribbon.min.js","hash":"3c8e4d717ca107f3723def1795c8ed62a5f1a8d0","modified":1603354815851},{"_id":"public/plugins/ribbon.js/ribbon.js","hash":"65b1a8f12d04b15d7ed6eeb9d11dec760a799c5f","modified":1603354815851},{"_id":"public/live2d_models/chitose/assets/chitose.model.json","hash":"a9b9986e72b8245f036f6ada876b84a3986c4218","modified":1603354815851},{"_id":"public/live2d_models/chitose/assets/chitose.physics.json","hash":"5ff4acbc4cf23a7f2ff211f50e53df6f6b7c0995","modified":1603354815851},{"_id":"public/live2d_models/chitose/assets/chitose.pose.json","hash":"52f9b579ca15b4b2dc4c5fa71172472dd6924264","modified":1603354815851},{"_id":"public/live2d_models/epsilon2_1/assets/Epsilon2.1.model.json","hash":"a47e7d1fd76d5a90d383fa049295c1cdd1546845","modified":1603354815851},{"_id":"public/live2d_models/gf/assets/Gantzert_Felixander.model.json","hash":"d5caeb1c758088ff03bc190cd8dcee98e6e02392","modified":1603354815851},{"_id":"public/live2d_models/haruto/assets/haruto.physics.json","hash":"2fbf886979212357ba293bd35884f2cb5b26b6a6","modified":1603354815851},{"_id":"public/live2d_models/epsilon2_1/assets/Epsilon2.1.physics.json","hash":"bbf1a8cb496831fbf9715d8431b82fffc9f89257","modified":1603354815851},{"_id":"public/live2d_models/haruto/assets/haruto.model.json","hash":"76f915f7edbd9c47df0ca041dddb151c0c93a2bf","modified":1603354815851},{"_id":"public/live2d_models/hibiki/assets/hibiki.model.json","hash":"73bbc0004fc21039452f80dc6dc3c287723aedc4","modified":1603354815851},{"_id":"public/live2d_models/hibiki/assets/hibiki.physics.json","hash":"ba100c7a8c3fc777d05f41e3371d18c457febfa7","modified":1603354815851},{"_id":"public/live2d_models/hijiki/assets/hijiki.model.json","hash":"feff43bf7498d213982c3736c2c029664e4bcbd2","modified":1603354815851},{"_id":"public/live2d_models/hijiki/assets/hijiki.pose.json","hash":"81438bf69b32c7c11e311b4fe043730cdc7b7ec2","modified":1603354815851},{"_id":"public/live2d_models/izumi/assets/izumi.model.json","hash":"3ba8caa98a3af7b09d7a79419a691f543a1e3ea4","modified":1603354815851},{"_id":"public/live2d_models/izumi/assets/izumi.physics.json","hash":"cee4a6e1c8ec3e1c2bfc8028ff49dc9c34c06258","modified":1603354815851},{"_id":"public/live2d_models/koharu/assets/koharu.model.json","hash":"ceccdefd776b7c9475a29cff0842796e4f58b7e9","modified":1603354815851},{"_id":"public/live2d_models/miku/assets/miku.model.json","hash":"32e49dfc6cb4d9c537453bb083aab39ed708c476","modified":1603354815851},{"_id":"public/live2d_models/koharu/assets/koharu.physics.json","hash":"2fbf886979212357ba293bd35884f2cb5b26b6a6","modified":1603354815851},{"_id":"public/live2d_models/ni-j/assets/ni-j.model.json","hash":"3c77e66d6436136bf50d5fdbc8ee8cd543a35e01","modified":1603354815851},{"_id":"public/live2d_models/miku/assets/miku.physics.json","hash":"d5ca7f215044ba5bf1cdb8045a5c99b64ec258ce","modified":1603354815851},{"_id":"public/live2d_models/ni-j/assets/ni-j.physics.json","hash":"ef2dd194f934f129f5f4db7785a9c7b7e45671ff","modified":1603354815851},{"_id":"public/live2d_models/ni-j/assets/ni-j.pose.json","hash":"a8c949d20eebf1e716a495bf806b2eccff62a925","modified":1603354815851},{"_id":"public/live2d_models/nico/assets/nico.physics.json","hash":"1db72a0413771e14d74de955af728224318e91d1","modified":1603354815851},{"_id":"public/live2d_models/nico/assets/nico.model.json","hash":"9f007936f4748e80a1da60ca078daed595acffee","modified":1603354815851},{"_id":"public/live2d_models/nietzsche/assets/nietzsche.physics.json","hash":"5e83e055f99be8c8752fdcad30f9ed043111b83b","modified":1603354815851},{"_id":"public/live2d_models/nico/assets/nico.pose.json","hash":"a8c949d20eebf1e716a495bf806b2eccff62a925","modified":1603354815851},{"_id":"public/live2d_models/nietzsche/assets/nietzche.model.json","hash":"4f8fb457ddf9b0aa930cbcd4a3258ccdbf9e7506","modified":1603354815851},{"_id":"public/live2d_models/nietzsche/assets/nietzsche.pose.json","hash":"a8c949d20eebf1e716a495bf806b2eccff62a925","modified":1603354815851},{"_id":"public/live2d_models/nipsilon/assets/nipsilon.model.json","hash":"271e40dfe9c04c8b5f5e4c6a9aa4f7ee6c65cff9","modified":1603354815851},{"_id":"public/live2d_models/nipsilon/assets/nipsilon.physics.json","hash":"5e83e055f99be8c8752fdcad30f9ed043111b83b","modified":1603354815851},{"_id":"public/live2d_models/nipsilon/assets/nipsilon.pose.json","hash":"a8c949d20eebf1e716a495bf806b2eccff62a925","modified":1603354815851},{"_id":"public/live2d_models/nito/assets/nito.model.json","hash":"7d7930d1fc8114ae0e694624db457612dca64814","modified":1603354815851},{"_id":"public/live2d_models/nito/assets/nito.physics.json","hash":"27db548eec3c5f3c71330e675b3f602cd86f2242","modified":1603354815851},{"_id":"public/live2d_models/nito/assets/nito.pose.json","hash":"a8c949d20eebf1e716a495bf806b2eccff62a925","modified":1603354815851},{"_id":"public/live2d_models/shizuku/assets/shizuku.model.json","hash":"19a05bd41b806a935cea42c2000626fc82da2536","modified":1603354815851},{"_id":"public/live2d_models/shizuku/assets/shizuku.physics.json","hash":"6484d646e79a44c83784c6ae434cf7349746c5c8","modified":1603354815851},{"_id":"public/live2d_models/shizuku/assets/shizuku.pose.json","hash":"ac5505efbf80ba0a2e5783d67fe232bc5c6f1f80","modified":1603354815851},{"_id":"public/live2d_models/tororo/assets/tororo.pose.json","hash":"81438bf69b32c7c11e311b4fe043730cdc7b7ec2","modified":1603354815851},{"_id":"public/live2d_models/tsumiki/assets/tsumiki.model.json","hash":"3d5d18ccaf9dc5d4bb42e1c6c3a3d8d89b55524b","modified":1603354815851},{"_id":"public/live2d_models/tororo/assets/tororo.model.json","hash":"3b96ea33460642d288c98327444966d93a0c11ba","modified":1603354815851},{"_id":"public/live2d_models/tsumiki/assets/tsumiki.physics.json","hash":"737f5ef200fd8d33b75bf19176dcff311591bd8f","modified":1603354815851},{"_id":"public/live2d_models/unitychan/assets/unitychan.model.json","hash":"6baa976186d98050740e02eadc796036a16f6fa2","modified":1603354815851},{"_id":"public/live2d_models/wanko/assets/wanko.model.json","hash":"b98a8ce54fbcf1606a489f1bc5f26b1a18c82d79","modified":1603354815851},{"_id":"public/live2d_models/unitychan/assets/unitychan.physics.json","hash":"d32ffd9263044d17d46facb5d878ea3683b8023e","modified":1603354815851},{"_id":"public/live2d_models/z16/assets/z16.model.json","hash":"e69f3d2ecc9bf51b3972ad9df8f6aaa31956910c","modified":1603354815851},{"_id":"public/live2d_models/z16/assets/z16.physics.json","hash":"67f13f60030d7e4c7f824c001ab5254ce4b9bafd","modified":1603354815851},{"_id":"public/plugins/ribbon.js/demo/index.html","hash":"97ff0bb6307330d15d81075eba56bd85eb589905","modified":1603354815851},{"_id":"public/live2d_models/chitose/assets/exp/f01.exp.json","hash":"84073a497ddb6e56c6cfc244a0fb217ba473abf9","modified":1603354815851},{"_id":"public/live2d_models/chitose/assets/exp/f02.exp.json","hash":"5b3dfc33ba22945adb77efacb9c55efbfd4975f9","modified":1603354815851},{"_id":"public/live2d_models/chitose/assets/exp/f03.exp.json","hash":"a506220e6b908154eea59f4bcfd73e7a457616b6","modified":1603354815851},{"_id":"public/live2d_models/chitose/assets/exp/f05.exp.json","hash":"154b1b33701c61570e8adc5cab977ea3198ade6a","modified":1603354815851},{"_id":"public/live2d_models/chitose/assets/exp/f06.exp.json","hash":"f3db49d621e2008b9eb59fba98e10db5dbd19d3d","modified":1603354815851},{"_id":"public/live2d_models/chitose/assets/exp/f07.exp.json","hash":"1ad00a1e4843b5b31b0c43fa292193bb049f6779","modified":1603354815851},{"_id":"public/live2d_models/epsilon2_1/assets/exp/f01.exp.json","hash":"84073a497ddb6e56c6cfc244a0fb217ba473abf9","modified":1603354815851},{"_id":"public/live2d_models/epsilon2_1/assets/exp/f02.exp.json","hash":"fb553024b5a62d0a54ba32c40b5d12598dc434e7","modified":1603354815851},{"_id":"public/live2d_models/epsilon2_1/assets/exp/f03.exp.json","hash":"02d1ac5b6d9019a1ee89b9d4d82894458deae35d","modified":1603354815851},{"_id":"public/live2d_models/epsilon2_1/assets/exp/f04.exp.json","hash":"05dccc2eab9b9d019af1a9cc6f748276376dd828","modified":1603354815851},{"_id":"public/live2d_models/epsilon2_1/assets/exp/f05.exp.json","hash":"b53d5e42ca3105b19e5fe5fbf7fe4a6b4ced61f2","modified":1603354815851},{"_id":"public/live2d_models/epsilon2_1/assets/exp/f06.exp.json","hash":"0a7f5b3ac25b13d8688b1f529f3279a8342e3c75","modified":1603354815851},{"_id":"public/live2d_models/epsilon2_1/assets/exp/f07.exp.json","hash":"d501ae71f1e36ff7e7834422900c0e84b8de8f28","modified":1603354815851},{"_id":"public/live2d_models/epsilon2_1/assets/exp/f08.exp.json","hash":"1dbb31e341c9fcc59475bd2594d60648c0c3e51c","modified":1603354815851},{"_id":"public/live2d_models/chitose/assets/exp/f04.exp.json","hash":"6fee0e4d489e8ca3b7252b9dfc7c25cbe6a6a1e7","modified":1603354815851},{"_id":"public/live2d_models/haru/01/assets/haru01.model.json","hash":"cab2aac3d697eafa420e8a02b1f52c1f19666ffd","modified":1603354815851},{"_id":"public/live2d_models/haru/01/assets/haru01.physics.json","hash":"490ab4735f5cddca766344468591c0eb90cda1f7","modified":1603354815851},{"_id":"public/live2d_models/haru/01/assets/haru01.pose.json","hash":"4fb902065bd3f309fa0029fe2505424851fd489f","modified":1603354815851},{"_id":"public/live2d_models/haru/02/assets/haru02.model.json","hash":"ffed6d4654deeb772e389213f84701940ee0126f","modified":1603354815851},{"_id":"public/live2d_models/haru/02/assets/haru02.physics.json","hash":"490ab4735f5cddca766344468591c0eb90cda1f7","modified":1603354815851},{"_id":"public/live2d_models/haru/02/assets/haru02.pose.json","hash":"4fb902065bd3f309fa0029fe2505424851fd489f","modified":1603354815851},{"_id":"public/live2d_models/hibiki/assets/exp/f01.exp.json","hash":"84073a497ddb6e56c6cfc244a0fb217ba473abf9","modified":1603354815851},{"_id":"public/live2d_models/hibiki/assets/exp/f02.exp.json","hash":"a5f786a8ebce6d2b14efcd4476179ed324c8def6","modified":1603354815851},{"_id":"public/live2d_models/hibiki/assets/exp/f03.exp.json","hash":"b8f958f736acd4eb7433043fbae946487e872f5b","modified":1603354815851},{"_id":"public/live2d_models/hibiki/assets/exp/f04.exp.json","hash":"19fdb5558be54a9ec6d882e2d1780a369bc66b62","modified":1603354815851},{"_id":"public/live2d_models/hibiki/assets/exp/f05.exp.json","hash":"8fdbc6eabb1890bc5953f170f95e4404bd3d62b4","modified":1603354815851},{"_id":"public/live2d_models/hibiki/assets/exp/f06.exp.json","hash":"b8ee09beda85aff415e6598ecd6573a238e15d18","modified":1603354815851},{"_id":"public/live2d_models/izumi/assets/exp/f01.exp.json","hash":"84073a497ddb6e56c6cfc244a0fb217ba473abf9","modified":1603354815851},{"_id":"public/live2d_models/izumi/assets/exp/f02.exp.json","hash":"d4c339f80452528f6cacba3ffe97fbb9e2e4d144","modified":1603354815851},{"_id":"public/live2d_models/izumi/assets/exp/f03.exp.json","hash":"fc1f79f65c09c845f08ee92d237f8cfabe90a3c6","modified":1603354815851},{"_id":"public/live2d_models/izumi/assets/exp/f04.exp.json","hash":"2e4f19882061c1b9bf49537244550cb5c9dd8a18","modified":1603354815851},{"_id":"public/live2d_models/izumi/assets/exp/f05.exp.json","hash":"b0c99350872f614a2a7f60e6479a4799d2d74986","modified":1603354815851},{"_id":"public/live2d_models/izumi/assets/exp/f06.exp.json","hash":"fd90baab724e71a25c8fd1eba2fab97974906374","modified":1603354815851},{"_id":"public/live2d_models/izumi/assets/exp/f07.exp.json","hash":"bb8dc60fc59444fee419265e68216bdcc0282b0b","modified":1603354815851},{"_id":"public/live2d_models/shizuku/assets/exp/f01.exp.json","hash":"84073a497ddb6e56c6cfc244a0fb217ba473abf9","modified":1603354815851},{"_id":"public/live2d_models/shizuku/assets/exp/f02.exp.json","hash":"241b6afafa2e25c6d7a54692a8b5aa060a137ab1","modified":1603354815851},{"_id":"public/live2d_models/shizuku/assets/exp/f03.exp.json","hash":"fbf7729e504f14f83f976827fcf62301a6579a34","modified":1603354815851},{"_id":"public/live2d_models/shizuku/assets/exp/f04.exp.json","hash":"35e746ede62e7090e7dfb08561d77772f58b4153","modified":1603354815851},{"_id":"public/live2d_models/tsumiki/assets/exp/F01.exp.json","hash":"7c0a23a6f3f0a584887be3d3b482ecc7a359306e","modified":1603354815851},{"_id":"public/live2d_models/tsumiki/assets/exp/F03.exp.json","hash":"ab92d6fd93d152a4739d93cc6a650c36623dcf72","modified":1603354815851},{"_id":"public/live2d_models/tsumiki/assets/exp/F02.exp.json","hash":"5e7fffd67c06aee0cdcab0b8f816fd6a125db260","modified":1603354815851},{"_id":"public/live2d_models/tsumiki/assets/exp/F05.exp.json","hash":"afd807b47a00389374949731dd97087aeeec28d7","modified":1603354815851},{"_id":"public/live2d_models/tsumiki/assets/exp/F04.exp.json","hash":"19c9ad9d05ea7cb15ccdabeaa14ec84c2763af9c","modified":1603354815851},{"_id":"public/live2d_models/tsumiki/assets/exp/F06.exp.json","hash":"8dd11423a36822927463c3adfdd629d4126f2205","modified":1603354815851},{"_id":"public/live2d_models/tsumiki/assets/exp/F07.exp.json","hash":"65441e1c9d27f4af55b45759e3c8407af2b72c3e","modified":1603354815851},{"_id":"public/live2d_models/tsumiki/assets/exp/F09.exp.json","hash":"eb7d53e7617247158e4d538e2e7f1a602cfe21a5","modified":1603354815851},{"_id":"public/live2d_models/tsumiki/assets/exp/F08.exp.json","hash":"03284527751a22b05336329df15e103fdc7e95ec","modified":1603354815851},{"_id":"public/live2d_models/tsumiki/assets/exp/F10.exp.json","hash":"61bccc68a43662888862fe46c91f579958097ed9","modified":1603354815851},{"_id":"public/live2d_models/z16/assets/exp/f00.exp.json","hash":"84073a497ddb6e56c6cfc244a0fb217ba473abf9","modified":1603354815851},{"_id":"public/live2d_models/haru/01/assets/exp/f01.exp.json","hash":"84073a497ddb6e56c6cfc244a0fb217ba473abf9","modified":1603354815851},{"_id":"public/live2d_models/haru/01/assets/exp/f02.exp.json","hash":"461fe8077a2289e309ffc7edf561501a7edcce88","modified":1603354815851},{"_id":"public/live2d_models/haru/01/assets/exp/f03.exp.json","hash":"a65382a1a8d8f7034eac2c811b9f122a8b3f1403","modified":1603354815851},{"_id":"public/live2d_models/haru/01/assets/exp/f05.exp.json","hash":"1123786fb0bb9c31f7d30cf14b2299f898cdc207","modified":1603354815851},{"_id":"public/live2d_models/haru/01/assets/exp/f04.exp.json","hash":"3156286d7e0281e15c637a889aa415eef3224fa7","modified":1603354815851},{"_id":"public/live2d_models/haru/01/assets/exp/f06.exp.json","hash":"d962889ec7c563d818ddb5ab1e58cd337b5e62db","modified":1603354815851},{"_id":"public/live2d_models/haru/01/assets/exp/f07.exp.json","hash":"d55366c9bcf382e8273cf1803f65cdb8a4a0d336","modified":1603354815851},{"_id":"public/live2d_models/haru/01/assets/exp/f08.exp.json","hash":"4a9ba4b11d9797f59c7b043d2b807ed8253f3cc4","modified":1603354815851},{"_id":"public/live2d_models/haru/02/assets/exp/f01.exp.json","hash":"84073a497ddb6e56c6cfc244a0fb217ba473abf9","modified":1603354815851},{"_id":"public/live2d_models/haru/02/assets/exp/f02.exp.json","hash":"461fe8077a2289e309ffc7edf561501a7edcce88","modified":1603354815851},{"_id":"public/live2d_models/haru/02/assets/exp/f03.exp.json","hash":"a65382a1a8d8f7034eac2c811b9f122a8b3f1403","modified":1603354815851},{"_id":"public/live2d_models/haru/02/assets/exp/f04.exp.json","hash":"3156286d7e0281e15c637a889aa415eef3224fa7","modified":1603354815851},{"_id":"public/live2d_models/haru/02/assets/exp/f05.exp.json","hash":"1123786fb0bb9c31f7d30cf14b2299f898cdc207","modified":1603354815851},{"_id":"public/live2d_models/haru/02/assets/exp/f06.exp.json","hash":"d962889ec7c563d818ddb5ab1e58cd337b5e62db","modified":1603354815851},{"_id":"public/live2d_models/haru/02/assets/exp/f07.exp.json","hash":"d55366c9bcf382e8273cf1803f65cdb8a4a0d336","modified":1603354815851},{"_id":"public/live2d_models/haru/02/assets/exp/f08.exp.json","hash":"4a9ba4b11d9797f59c7b043d2b807ed8253f3cc4","modified":1603354815851},{"_id":"public/live2d_models/izumi/assets/moc/izumi_illust.moc","hash":"819e029e0d81ed64c59d47fc747026d4bbe637d6","modified":1603354815851},{"_id":"public/live2d_models/miku/assets/moc/miku.moc","hash":"a57e92e12f1fcb21d4d3a9ac34f01badbeff3671","modified":1603354815851},{"_id":"public/live2d_models/nietzsche/assets/moc/nietzsche.moc","hash":"63e70620e9eee593dbb77b26209ad64afa82f571","modified":1603354815851},{"_id":"public/live2d_models/nipsilon/assets/moc/nipsilon.moc","hash":"77ea4fba30cd6f056d1175654a8c950523cdf37e","modified":1603354815851},{"_id":"public/live2d_models/nito/assets/moc/nito.moc","hash":"aae6ab7a4687b166b30fb3bbfb1de5e91a5641e4","modified":1603354815851},{"_id":"public/live2d_models/haru/02/assets/moc/haru02.moc","hash":"748cf01b45bebb3b217d6363f9d5ff81ab942787","modified":1603354815851},{"_id":"public/live2d_models/nico/assets/moc/nico.2048/texture_01.png","hash":"9a19b242b9309624de1e43703b240c1c72bf2205","modified":1603354815851},{"_id":"public/live2d_models/shizuku/assets/moc/shizuku.1024/texture_02.png","hash":"055eb2da9c13e9116be93a1e60c0ea2b660af864","modified":1603354815851},{"_id":"public/live2d_models/haru/02/assets/moc/haru02.1024/texture_02.png","hash":"df02ff8355fca1389bbed5153dc1dadd8cd1c704","modified":1603354815851},{"_id":"public/plugins/live2d-widget.js/L2Dwidget.min.js","hash":"189df71cee9f1273f134fd78114c72c69b5a44c1","modified":1603354815851},{"_id":"public/live2d_models/chitose/assets/moc/chitose.moc","hash":"7e328a496119887e4caaaa5b81adb3aacb0dac19","modified":1603354815851},{"_id":"public/live2d_models/hijiki/assets/moc/hijiki.moc","hash":"44289e62545a7046e0f5231103a851750b78524e","modified":1603354815851},{"_id":"public/live2d_models/haruto/assets/moc/haruto.moc","hash":"57bec0b245b49ea941d61ba3dee671f20441afae","modified":1603354815851},{"_id":"public/live2d_models/tororo/assets/moc/tororo.moc","hash":"44289e62545a7046e0f5231103a851750b78524e","modified":1603354815851},{"_id":"public/live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_05.png","hash":"e6b2987797dbcf113879024df919aa716ded9d4e","modified":1603354815851},{"_id":"public/live2d_models/haru/01/assets/moc/haru01.moc","hash":"d2223b555b3bdbbd955301c4c5bcbe7ebe19bec1","modified":1603354815851},{"_id":"public/live2d_models/haruto/assets/moc/haruto.2048/texture_00.png","hash":"62b970aa1480a1c18bdc4e74e297f2a1b34ca9fa","modified":1603354815851},{"_id":"public/live2d_models/hibiki/assets/moc/hibiki.2048/texture_00.png","hash":"91349297cc411865cf5605a998b68a97fe67eec5","modified":1603354815851},{"_id":"public/live2d_models/hijiki/assets/moc/hijiki.2048/texture_00.png","hash":"66464e0d96439695b5542c5e2f5be60739c29999","modified":1603354815851},{"_id":"public/live2d_models/nito/assets/moc/nito.2048/texture_00.png","hash":"8ea2e684b826d4a8548b237ab86b3bb701ca8d5b","modified":1603354815851},{"_id":"public/live2d_models/tsumiki/assets/moc/tsumiki.2048/texture_01.png","hash":"ffbb082160de6e3bb664b1a4e16b503a80b549c2","modified":1603354815851},{"_id":"public/live2d_models/ni-j/assets/moc/ni-j.moc","hash":"d846e2c4a4db0f003f2eda466f64cf2165e39ad8","modified":1603354815851},{"_id":"public/live2d_models/koharu/assets/moc/koharu.moc","hash":"5eec3fba21444dd6f774b913510b5955e2c0605b","modified":1603354815851},{"_id":"public/live2d_models/nico/assets/moc/nico.moc","hash":"371b0d972aca62a2b67d32398be091d792f0b3cb","modified":1603354815851},{"_id":"public/live2d_models/koharu/assets/moc/koharu.2048/texture_00.png","hash":"0879b61b745084781722636bba9f278f31ce5fc1","modified":1603354815851},{"_id":"public/live2d_models/nipsilon/assets/moc/nipsilon.2048/texture_00.png","hash":"8ea2e684b826d4a8548b237ab86b3bb701ca8d5b","modified":1603354815851},{"_id":"public/live2d_models/nipsilon/assets/moc/nipsilon.2048/texture_02.png","hash":"8052842f4b880ce16a01703a128d8881f63f8543","modified":1603354815851},{"_id":"public/live2d_models/tsumiki/assets/moc/tsumiki.2048/texture_00.png","hash":"0316bc67bc2bde4017530989f34d62981ed88ab5","modified":1603354815851},{"_id":"public/live2d_models/tsumiki/assets/moc/tsumiki.moc","hash":"cc023058ae61f70acf7580c4e2352b84eaf1a7b9","modified":1603354815851},{"_id":"public/live2d_models/epsilon2_1/assets/moc/Epsilon2.1.2048/texture_00.png","hash":"5a245b4c78e6ebaad4d50e47361d1fada208ae5f","modified":1603354815851},{"_id":"public/live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_02.png","hash":"1c2cf2502769b3a359c121823f9ecdb114063288","modified":1603354815851},{"_id":"public/live2d_models/nietzsche/assets/moc/nietzsche.2048/texture_02.png","hash":"9abe0e1b8fe05ad4c678f17fd0f47a064f98908d","modified":1603354815851},{"_id":"public/live2d_models/tororo/assets/moc/tororo.2048/texture_00.png","hash":"98af764b541083e87fc2f8e85f02d2db38c898cc","modified":1603354815851},{"_id":"public/main.cde658.css","hash":"59bca65389a1ba443aae12ee1821440847353da5","modified":1603354815851},{"_id":"public/gitment/APlayer.min.js","hash":"9f131b6ca3b89e52545a279356b79530bbb52a64","modified":1603354815851},{"_id":"public/lib/jquery-2.1.4.min.js","hash":"43dc554608df885a59ddeece1598c6ace434d747","modified":1603354815851},{"_id":"public/plugins/TweenMax/TweenMax.min.js","hash":"8598fc6507e8948a0f99a61bb1dc345ecc1e1f6f","modified":1603354815851},{"_id":"public/live2d_models/izumi/assets/moc/izumi_illust.1024/texture_01.png","hash":"274627b4750bac66b29a9c19a939aca1655b1d27","modified":1603354815851},{"_id":"public/plugins/live2d-widget.js/L2Dwidget.0.min.js","hash":"3cfe69c7d1bf48ba529e243f3892f7919d57ccc0","modified":1603354815851},{"_id":"public/plugins/live2d-widget.js/L2Dwidget.common.js","hash":"b6a9fa8908ce9b64fe27b632935219eb10fd9283","modified":1603354815851},{"_id":"public/live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_00.png","hash":"ff5b30d94adfcca1e5b77a3b7d3d75d750707d83","modified":1603354815851},{"_id":"public/live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_01.png","hash":"da2a0785207727ba87a30ed6853dafd9978eb7b4","modified":1603354815851},{"_id":"public/main.cde658.js","hash":"c1c74f8641972318f43be2f99dd6cd4c90b6689a","modified":1603354815851},{"_id":"public/slider.cf3a85.js","hash":"2150436311cb9b2b0d5210736c088017904df6f9","modified":1603354815851},{"_id":"public/lib/gitment.js","hash":"d1dd326c7b21f36ad78d55c451a1f0bbb13d201c","modified":1603354815851},{"_id":"public/plugins/live2d-widget.js/L2Dwidget.common.js.map","hash":"8de60ae490ab3d62c91c8ce60a256079b6afd3d8","modified":1603354815851},{"_id":"public/plugins/live2d-widget.js/L2Dwidget.0.min.js.map","hash":"3b3a7076b747b092d6e48f42a8a3497aa21280ee","modified":1603354815851},{"_id":"public/live2d_models/izumi/assets/moc/izumi_illust.1024/texture_02.png","hash":"4b45fb19ee5b662678692132feae93119ff56d08","modified":1603354815851},{"_id":"public/live2d_models/izumi/assets/moc/izumi_illust.1024/texture_03.png","hash":"84005d6e75ed9db0f531b6e5e0d6d541da796b04","modified":1603354815851},{"_id":"public/live2d_models/shizuku/assets/moc/shizuku.moc","hash":"c2670a0f75830edc89d7fe6d074de4ee67e8dc5d","modified":1603354815851},{"_id":"public/live2d_models/miku/assets/moc/miku.2048/texture_00.png","hash":"26fe101720ab8e55fb62c87b563d0dbb903c5eaf","modified":1603354815851},{"_id":"public/live2d_models/izumi/assets/moc/izumi_illust.1024/texture_00.png","hash":"bfcecfa399b328ac15eba45f2b6b3b18d50f2daf","modified":1603354815851},{"_id":"public/mobile.35b535.js","hash":"afae7199038745c1a9bcc6fe778a65958bf59e5f","modified":1603354815851},{"_id":"public/live2d_models/gf/assets/moc/Gantzert_Felixander.moc","hash":"67d418af2db593b0b6f318e95f49d4370515c8f0","modified":1603354815851},{"_id":"public/live2d_models/chitose/assets/moc/chitose.2048/texture_00.png","hash":"505dbba0bec5d7fda0cead773caa540a0158a610","modified":1603354815851},{"_id":"public/lib/giteement.browser.js","hash":"824925ebd507d6b6fe3005f6c90c64809638456b","modified":1603354815851}],"Category":[],"Data":[],"Page":[{"title":"留言板","layout":"comment","date":"2020-10-11T12:24:21.000Z","_content":"前端攻城狮一枚，略懂后端，处于不停的学习中。。。\n\n本主题基于[yilia-plus](https://github.com/JoeyBling/hexo-theme-yilia-plus)\n欢迎各位友好交流，留言无需登录，可以匿名留言\n","source":"comment/index.md","raw":"---\ntitle: 留言板\nlayout: comment\ndate: 2020-10-11 20:24:21\n---\n前端攻城狮一枚，略懂后端，处于不停的学习中。。。\n\n本主题基于[yilia-plus](https://github.com/JoeyBling/hexo-theme-yilia-plus)\n欢迎各位友好交流，留言无需登录，可以匿名留言\n","updated":"2020-10-22T06:54:07.193Z","path":"comment/index.html","comments":1,"_id":"ckgkk27rn0000kcv0agp703x3","content":"<p>前端攻城狮一枚，略懂后端，处于不停的学习中。。。</p>\n<p>本主题基于<a href=\"https://github.com/JoeyBling/hexo-theme-yilia-plus\">yilia-plus</a><br>欢迎各位友好交流，留言无需登录，可以匿名留言</p>\n","site":{"data":{}},"excerpt":"","more":"<p>前端攻城狮一枚，略懂后端，处于不停的学习中。。。</p>\n<p>本主题基于<a href=\"https://github.com/JoeyBling/hexo-theme-yilia-plus\">yilia-plus</a><br>欢迎各位友好交流，留言无需登录，可以匿名留言</p>\n"}],"Post":[{"layout":"post","title":"mongodb索引","date":"2019-03-04T16:00:00.000Z","excerpt":"索引通常能够极大的提高查询的效率","comments":1,"_content":"\n索引通常能够极大的提高查询的效率，如果没有索引，MongoDB在读取数据时必须扫描集合中的每个文件并选取那些符合查询条件的记录。\n\n这种扫描全集合的查询效率是非常低的，特别在处理大量的数据时，查询可以要花费几十秒甚至几分钟，这对网站的性能是非常致命的。\n\n索引是特殊的数据结构，索引存储在一个易于遍历读取的数据集合中，索引是对数据库表中一列或多列的值进行排序的一种结构\n\n## 实例\n```\n>db.col.createIndex({\"title\":1})\n>\n```\n## api方法\n1、查看集合索引\n>db.col.getIndexes()\n\n2、查看集合索引大小\n>db.col.totalIndexSize()\n\n3、删除集合所有索引\n>db.col.dropIndexes()\n\n4、删除集合指定索引\n>db.col.dropIndex(\"索引名称\")\n\n## 参考\nhttp://www.runoob.com/mongodb/mongodb-indexing.html","source":"_posts/2019-03-05-数据库.md","raw":"---\nlayout: post\ntitle: \"mongodb索引\"\ndate: 2019-03-05\nexcerpt: \"索引通常能够极大的提高查询的效率\"\ntags: [mongo, ruby]\ncomments: true\n---\n\n索引通常能够极大的提高查询的效率，如果没有索引，MongoDB在读取数据时必须扫描集合中的每个文件并选取那些符合查询条件的记录。\n\n这种扫描全集合的查询效率是非常低的，特别在处理大量的数据时，查询可以要花费几十秒甚至几分钟，这对网站的性能是非常致命的。\n\n索引是特殊的数据结构，索引存储在一个易于遍历读取的数据集合中，索引是对数据库表中一列或多列的值进行排序的一种结构\n\n## 实例\n```\n>db.col.createIndex({\"title\":1})\n>\n```\n## api方法\n1、查看集合索引\n>db.col.getIndexes()\n\n2、查看集合索引大小\n>db.col.totalIndexSize()\n\n3、删除集合所有索引\n>db.col.dropIndexes()\n\n4、删除集合指定索引\n>db.col.dropIndex(\"索引名称\")\n\n## 参考\nhttp://www.runoob.com/mongodb/mongodb-indexing.html","slug":"2019-03-05-数据库","published":1,"updated":"2020-10-09T02:42:43.449Z","photos":[],"link":"","_id":"ckgkk27ru0001kcv028qlbix6","content":"<p>索引通常能够极大的提高查询的效率，如果没有索引，MongoDB在读取数据时必须扫描集合中的每个文件并选取那些符合查询条件的记录。</p>\n<p>这种扫描全集合的查询效率是非常低的，特别在处理大量的数据时，查询可以要花费几十秒甚至几分钟，这对网站的性能是非常致命的。</p>\n<p>索引是特殊的数据结构，索引存储在一个易于遍历读取的数据集合中，索引是对数据库表中一列或多列的值进行排序的一种结构</p>\n<h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;db.col.createIndex(&#123;&quot;title&quot;:1&#125;)</span><br><span class=\"line\">&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"api方法\"><a href=\"#api方法\" class=\"headerlink\" title=\"api方法\"></a>api方法</h2><p>1、查看集合索引</p>\n<blockquote>\n<p>db.col.getIndexes()</p>\n</blockquote>\n<p>2、查看集合索引大小</p>\n<blockquote>\n<p>db.col.totalIndexSize()</p>\n</blockquote>\n<p>3、删除集合所有索引</p>\n<blockquote>\n<p>db.col.dropIndexes()</p>\n</blockquote>\n<p>4、删除集合指定索引</p>\n<blockquote>\n<p>db.col.dropIndex(“索引名称”)</p>\n</blockquote>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"http://www.runoob.com/mongodb/mongodb-indexing.html\">http://www.runoob.com/mongodb/mongodb-indexing.html</a></p>\n","site":{"data":{}},"more":"<p>索引通常能够极大的提高查询的效率，如果没有索引，MongoDB在读取数据时必须扫描集合中的每个文件并选取那些符合查询条件的记录。</p>\n<p>这种扫描全集合的查询效率是非常低的，特别在处理大量的数据时，查询可以要花费几十秒甚至几分钟，这对网站的性能是非常致命的。</p>\n<p>索引是特殊的数据结构，索引存储在一个易于遍历读取的数据集合中，索引是对数据库表中一列或多列的值进行排序的一种结构</p>\n<h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;db.col.createIndex(&#123;&quot;title&quot;:1&#125;)</span><br><span class=\"line\">&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"api方法\"><a href=\"#api方法\" class=\"headerlink\" title=\"api方法\"></a>api方法</h2><p>1、查看集合索引</p>\n<blockquote>\n<p>db.col.getIndexes()</p>\n</blockquote>\n<p>2、查看集合索引大小</p>\n<blockquote>\n<p>db.col.totalIndexSize()</p>\n</blockquote>\n<p>3、删除集合所有索引</p>\n<blockquote>\n<p>db.col.dropIndexes()</p>\n</blockquote>\n<p>4、删除集合指定索引</p>\n<blockquote>\n<p>db.col.dropIndex(“索引名称”)</p>\n</blockquote>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"http://www.runoob.com/mongodb/mongodb-indexing.html\">http://www.runoob.com/mongodb/mongodb-indexing.html</a></p>\n"},{"layout":"post","title":"调用DataTable api","date":"2019-03-11T16:00:00.000Z","excerpt":"初始化DataTable后，不用记录返回值,调用dataTable api","comments":1,"_content":"\n当我们要使用dataTable方法时，一般如下调用\n```\nvar table = $('#example').DataTable();\ntable.clear().draw();\n```\n然而当在另一个函数中想用调用DataTable方法的话，就需要把`table`当作参数传值。\n当dataTable 已经初始化完毕后，也可以用``.dataTable()``方法来取得返回值\n```\n$('#example').DataTable();\nvar table = $('#example').dataTable().api();\ntable.clear().draw();\n```\n这样就不需要再把`table`当作参数传值，这样可以简化函数的复杂度\n","source":"_posts/2019-03-12-DataTable.md","raw":"---\nlayout: post\ntitle: \"调用DataTable api\"\ndate: 2019-03-12\nexcerpt: \"初始化DataTable后，不用记录返回值,调用dataTable api\"\ntags: [DataTable, web, javascript]\ncomments: true\n---\n\n当我们要使用dataTable方法时，一般如下调用\n```\nvar table = $('#example').DataTable();\ntable.clear().draw();\n```\n然而当在另一个函数中想用调用DataTable方法的话，就需要把`table`当作参数传值。\n当dataTable 已经初始化完毕后，也可以用``.dataTable()``方法来取得返回值\n```\n$('#example').DataTable();\nvar table = $('#example').dataTable().api();\ntable.clear().draw();\n```\n这样就不需要再把`table`当作参数传值，这样可以简化函数的复杂度\n","slug":"2019-03-12-DataTable","published":1,"updated":"2020-10-05T03:06:43.079Z","photos":[],"link":"","_id":"ckgkk27s10002kcv06pk16xxf","content":"<p>当我们要使用dataTable方法时，一般如下调用</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var table &#x3D; $(&#39;#example&#39;).DataTable();</span><br><span class=\"line\">table.clear().draw();</span><br></pre></td></tr></table></figure>\n<p>然而当在另一个函数中想用调用DataTable方法的话，就需要把<code>table</code>当作参数传值。<br>当dataTable 已经初始化完毕后，也可以用<code>.dataTable()</code>方法来取得返回值</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(&#39;#example&#39;).DataTable();</span><br><span class=\"line\">var table &#x3D; $(&#39;#example&#39;).dataTable().api();</span><br><span class=\"line\">table.clear().draw();</span><br></pre></td></tr></table></figure>\n<p>这样就不需要再把<code>table</code>当作参数传值，这样可以简化函数的复杂度</p>\n","site":{"data":{}},"more":"<p>当我们要使用dataTable方法时，一般如下调用</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var table &#x3D; $(&#39;#example&#39;).DataTable();</span><br><span class=\"line\">table.clear().draw();</span><br></pre></td></tr></table></figure>\n<p>然而当在另一个函数中想用调用DataTable方法的话，就需要把<code>table</code>当作参数传值。<br>当dataTable 已经初始化完毕后，也可以用<code>.dataTable()</code>方法来取得返回值</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(&#39;#example&#39;).DataTable();</span><br><span class=\"line\">var table &#x3D; $(&#39;#example&#39;).dataTable().api();</span><br><span class=\"line\">table.clear().draw();</span><br></pre></td></tr></table></figure>\n<p>这样就不需要再把<code>table</code>当作参数传值，这样可以简化函数的复杂度</p>\n"},{"layout":"post","title":"DataTable搜索框，正则匹配规则","date":"2019-03-11T16:00:00.000Z","excerpt":"每一行代表的字符串是以2个空格将每一列连成一个字符串","comments":1,"_content":"\n`DataTable`中的`search`搜索框功能非常强大，可以匹配表格中的任意数据。不仅如此`DataTable`还提供了`regex`选项可以使用正则表达式。\n\n```\n$('#example').dataTable( {\n  \"search\": {\n    \"regex\": true\n  }\n} );\n```\n值的一提的是，DataTable搜索结果以行显示，那么每一行是怎么匹配正则的？\n\n>每一行代表的字符串是以2个空格将没一列连成一个字符串\n\n>例如：\n\n|example1|example2|example3|\n|:-:|:-:|:-:|\n|a|c|d|\n|e|f|g|\n|h|i|j|\n\n如果我们在输入框中输入: `^a  c  d`  \n即可匹配到第一行\n\n>如果想要更多的验证DataTable的正则匹配规则，[可以点击连接验证](https://datatables.net/examples/api/regex.html)\n\n\n\n","source":"_posts/2019-03-12-DataTable使用正则.md","raw":"---\nlayout: post\ntitle: \"DataTable搜索框，正则匹配规则\"\ndate: 2019-03-12\nexcerpt: \"每一行代表的字符串是以2个空格将每一列连成一个字符串\"\ntags: [DataTable, web, javascript]\ncomments: true\n---\n\n`DataTable`中的`search`搜索框功能非常强大，可以匹配表格中的任意数据。不仅如此`DataTable`还提供了`regex`选项可以使用正则表达式。\n\n```\n$('#example').dataTable( {\n  \"search\": {\n    \"regex\": true\n  }\n} );\n```\n值的一提的是，DataTable搜索结果以行显示，那么每一行是怎么匹配正则的？\n\n>每一行代表的字符串是以2个空格将没一列连成一个字符串\n\n>例如：\n\n|example1|example2|example3|\n|:-:|:-:|:-:|\n|a|c|d|\n|e|f|g|\n|h|i|j|\n\n如果我们在输入框中输入: `^a  c  d`  \n即可匹配到第一行\n\n>如果想要更多的验证DataTable的正则匹配规则，[可以点击连接验证](https://datatables.net/examples/api/regex.html)\n\n\n\n","slug":"2019-03-12-DataTable使用正则","published":1,"updated":"2020-10-09T02:42:43.446Z","photos":[],"link":"","_id":"ckgkk27s80004kcv0ddpr6hqw","content":"<p><code>DataTable</code>中的<code>search</code>搜索框功能非常强大，可以匹配表格中的任意数据。不仅如此<code>DataTable</code>还提供了<code>regex</code>选项可以使用正则表达式。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(&#39;#example&#39;).dataTable( &#123;</span><br><span class=\"line\">  &quot;search&quot;: &#123;</span><br><span class=\"line\">    &quot;regex&quot;: true</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125; );</span><br></pre></td></tr></table></figure>\n<p>值的一提的是，DataTable搜索结果以行显示，那么每一行是怎么匹配正则的？</p>\n<blockquote>\n<p>每一行代表的字符串是以2个空格将没一列连成一个字符串</p>\n</blockquote>\n<blockquote>\n<p>例如：</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th align=\"center\">example1</th>\n<th align=\"center\">example2</th>\n<th align=\"center\">example3</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">a</td>\n<td align=\"center\">c</td>\n<td align=\"center\">d</td>\n</tr>\n<tr>\n<td align=\"center\">e</td>\n<td align=\"center\">f</td>\n<td align=\"center\">g</td>\n</tr>\n<tr>\n<td align=\"center\">h</td>\n<td align=\"center\">i</td>\n<td align=\"center\">j</td>\n</tr>\n</tbody></table>\n<p>如果我们在输入框中输入: <code>^a  c  d</code><br>即可匹配到第一行</p>\n<blockquote>\n<p>如果想要更多的验证DataTable的正则匹配规则，<a href=\"https://datatables.net/examples/api/regex.html\">可以点击连接验证</a></p>\n</blockquote>\n","site":{"data":{}},"more":"<p><code>DataTable</code>中的<code>search</code>搜索框功能非常强大，可以匹配表格中的任意数据。不仅如此<code>DataTable</code>还提供了<code>regex</code>选项可以使用正则表达式。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(&#39;#example&#39;).dataTable( &#123;</span><br><span class=\"line\">  &quot;search&quot;: &#123;</span><br><span class=\"line\">    &quot;regex&quot;: true</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125; );</span><br></pre></td></tr></table></figure>\n<p>值的一提的是，DataTable搜索结果以行显示，那么每一行是怎么匹配正则的？</p>\n<blockquote>\n<p>每一行代表的字符串是以2个空格将没一列连成一个字符串</p>\n</blockquote>\n<blockquote>\n<p>例如：</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th align=\"center\">example1</th>\n<th align=\"center\">example2</th>\n<th align=\"center\">example3</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">a</td>\n<td align=\"center\">c</td>\n<td align=\"center\">d</td>\n</tr>\n<tr>\n<td align=\"center\">e</td>\n<td align=\"center\">f</td>\n<td align=\"center\">g</td>\n</tr>\n<tr>\n<td align=\"center\">h</td>\n<td align=\"center\">i</td>\n<td align=\"center\">j</td>\n</tr>\n</tbody></table>\n<p>如果我们在输入框中输入: <code>^a  c  d</code><br>即可匹配到第一行</p>\n<blockquote>\n<p>如果想要更多的验证DataTable的正则匹配规则，<a href=\"https://datatables.net/examples/api/regex.html\">可以点击连接验证</a></p>\n</blockquote>\n"},{"layout":"post","title":"使用privoxy搭建代理服务器","date":"2019-03-14T16:00:00.000Z","excerpt":"使用privoxy搭建代理服务器","comments":1,"_content":"\n### 安装privoxy\n```\nyum install -y epel-release\nyum install -y privoxy\n```\n### 修改配置文件\n```\nvim /etc/privoxy/config\n```\n>修改ip(此处为你想作为代理的服务器的ip)\n\n```\nlisten-address  127.0.0.1:8118\n```\n### 启动\n```\n# 启动\nsystemctl start privoxy\n# 开机启动\nsystemctl enable privoxy\n```\n### 参考\n[https://www.cnblogs.com/straycats/p/8452354.html](https://www.cnblogs.com/straycats/p/8452354.html '参考')\n","source":"_posts/2019-03-12-代理服务器的搭建.md","raw":"---\nlayout: post\ntitle: \"使用privoxy搭建代理服务器\"\ndate: 2019-03-15\nexcerpt: \"使用privoxy搭建代理服务器\"\ntags: [linux, network]\ncomments: true\n---\n\n### 安装privoxy\n```\nyum install -y epel-release\nyum install -y privoxy\n```\n### 修改配置文件\n```\nvim /etc/privoxy/config\n```\n>修改ip(此处为你想作为代理的服务器的ip)\n\n```\nlisten-address  127.0.0.1:8118\n```\n### 启动\n```\n# 启动\nsystemctl start privoxy\n# 开机启动\nsystemctl enable privoxy\n```\n### 参考\n[https://www.cnblogs.com/straycats/p/8452354.html](https://www.cnblogs.com/straycats/p/8452354.html '参考')\n","slug":"2019-03-12-代理服务器的搭建","published":1,"updated":"2020-10-09T02:42:43.438Z","photos":[],"link":"","_id":"ckgkk27sa0005kcv0cpn14463","content":"<h3 id=\"安装privoxy\"><a href=\"#安装privoxy\" class=\"headerlink\" title=\"安装privoxy\"></a>安装privoxy</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y epel-release</span><br><span class=\"line\">yum install -y privoxy</span><br></pre></td></tr></table></figure>\n<h3 id=\"修改配置文件\"><a href=\"#修改配置文件\" class=\"headerlink\" title=\"修改配置文件\"></a>修改配置文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim &#x2F;etc&#x2F;privoxy&#x2F;config</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>修改ip(此处为你想作为代理的服务器的ip)</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">listen-address  127.0.0.1:8118</span><br></pre></td></tr></table></figure>\n<h3 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 启动</span><br><span class=\"line\">systemctl start privoxy</span><br><span class=\"line\"># 开机启动</span><br><span class=\"line\">systemctl enable privoxy</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><p><a href=\"https://www.cnblogs.com/straycats/p/8452354.html\" title=\"参考\">https://www.cnblogs.com/straycats/p/8452354.html</a></p>\n","site":{"data":{}},"more":"<h3 id=\"安装privoxy\"><a href=\"#安装privoxy\" class=\"headerlink\" title=\"安装privoxy\"></a>安装privoxy</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y epel-release</span><br><span class=\"line\">yum install -y privoxy</span><br></pre></td></tr></table></figure>\n<h3 id=\"修改配置文件\"><a href=\"#修改配置文件\" class=\"headerlink\" title=\"修改配置文件\"></a>修改配置文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim &#x2F;etc&#x2F;privoxy&#x2F;config</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>修改ip(此处为你想作为代理的服务器的ip)</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">listen-address  127.0.0.1:8118</span><br></pre></td></tr></table></figure>\n<h3 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 启动</span><br><span class=\"line\">systemctl start privoxy</span><br><span class=\"line\"># 开机启动</span><br><span class=\"line\">systemctl enable privoxy</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><p><a href=\"https://www.cnblogs.com/straycats/p/8452354.html\" title=\"参考\">https://www.cnblogs.com/straycats/p/8452354.html</a></p>\n"},{"layout":"post","title":"ruby 基本知识","date":"2019-03-18T16:00:00.000Z","excerpt":"部分常用的ruby数组方法","comments":1,"_content":"\n* slice\n* clear\n* collect\n* map\n* compact\n* concat\n* delete(delete_if)\n* each\n* empty?\n* eql?\n* flatten\n* include?\n* insert\n* join\n* pop\n* push\n* reject\n* replace\n* reverse\n* select\n* shift\n* sort\n* uniq\n* unshift\n\n## 补充\n* first\n* last\n* sub\n* gsub\n* group_by\n* round\n* inject\n* partition\n* strip\n* start_with?\n* to_a, to_i, to_s\n* merge\n* flat_map\n* rjust\n* negative?, positive?, zero?\n* max, min\n* all，any，every\n\n\n### 参考\n[ruby api查找](http://doc.rubyfans.com/)","source":"_posts/2019-03-19-ruby基本知识.md","raw":"---\nlayout: post\ntitle: \"ruby 基本知识\"\ndate: 2019-03-19\nexcerpt: \"部分常用的ruby数组方法\"\ntags: [ruby, base]\ncomments: true\n---\n\n* slice\n* clear\n* collect\n* map\n* compact\n* concat\n* delete(delete_if)\n* each\n* empty?\n* eql?\n* flatten\n* include?\n* insert\n* join\n* pop\n* push\n* reject\n* replace\n* reverse\n* select\n* shift\n* sort\n* uniq\n* unshift\n\n## 补充\n* first\n* last\n* sub\n* gsub\n* group_by\n* round\n* inject\n* partition\n* strip\n* start_with?\n* to_a, to_i, to_s\n* merge\n* flat_map\n* rjust\n* negative?, positive?, zero?\n* max, min\n* all，any，every\n\n\n### 参考\n[ruby api查找](http://doc.rubyfans.com/)","slug":"2019-03-19-ruby基本知识","published":1,"updated":"2020-10-09T02:42:43.452Z","photos":[],"link":"","_id":"ckgkk27sd0006kcv089pv4tql","content":"<ul>\n<li>slice</li>\n<li>clear</li>\n<li>collect</li>\n<li>map</li>\n<li>compact</li>\n<li>concat</li>\n<li>delete(delete_if)</li>\n<li>each</li>\n<li>empty?</li>\n<li>eql?</li>\n<li>flatten</li>\n<li>include?</li>\n<li>insert</li>\n<li>join</li>\n<li>pop</li>\n<li>push</li>\n<li>reject</li>\n<li>replace</li>\n<li>reverse</li>\n<li>select</li>\n<li>shift</li>\n<li>sort</li>\n<li>uniq</li>\n<li>unshift</li>\n</ul>\n<h2 id=\"补充\"><a href=\"#补充\" class=\"headerlink\" title=\"补充\"></a>补充</h2><ul>\n<li>first</li>\n<li>last</li>\n<li>sub</li>\n<li>gsub</li>\n<li>group_by</li>\n<li>round</li>\n<li>inject</li>\n<li>partition</li>\n<li>strip</li>\n<li>start_with?</li>\n<li>to_a, to_i, to_s</li>\n<li>merge</li>\n<li>flat_map</li>\n<li>rjust</li>\n<li>negative?, positive?, zero?</li>\n<li>max, min</li>\n<li>all，any，every</li>\n</ul>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><p><a href=\"http://doc.rubyfans.com/\">ruby api查找</a></p>\n","site":{"data":{}},"more":"<ul>\n<li>slice</li>\n<li>clear</li>\n<li>collect</li>\n<li>map</li>\n<li>compact</li>\n<li>concat</li>\n<li>delete(delete_if)</li>\n<li>each</li>\n<li>empty?</li>\n<li>eql?</li>\n<li>flatten</li>\n<li>include?</li>\n<li>insert</li>\n<li>join</li>\n<li>pop</li>\n<li>push</li>\n<li>reject</li>\n<li>replace</li>\n<li>reverse</li>\n<li>select</li>\n<li>shift</li>\n<li>sort</li>\n<li>uniq</li>\n<li>unshift</li>\n</ul>\n<h2 id=\"补充\"><a href=\"#补充\" class=\"headerlink\" title=\"补充\"></a>补充</h2><ul>\n<li>first</li>\n<li>last</li>\n<li>sub</li>\n<li>gsub</li>\n<li>group_by</li>\n<li>round</li>\n<li>inject</li>\n<li>partition</li>\n<li>strip</li>\n<li>start_with?</li>\n<li>to_a, to_i, to_s</li>\n<li>merge</li>\n<li>flat_map</li>\n<li>rjust</li>\n<li>negative?, positive?, zero?</li>\n<li>max, min</li>\n<li>all，any，every</li>\n</ul>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><p><a href=\"http://doc.rubyfans.com/\">ruby api查找</a></p>\n"},{"layout":"post","title":"Ruby Rails 学习资料","date":"2019-03-19T16:00:00.000Z","excerpt":"相关教程及Api检索","comments":1,"_content":"\n\n### Ruby入门教程\n[Ruby 教程](http://www.runoob.com/ruby/ruby-tutorial.html)\n### Ruby Rails Api 检索\n[Ruby开发文档](http://doc.rubyfans.com/)\n### Ruby On Rails\n[Ruby On Rails指南（中文）](https://ruby-china.github.io/rails-guides/)\n","source":"_posts/2019-03-20-Ruby-Rails学习资料.md","raw":"---\nlayout: post\ntitle: \"Ruby Rails 学习资料\"\ndate: 2019-03-20\nexcerpt: \"相关教程及Api检索\"\ntags: [ruby, rails, base]\ncomments: true\n---\n\n\n### Ruby入门教程\n[Ruby 教程](http://www.runoob.com/ruby/ruby-tutorial.html)\n### Ruby Rails Api 检索\n[Ruby开发文档](http://doc.rubyfans.com/)\n### Ruby On Rails\n[Ruby On Rails指南（中文）](https://ruby-china.github.io/rails-guides/)\n","slug":"2019-03-20-Ruby-Rails学习资料","published":1,"updated":"2020-10-09T02:42:43.452Z","photos":[],"link":"","_id":"ckgkk27sg0008kcv01wez1bof","content":"<h3 id=\"Ruby入门教程\"><a href=\"#Ruby入门教程\" class=\"headerlink\" title=\"Ruby入门教程\"></a>Ruby入门教程</h3><p><a href=\"http://www.runoob.com/ruby/ruby-tutorial.html\">Ruby 教程</a></p>\n<h3 id=\"Ruby-Rails-Api-检索\"><a href=\"#Ruby-Rails-Api-检索\" class=\"headerlink\" title=\"Ruby Rails Api 检索\"></a>Ruby Rails Api 检索</h3><p><a href=\"http://doc.rubyfans.com/\">Ruby开发文档</a></p>\n<h3 id=\"Ruby-On-Rails\"><a href=\"#Ruby-On-Rails\" class=\"headerlink\" title=\"Ruby On Rails\"></a>Ruby On Rails</h3><p><a href=\"https://ruby-china.github.io/rails-guides/\">Ruby On Rails指南（中文）</a></p>\n","site":{"data":{}},"more":"<h3 id=\"Ruby入门教程\"><a href=\"#Ruby入门教程\" class=\"headerlink\" title=\"Ruby入门教程\"></a>Ruby入门教程</h3><p><a href=\"http://www.runoob.com/ruby/ruby-tutorial.html\">Ruby 教程</a></p>\n<h3 id=\"Ruby-Rails-Api-检索\"><a href=\"#Ruby-Rails-Api-检索\" class=\"headerlink\" title=\"Ruby Rails Api 检索\"></a>Ruby Rails Api 检索</h3><p><a href=\"http://doc.rubyfans.com/\">Ruby开发文档</a></p>\n<h3 id=\"Ruby-On-Rails\"><a href=\"#Ruby-On-Rails\" class=\"headerlink\" title=\"Ruby On Rails\"></a>Ruby On Rails</h3><p><a href=\"https://ruby-china.github.io/rails-guides/\">Ruby On Rails指南（中文）</a></p>\n"},{"layout":"post","title":"Ruby open3 死锁","date":"2019-03-28T16:00:00.000Z","excerpt":"open3 死锁的原因和解决方法","comments":1,"_content":"\n## open3死锁\n根据open3的死锁条件，当需要构建大量输出在stderr中，open3就会死锁。\n\n```\nstdin, stdout, stderr, wait_thr = Open3.popen3([env,] cmd... [, opts])\n```\n我遇到的情况是stdout的输出内容较多，所以推测如果有错的话，stderr也会有大量输出，这样就会造成open3死锁。\n\n## 解决\n根据官方文档提示，需要同时读取stderr和stdout，我们使用``IO.select``实现\n\n```\ninp,out,err = open3(\"process\",\"args\")\ninp.close # we pass everything via command-line, so close child's stdin at once\nstill_open = [out,err]  # Array that only contains the opened streams\nwhile not still_open.empty?\n  fhs = select(still_open,nil,nil,nil) # wait for data available in the pipes\n  # fhs[0] is an array that contains filehandlers we can read from\n  if fhs[0].include? out\n    begin\n      printf(\"%s\",out.readline())\n    rescue EOFError  # If we have read everything from the pipe\n      # Remove out from the list of open pipes\n      still_open.delete_if {|s| s==out}\n    end\n  end\n  if fhs[0].include? err\n    begin\n      printf(\"ERROR: %s\",err.readline())\n    rescue EOFError  # If we have read everything from the pipe\n      # Remove err from the list of open pipes\n      still_open.delete_if {|s| s==err}\n    end\n  end\nend\n```\n\n## 参考\n[open3定义](https://www.rubydoc.info/stdlib/open3/Open3.popen3)  \n[避免open3死锁的方法](http://coldattic.info/post/63/)","source":"_posts/2019-03-29-ruby-open3死锁.md","raw":"---\nlayout: post\ntitle: \"Ruby open3 死锁\"\ndate: 2019-03-29\nexcerpt: \"open3 死锁的原因和解决方法\"\ntags: [ruby]\ncomments: true\n---\n\n## open3死锁\n根据open3的死锁条件，当需要构建大量输出在stderr中，open3就会死锁。\n\n```\nstdin, stdout, stderr, wait_thr = Open3.popen3([env,] cmd... [, opts])\n```\n我遇到的情况是stdout的输出内容较多，所以推测如果有错的话，stderr也会有大量输出，这样就会造成open3死锁。\n\n## 解决\n根据官方文档提示，需要同时读取stderr和stdout，我们使用``IO.select``实现\n\n```\ninp,out,err = open3(\"process\",\"args\")\ninp.close # we pass everything via command-line, so close child's stdin at once\nstill_open = [out,err]  # Array that only contains the opened streams\nwhile not still_open.empty?\n  fhs = select(still_open,nil,nil,nil) # wait for data available in the pipes\n  # fhs[0] is an array that contains filehandlers we can read from\n  if fhs[0].include? out\n    begin\n      printf(\"%s\",out.readline())\n    rescue EOFError  # If we have read everything from the pipe\n      # Remove out from the list of open pipes\n      still_open.delete_if {|s| s==out}\n    end\n  end\n  if fhs[0].include? err\n    begin\n      printf(\"ERROR: %s\",err.readline())\n    rescue EOFError  # If we have read everything from the pipe\n      # Remove err from the list of open pipes\n      still_open.delete_if {|s| s==err}\n    end\n  end\nend\n```\n\n## 参考\n[open3定义](https://www.rubydoc.info/stdlib/open3/Open3.popen3)  \n[避免open3死锁的方法](http://coldattic.info/post/63/)","slug":"2019-03-29-ruby-open3死锁","published":1,"updated":"2020-10-09T03:02:43.631Z","photos":[],"link":"","_id":"ckgkk27si0009kcv0c5np0b9s","content":"<h2 id=\"open3死锁\"><a href=\"#open3死锁\" class=\"headerlink\" title=\"open3死锁\"></a>open3死锁</h2><p>根据open3的死锁条件，当需要构建大量输出在stderr中，open3就会死锁。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">stdin, stdout, stderr, wait_thr &#x3D; Open3.popen3([env,] cmd... [, opts])</span><br></pre></td></tr></table></figure>\n<p>我遇到的情况是stdout的输出内容较多，所以推测如果有错的话，stderr也会有大量输出，这样就会造成open3死锁。</p>\n<h2 id=\"解决\"><a href=\"#解决\" class=\"headerlink\" title=\"解决\"></a>解决</h2><p>根据官方文档提示，需要同时读取stderr和stdout，我们使用<code>IO.select</code>实现</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">inp,out,err &#x3D; open3(&quot;process&quot;,&quot;args&quot;)</span><br><span class=\"line\">inp.close # we pass everything via command-line, so close child&#39;s stdin at once</span><br><span class=\"line\">still_open &#x3D; [out,err]  # Array that only contains the opened streams</span><br><span class=\"line\">while not still_open.empty?</span><br><span class=\"line\">  fhs &#x3D; select(still_open,nil,nil,nil) # wait for data available in the pipes</span><br><span class=\"line\">  # fhs[0] is an array that contains filehandlers we can read from</span><br><span class=\"line\">  if fhs[0].include? out</span><br><span class=\"line\">    begin</span><br><span class=\"line\">      printf(&quot;%s&quot;,out.readline())</span><br><span class=\"line\">    rescue EOFError  # If we have read everything from the pipe</span><br><span class=\"line\">      # Remove out from the list of open pipes</span><br><span class=\"line\">      still_open.delete_if &#123;|s| s&#x3D;&#x3D;out&#125;</span><br><span class=\"line\">    end</span><br><span class=\"line\">  end</span><br><span class=\"line\">  if fhs[0].include? err</span><br><span class=\"line\">    begin</span><br><span class=\"line\">      printf(&quot;ERROR: %s&quot;,err.readline())</span><br><span class=\"line\">    rescue EOFError  # If we have read everything from the pipe</span><br><span class=\"line\">      # Remove err from the list of open pipes</span><br><span class=\"line\">      still_open.delete_if &#123;|s| s&#x3D;&#x3D;err&#125;</span><br><span class=\"line\">    end</span><br><span class=\"line\">  end</span><br><span class=\"line\">end</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"https://www.rubydoc.info/stdlib/open3/Open3.popen3\">open3定义</a><br><a href=\"http://coldattic.info/post/63/\">避免open3死锁的方法</a></p>\n","site":{"data":{}},"more":"<h2 id=\"open3死锁\"><a href=\"#open3死锁\" class=\"headerlink\" title=\"open3死锁\"></a>open3死锁</h2><p>根据open3的死锁条件，当需要构建大量输出在stderr中，open3就会死锁。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">stdin, stdout, stderr, wait_thr &#x3D; Open3.popen3([env,] cmd... [, opts])</span><br></pre></td></tr></table></figure>\n<p>我遇到的情况是stdout的输出内容较多，所以推测如果有错的话，stderr也会有大量输出，这样就会造成open3死锁。</p>\n<h2 id=\"解决\"><a href=\"#解决\" class=\"headerlink\" title=\"解决\"></a>解决</h2><p>根据官方文档提示，需要同时读取stderr和stdout，我们使用<code>IO.select</code>实现</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">inp,out,err &#x3D; open3(&quot;process&quot;,&quot;args&quot;)</span><br><span class=\"line\">inp.close # we pass everything via command-line, so close child&#39;s stdin at once</span><br><span class=\"line\">still_open &#x3D; [out,err]  # Array that only contains the opened streams</span><br><span class=\"line\">while not still_open.empty?</span><br><span class=\"line\">  fhs &#x3D; select(still_open,nil,nil,nil) # wait for data available in the pipes</span><br><span class=\"line\">  # fhs[0] is an array that contains filehandlers we can read from</span><br><span class=\"line\">  if fhs[0].include? out</span><br><span class=\"line\">    begin</span><br><span class=\"line\">      printf(&quot;%s&quot;,out.readline())</span><br><span class=\"line\">    rescue EOFError  # If we have read everything from the pipe</span><br><span class=\"line\">      # Remove out from the list of open pipes</span><br><span class=\"line\">      still_open.delete_if &#123;|s| s&#x3D;&#x3D;out&#125;</span><br><span class=\"line\">    end</span><br><span class=\"line\">  end</span><br><span class=\"line\">  if fhs[0].include? err</span><br><span class=\"line\">    begin</span><br><span class=\"line\">      printf(&quot;ERROR: %s&quot;,err.readline())</span><br><span class=\"line\">    rescue EOFError  # If we have read everything from the pipe</span><br><span class=\"line\">      # Remove err from the list of open pipes</span><br><span class=\"line\">      still_open.delete_if &#123;|s| s&#x3D;&#x3D;err&#125;</span><br><span class=\"line\">    end</span><br><span class=\"line\">  end</span><br><span class=\"line\">end</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"https://www.rubydoc.info/stdlib/open3/Open3.popen3\">open3定义</a><br><a href=\"http://coldattic.info/post/63/\">避免open3死锁的方法</a></p>\n"},{"layout":"post","title":"Git 环境配置","date":"2019-04-02T16:00:00.000Z","excerpt":"配置全局name, email, 使用ssh clone代码","comments":1,"_content":"\n### 配置name, email等\n\n```\n$ cat ~/.gitconfig\n[user]\n\temail = chaox.a.xu@intel.com\n\tname = Xu Chao\n\n[core]\n\teditor = vim -U none           # git commit -sv 可以用vim\n\n```\n\n### 使用ssh clone代码\n\n```\ngit clone ssh://user@host/path\n```","source":"_posts/2019-04-03-git环境配置.md","raw":"---\nlayout: post\ntitle: \"Git 环境配置\"\ndate: 2019-04-03\nexcerpt: \"配置全局name, email, 使用ssh clone代码\"\ntags: [git]\ncomments: true\n---\n\n### 配置name, email等\n\n```\n$ cat ~/.gitconfig\n[user]\n\temail = chaox.a.xu@intel.com\n\tname = Xu Chao\n\n[core]\n\teditor = vim -U none           # git commit -sv 可以用vim\n\n```\n\n### 使用ssh clone代码\n\n```\ngit clone ssh://user@host/path\n```","slug":"2019-04-03-git环境配置","published":1,"updated":"2020-10-09T02:42:43.453Z","photos":[],"link":"","_id":"ckgkk27sk000bkcv0bq9f4tl5","content":"<h3 id=\"配置name-email等\"><a href=\"#配置name-email等\" class=\"headerlink\" title=\"配置name, email等\"></a>配置name, email等</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cat ~&#x2F;.gitconfig</span><br><span class=\"line\">[user]</span><br><span class=\"line\">\temail &#x3D; chaox.a.xu@intel.com</span><br><span class=\"line\">\tname &#x3D; Xu Chao</span><br><span class=\"line\"></span><br><span class=\"line\">[core]</span><br><span class=\"line\">\teditor &#x3D; vim -U none           # git commit -sv 可以用vim</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用ssh-clone代码\"><a href=\"#使用ssh-clone代码\" class=\"headerlink\" title=\"使用ssh clone代码\"></a>使用ssh clone代码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone ssh:&#x2F;&#x2F;user@host&#x2F;path</span><br></pre></td></tr></table></figure>","site":{"data":{}},"more":"<h3 id=\"配置name-email等\"><a href=\"#配置name-email等\" class=\"headerlink\" title=\"配置name, email等\"></a>配置name, email等</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cat ~&#x2F;.gitconfig</span><br><span class=\"line\">[user]</span><br><span class=\"line\">\temail &#x3D; chaox.a.xu@intel.com</span><br><span class=\"line\">\tname &#x3D; Xu Chao</span><br><span class=\"line\"></span><br><span class=\"line\">[core]</span><br><span class=\"line\">\teditor &#x3D; vim -U none           # git commit -sv 可以用vim</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用ssh-clone代码\"><a href=\"#使用ssh-clone代码\" class=\"headerlink\" title=\"使用ssh clone代码\"></a>使用ssh clone代码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone ssh:&#x2F;&#x2F;user@host&#x2F;path</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"js 事件委托机制","date":"2019-05-07T16:00:00.000Z","excerpt":"js事件委托和冒泡的原理及应用","comments":1,"_content":"\n## 概述\n那什么叫事件委托呢？它还有一个名字叫事件代理，JavaScript高级程序设计上讲：事件委托就是利用事件冒泡，只指定一个事件处理程序，就可以管理某一类型的所有事件。举个列子：\n有三个同事预计会在周一收到快递。为签收快递，有两种办法：一是三个人在公司门口等快递；二是委托给前台MM代为签收。现实当中，我们大都采用委托的方案（公司也不会容忍那么多员工站在门口就为了等快递）。前台MM收到快递后，她会判断收件人是谁，然后按照收件人的要求签收，甚至代为付款。这种方案还有一个优势，那就是即使公司里来了新员工（不管多少），前台MM也会在收到寄给新员工的快递后核实并代为签收。\n\n这里其实还有2层意思的：\n\n第一，现在委托前台的同事是可以代为签收的，即程序中的现有的dom节点是有事件的；\n\n第二，新员工也是可以被前台MM代为签收的，即程序中新添加的dom节点也是有事件的。\n\n## 应用场景\n* 提高性能  \n比如我们有100个li，每个li都有相同的click点击事件，可能我们会用for循环的方法，来遍历所有的li，然后给它们添加事件。  \n这是我们通常的做法，这不仅很low，而且会严重影响页面的性能，事件的数量直接影响页面渲染时需要的时间，所以我们可以利用事件委托来解决这个问题。\n* 为不存在元素创建事件  \n当需要为动态创建的元素添加事件时，初学者都会再元素上添加`onclick()`事件，在指向对应的函数。\n这种方法不够简洁明了。\n## 实例\n这里用父级ul做事件处理，当li被点击时，由于冒泡原理，事件就会冒泡到ul上，因为ul上有点击事件，所以事件就会触发，当然，这里当点击ul的时候，也是会触发的，那么问题就来了，如果我想让事件代理的效果跟直接给节点的事件效果一样怎么办，比如说只有点击li才会触发，不怕，我们有绝招：\n\nEvent对象提供了一个属性叫target，可以返回事件的目标节点，我们成为事件源，也就是说，target就可以表示为当前的事件操作的dom，但是不是真正操作dom，当然，这个是有兼容性的，标准浏览器用ev.target，IE浏览器用event.srcElement，此时只是获取了当前节点的位置，并不知道是什么节点名称，这里我们用nodeName来获取具体是什么标签名，这个返回的是一个大写的，我们需要转成小写再做比较（习惯问题）\n```\nwindow.onload = function(){\n　　var oUl = document.getElementById(\"ul1\");\n　　oUl.onclick = function(ev){\n　　　　var ev = ev || window.event;\n　　　　var target = ev.target || ev.srcElement;\n　　　　if(target.nodeName.toLowerCase() == 'li'){\n　 　　　　　　\talert(123);\n　　　　　　　  alert(target.innerHTML);\n　　　　}\n　　}\n}\n```\n在jquery中on的事件绑定也用到了委托机制\n```\n$('ele').on('click', 'div', callback)\n```\n第二个参数是指为选中元素下的div子元素绑定事件，这里的功能和我们的事件委托机制很像\n\n## 参考\n[js中的事件委托或是事件代理详解](http://www.cnblogs.com/liugang-vip/p/5616484.html)","source":"_posts/2019-05-08-js事件委托机制.md","raw":"---\nlayout: post\ntitle: \"js 事件委托机制\"\ndate: 2019-05-08\nexcerpt: \"js事件委托和冒泡的原理及应用\"\ntags: [javascript]\ncomments: true\n---\n\n## 概述\n那什么叫事件委托呢？它还有一个名字叫事件代理，JavaScript高级程序设计上讲：事件委托就是利用事件冒泡，只指定一个事件处理程序，就可以管理某一类型的所有事件。举个列子：\n有三个同事预计会在周一收到快递。为签收快递，有两种办法：一是三个人在公司门口等快递；二是委托给前台MM代为签收。现实当中，我们大都采用委托的方案（公司也不会容忍那么多员工站在门口就为了等快递）。前台MM收到快递后，她会判断收件人是谁，然后按照收件人的要求签收，甚至代为付款。这种方案还有一个优势，那就是即使公司里来了新员工（不管多少），前台MM也会在收到寄给新员工的快递后核实并代为签收。\n\n这里其实还有2层意思的：\n\n第一，现在委托前台的同事是可以代为签收的，即程序中的现有的dom节点是有事件的；\n\n第二，新员工也是可以被前台MM代为签收的，即程序中新添加的dom节点也是有事件的。\n\n## 应用场景\n* 提高性能  \n比如我们有100个li，每个li都有相同的click点击事件，可能我们会用for循环的方法，来遍历所有的li，然后给它们添加事件。  \n这是我们通常的做法，这不仅很low，而且会严重影响页面的性能，事件的数量直接影响页面渲染时需要的时间，所以我们可以利用事件委托来解决这个问题。\n* 为不存在元素创建事件  \n当需要为动态创建的元素添加事件时，初学者都会再元素上添加`onclick()`事件，在指向对应的函数。\n这种方法不够简洁明了。\n## 实例\n这里用父级ul做事件处理，当li被点击时，由于冒泡原理，事件就会冒泡到ul上，因为ul上有点击事件，所以事件就会触发，当然，这里当点击ul的时候，也是会触发的，那么问题就来了，如果我想让事件代理的效果跟直接给节点的事件效果一样怎么办，比如说只有点击li才会触发，不怕，我们有绝招：\n\nEvent对象提供了一个属性叫target，可以返回事件的目标节点，我们成为事件源，也就是说，target就可以表示为当前的事件操作的dom，但是不是真正操作dom，当然，这个是有兼容性的，标准浏览器用ev.target，IE浏览器用event.srcElement，此时只是获取了当前节点的位置，并不知道是什么节点名称，这里我们用nodeName来获取具体是什么标签名，这个返回的是一个大写的，我们需要转成小写再做比较（习惯问题）\n```\nwindow.onload = function(){\n　　var oUl = document.getElementById(\"ul1\");\n　　oUl.onclick = function(ev){\n　　　　var ev = ev || window.event;\n　　　　var target = ev.target || ev.srcElement;\n　　　　if(target.nodeName.toLowerCase() == 'li'){\n　 　　　　　　\talert(123);\n　　　　　　　  alert(target.innerHTML);\n　　　　}\n　　}\n}\n```\n在jquery中on的事件绑定也用到了委托机制\n```\n$('ele').on('click', 'div', callback)\n```\n第二个参数是指为选中元素下的div子元素绑定事件，这里的功能和我们的事件委托机制很像\n\n## 参考\n[js中的事件委托或是事件代理详解](http://www.cnblogs.com/liugang-vip/p/5616484.html)","slug":"2019-05-08-js事件委托机制","published":1,"updated":"2020-10-05T03:06:43.192Z","photos":[],"link":"","_id":"ckgkk27sm000dkcv07nq0bbtr","content":"<h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>那什么叫事件委托呢？它还有一个名字叫事件代理，JavaScript高级程序设计上讲：事件委托就是利用事件冒泡，只指定一个事件处理程序，就可以管理某一类型的所有事件。举个列子：<br>有三个同事预计会在周一收到快递。为签收快递，有两种办法：一是三个人在公司门口等快递；二是委托给前台MM代为签收。现实当中，我们大都采用委托的方案（公司也不会容忍那么多员工站在门口就为了等快递）。前台MM收到快递后，她会判断收件人是谁，然后按照收件人的要求签收，甚至代为付款。这种方案还有一个优势，那就是即使公司里来了新员工（不管多少），前台MM也会在收到寄给新员工的快递后核实并代为签收。</p>\n<p>这里其实还有2层意思的：</p>\n<p>第一，现在委托前台的同事是可以代为签收的，即程序中的现有的dom节点是有事件的；</p>\n<p>第二，新员工也是可以被前台MM代为签收的，即程序中新添加的dom节点也是有事件的。</p>\n<h2 id=\"应用场景\"><a href=\"#应用场景\" class=\"headerlink\" title=\"应用场景\"></a>应用场景</h2><ul>\n<li>提高性能<br>比如我们有100个li，每个li都有相同的click点击事件，可能我们会用for循环的方法，来遍历所有的li，然后给它们添加事件。<br>这是我们通常的做法，这不仅很low，而且会严重影响页面的性能，事件的数量直接影响页面渲染时需要的时间，所以我们可以利用事件委托来解决这个问题。</li>\n<li>为不存在元素创建事件<br>当需要为动态创建的元素添加事件时，初学者都会再元素上添加<code>onclick()</code>事件，在指向对应的函数。<br>这种方法不够简洁明了。<h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2>这里用父级ul做事件处理，当li被点击时，由于冒泡原理，事件就会冒泡到ul上，因为ul上有点击事件，所以事件就会触发，当然，这里当点击ul的时候，也是会触发的，那么问题就来了，如果我想让事件代理的效果跟直接给节点的事件效果一样怎么办，比如说只有点击li才会触发，不怕，我们有绝招：</li>\n</ul>\n<p>Event对象提供了一个属性叫target，可以返回事件的目标节点，我们成为事件源，也就是说，target就可以表示为当前的事件操作的dom，但是不是真正操作dom，当然，这个是有兼容性的，标准浏览器用ev.target，IE浏览器用event.srcElement，此时只是获取了当前节点的位置，并不知道是什么节点名称，这里我们用nodeName来获取具体是什么标签名，这个返回的是一个大写的，我们需要转成小写再做比较（习惯问题）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">window.onload &#x3D; function()&#123;</span><br><span class=\"line\">　　var oUl &#x3D; document.getElementById(&quot;ul1&quot;);</span><br><span class=\"line\">　　oUl.onclick &#x3D; function(ev)&#123;</span><br><span class=\"line\">　　　　var ev &#x3D; ev || window.event;</span><br><span class=\"line\">　　　　var target &#x3D; ev.target || ev.srcElement;</span><br><span class=\"line\">　　　　if(target.nodeName.toLowerCase() &#x3D;&#x3D; &#39;li&#39;)&#123;</span><br><span class=\"line\">　 　　　　　　\talert(123);</span><br><span class=\"line\">　　　　　　　  alert(target.innerHTML);</span><br><span class=\"line\">　　　　&#125;</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在jquery中on的事件绑定也用到了委托机制</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(&#39;ele&#39;).on(&#39;click&#39;, &#39;div&#39;, callback)</span><br></pre></td></tr></table></figure>\n<p>第二个参数是指为选中元素下的div子元素绑定事件，这里的功能和我们的事件委托机制很像</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"http://www.cnblogs.com/liugang-vip/p/5616484.html\">js中的事件委托或是事件代理详解</a></p>\n","site":{"data":{}},"more":"<h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>那什么叫事件委托呢？它还有一个名字叫事件代理，JavaScript高级程序设计上讲：事件委托就是利用事件冒泡，只指定一个事件处理程序，就可以管理某一类型的所有事件。举个列子：<br>有三个同事预计会在周一收到快递。为签收快递，有两种办法：一是三个人在公司门口等快递；二是委托给前台MM代为签收。现实当中，我们大都采用委托的方案（公司也不会容忍那么多员工站在门口就为了等快递）。前台MM收到快递后，她会判断收件人是谁，然后按照收件人的要求签收，甚至代为付款。这种方案还有一个优势，那就是即使公司里来了新员工（不管多少），前台MM也会在收到寄给新员工的快递后核实并代为签收。</p>\n<p>这里其实还有2层意思的：</p>\n<p>第一，现在委托前台的同事是可以代为签收的，即程序中的现有的dom节点是有事件的；</p>\n<p>第二，新员工也是可以被前台MM代为签收的，即程序中新添加的dom节点也是有事件的。</p>\n<h2 id=\"应用场景\"><a href=\"#应用场景\" class=\"headerlink\" title=\"应用场景\"></a>应用场景</h2><ul>\n<li>提高性能<br>比如我们有100个li，每个li都有相同的click点击事件，可能我们会用for循环的方法，来遍历所有的li，然后给它们添加事件。<br>这是我们通常的做法，这不仅很low，而且会严重影响页面的性能，事件的数量直接影响页面渲染时需要的时间，所以我们可以利用事件委托来解决这个问题。</li>\n<li>为不存在元素创建事件<br>当需要为动态创建的元素添加事件时，初学者都会再元素上添加<code>onclick()</code>事件，在指向对应的函数。<br>这种方法不够简洁明了。<h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2>这里用父级ul做事件处理，当li被点击时，由于冒泡原理，事件就会冒泡到ul上，因为ul上有点击事件，所以事件就会触发，当然，这里当点击ul的时候，也是会触发的，那么问题就来了，如果我想让事件代理的效果跟直接给节点的事件效果一样怎么办，比如说只有点击li才会触发，不怕，我们有绝招：</li>\n</ul>\n<p>Event对象提供了一个属性叫target，可以返回事件的目标节点，我们成为事件源，也就是说，target就可以表示为当前的事件操作的dom，但是不是真正操作dom，当然，这个是有兼容性的，标准浏览器用ev.target，IE浏览器用event.srcElement，此时只是获取了当前节点的位置，并不知道是什么节点名称，这里我们用nodeName来获取具体是什么标签名，这个返回的是一个大写的，我们需要转成小写再做比较（习惯问题）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">window.onload &#x3D; function()&#123;</span><br><span class=\"line\">　　var oUl &#x3D; document.getElementById(&quot;ul1&quot;);</span><br><span class=\"line\">　　oUl.onclick &#x3D; function(ev)&#123;</span><br><span class=\"line\">　　　　var ev &#x3D; ev || window.event;</span><br><span class=\"line\">　　　　var target &#x3D; ev.target || ev.srcElement;</span><br><span class=\"line\">　　　　if(target.nodeName.toLowerCase() &#x3D;&#x3D; &#39;li&#39;)&#123;</span><br><span class=\"line\">　 　　　　　　\talert(123);</span><br><span class=\"line\">　　　　　　　  alert(target.innerHTML);</span><br><span class=\"line\">　　　　&#125;</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在jquery中on的事件绑定也用到了委托机制</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(&#39;ele&#39;).on(&#39;click&#39;, &#39;div&#39;, callback)</span><br></pre></td></tr></table></figure>\n<p>第二个参数是指为选中元素下的div子元素绑定事件，这里的功能和我们的事件委托机制很像</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"http://www.cnblogs.com/liugang-vip/p/5616484.html\">js中的事件委托或是事件代理详解</a></p>\n"},{"layout":"post","title":"css 居中","date":"2019-05-21T16:00:00.000Z","excerpt":"利用各种css的特性实现居中","comments":1,"_content":"\ncss中有很多不同的居中方法，适应不同的情况，下面简单介绍几种常见的：\n\n## 1. 文字居中,边距居中\n这种居中方法一般使用较多。`text-align: center` 规定文字居中，`margin: 0 auto` 规定水平居中。\n```\n<!DOCTYPE html>\n<html>\n<head>\n  <title>center</title>\n  <style type=\"text/css\">\n    .wrap {\n      text-align: center;\n    }\n    .div {\n      margin: 0 auto;\n      border: 1px solid red;\n      width: 200px;\n    }\n  </style>\n</head>\n<body>\n<div class=\"wrap\">\n  <div class=\"div\">test</div>\n</div>\n</body>\n</html>\n```\n<iframe width=\"100%\" height=\"100px\" srcdoc=\"\n<style type='text/css'>\n  .wrap { text-align: center; }\n  .div { margin: 0 auto; border: 1px solid red; width: 200px; }\n</style>\n<div class='wrap'>\n  <div class='div'>test</div>\n</div>\n\">\n</iframe>\n\n\n## 2. 绝对定位居中\n用于没有父元素包裹，需要居中的元素是绝对定位。\n```\n<!DOCTYPE html>\n<html>\n<head>\n  <title>center</title>\n  <style type=\"text/css\">\n    .wrap .div{\n      width: 10%; \n      height: 60%; \n      border: 1px solid red;\n      margin: auto; \n      position: absolute;\n      top: 0; left: 0; bottom: 0; right: 0;\n      text-align: center;\n    }\n  </style>\n</head>\n<body>\n<div class=\"wrap\">\n  <div class=\"div\">test</div>\n</div>\n</body>\n</html>\n```\n<iframe width=\"100%\" height=\"100px\" srcdoc=\"\n<style type='text/css'>\n    .wrap .div{\n      width: 10%; \n      height: 60%; \n      border: 1px solid red;\n      margin: auto; \n      position: absolute;\n      top: 0; left: 0; bottom: 0; right: 0;\n      text-align: center;\n    }\n</style>\n<div class='wrap'>\n  <div class='div'>test</div>\n</div>\n\">\n</iframe>\n\n### 总结\n上述都需要`margin:auto`，这是利用了`margin`把元素在页面上的剩余位置用边距填满，为边距赋统一值`auto`，这样就可以使元素2边相等。  \n如果元素的`width:100%`，那么这个元素就相当于居中，如果`width`不等于100%，就可以用`margin`把剩下的位置填满, 因为`margin`也是盒子模型中的成员，所以它在盒子中占据空间和`width:100%`一样。\n\n## 3. table-cell\n利用表格中`vertical-align: middle`可以垂直居中的特性，使用方便。不过这种方法的水平居中有局限性，内部元素不可以设置宽度\n```\n<!DOCTYPE html>\n<html>\n<head>\n  <title>center</title>\n  <style type=\"text/css\">\n  .wrap {\n    display: table-cell;\n    vertical-align: middle;\n    text-align: center;\n    width: 100px;\n    height: 100px;\n    border: 1px solid red;\n  }\n  .div {\n    border: 1px solid red;\n  }\n  </style>\n</head>\n<body>\n  <div class=\"wrap\">\n    <div class=\"div\">test</div>\n  </div>\n</body>\n</html>\n```\n<iframe width=\"100%\" height=\"150px\" srcdoc=\"\n<style type='text/css'>\n\t\t.wrap {\n\t\t\tdisplay: table-cell;\n\t\t\tvertical-align: middle;\n\t\t\ttext-align: center;\n      width: 100px;\n      height: 100px;\n      border: 1px solid red;\n\t\t}\n    .div {\n      border: 1px solid red;\n    }\n</style>\n<div class='wrap'>\n  <div class='div'>test</div>\n</div>\n\">\n</iframe>\n\n## 4. 绝对定位和负边距\n这种方法本质上是使用计算解决偏离的问题，但只能用于居中元素确定宽度和高度。\n```\n<!DOCTYPE html>\n<html>\n<head>\n  <title>center</title>\n  <style type=\"text/css\">\n    .div {\n      position: absolute;\n      width:100px;\n      height: 50px;\n      top:50%;\n      left:50%;\n      margin-left:-50px;\n      margin-top:-25px;\n      text-align: center;\n      border: 1px solid red;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"wrap\">\n    <div class=\"div\">test</div>\n  </div>\n</body>\n</html>\n```\n<iframe width=\"100%\" height=\"150px\" srcdoc=\"\n<style type='text/css'>\n    .div {\n      position: absolute;\n      width:100px;\n      height: 50px;\n      top:50%;\n      left:50%;\n      margin-left:-50px;\n      margin-top:-25px;\n      text-align: center;\n      border: 1px solid red;\n    }\n</style>\n<div class='wrap'>\n  <div class='div'>test</div>\n</div>\n\">\n</iframe>\n\n## 5. css3 translate\n原理和上一种方法一样，但是没有宽度的限制。不过与其他css3技术一样，可能需要解决兼容问题。\n```\n<!DOCTYPE html>\n<html>\n<head>\n  <title>center</title>\n  <style type=\"text/css\">\n    .div {\n      position: absolute;\n      top:50%;\n      left:50%;\n      width:100px;\n      transform:translate(-50%,-50%);\n      text-align: center;\n      border: 1px solid red;\n    }\n\t</style>\n</head>\n<body>\n  <div class=\"wrap\">\n  \t<div class=\"div\">test</div>\n  </div>\n</body>\n</html>\n```\n<iframe width=\"100%\" height=\"150px\" srcdoc=\"\n<style type='text/css'>\n    .div {\n      position: absolute;\n      top:50%;\n      left:50%;\n      width:100px;\n      transform:translate(-50%,-50%);\n      text-align: center;\n      border: 1px solid red;\n    }\n</style>\n<div class='wrap'>\n  <div class='div'>test</div>\n</div>\n\">\n</iframe>\n\n## 6. display:flex\n代码量最少的方法，不过父元素宽、高需要确定。\n```\n<!DOCTYPE html>\n<html>\n<head>\n\t<title>center</title>\n\t<style type=\"text/css\">\n    .wrap {\n      height: 100px;\n      width: 100px;\n      border: 1px solid red;\n      display: flex;\n      justify-content:center;\n      align-items:center;\n    }\n    .div {\n      border: 1px solid red;\n    }\n\t</style>\n</head>\n<body>\n  <div class=\"wrap\">\n  \t<div class=\"div\">test</div>\n  </div>\n</body>\n</html>\n```\n<iframe width=\"100%\" height=\"150px\" srcdoc=\"\n<style type='text/css'>\n    .wrap {\n      height: 100px;\n      width: 100px;\n      border: 1px solid red;\n      display: flex;\n      justify-content:center;\n      align-items:center;\n    }\n    .div {\n      border: 1px solid red;\n    }\n</style>\n<div class='wrap'>\n  <div class='div'>test</div>\n</div>\n\">\n</iframe>\n\n---\n下面是一些不常见的方法，用于拓展\n\n---\n\n## 7. 通过伪元素:after占位\n```\n<!DOCTYPE html>\n<html>\n<head>\n  <title>center</title>\n  <style type=\"text/css\">\n    .wrap {\n      text-align:center;\n      font-size:0;\n    }\n    .wrap:after {\n      content:'';\n      width:0;\n      height:100%;\n      display:inline-block;\n      vertical-align:middle;\n    }\n    .div {\n      vertical-align:middle;\n      display:inline-block;\n      font-size:16px;\n      border: 1px solid red;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"wrap\">\n  \t<div class=\"div\">test</div>\n  </div>\n</body>\n</html>\n```\n<iframe width=\"100%\" height=\"150px\" srcdoc=\"\n<style type='text/css'>\n    .wrap {\n      text-align:center;\n      font-size:0;\n    }\n    .wrap:after {\n      content:'';\n      width:0;\n      height:100%;\n      display:inline-block;\n      vertical-align:middle;\n    }\n    .div {\n      vertical-align:middle;\n      display:inline-block;\n      font-size:16px;\n      border: 1px solid red;\n    }\n</style>\n<div class='wrap'>\n  <div class='div'>test</div>\n</div>\n\">\n</iframe>\n\n## 8. display:-webkit-box\n利用了css3的属性\n```\n<!DOCTYPE html>\n<html>\n<head>\n  <title>center</title>\n  <style type=\"text/css\">\n    .wrap {\n      display: -webkit-box;\n      -webkit-box-pack:center;\n      -webkit-box-align:center;\n      -webkit-box-orient: vertical;\n      text-align: center;\n    }\n    .div {\n      border: 1px solid red;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"wrap\">\n    <div class=\"div\">test</div>\n  </div>\n</body>\n</html>\n```\n<iframe width=\"100%\" height=\"150px\" srcdoc=\"\n<style type='text/css'>\n    .wrap {\n      text-align:center;\n      font-size:0;\n    }\n    .wrap:after {\n      content:'';\n      width:0;\n      height:100%;\n      display:inline-block;\n      vertical-align:middle;\n    }\n    .div {\n      vertical-align:middle;\n      display:inline-block;\n      font-size:16px;\n      border: 1px solid red;\n    }\n</style>\n<div class='wrap'>\n  <div class='div'>test</div>\n</div>\n\">\n</iframe>\n","source":"_posts/2019-05-22-css居中详解.md","raw":"---\nlayout: post\ntitle: \"css 居中\"\ndate: 2019-05-22\nexcerpt: \"利用各种css的特性实现居中\"\ntags: [css]\ncomments: true\n---\n\ncss中有很多不同的居中方法，适应不同的情况，下面简单介绍几种常见的：\n\n## 1. 文字居中,边距居中\n这种居中方法一般使用较多。`text-align: center` 规定文字居中，`margin: 0 auto` 规定水平居中。\n```\n<!DOCTYPE html>\n<html>\n<head>\n  <title>center</title>\n  <style type=\"text/css\">\n    .wrap {\n      text-align: center;\n    }\n    .div {\n      margin: 0 auto;\n      border: 1px solid red;\n      width: 200px;\n    }\n  </style>\n</head>\n<body>\n<div class=\"wrap\">\n  <div class=\"div\">test</div>\n</div>\n</body>\n</html>\n```\n<iframe width=\"100%\" height=\"100px\" srcdoc=\"\n<style type='text/css'>\n  .wrap { text-align: center; }\n  .div { margin: 0 auto; border: 1px solid red; width: 200px; }\n</style>\n<div class='wrap'>\n  <div class='div'>test</div>\n</div>\n\">\n</iframe>\n\n\n## 2. 绝对定位居中\n用于没有父元素包裹，需要居中的元素是绝对定位。\n```\n<!DOCTYPE html>\n<html>\n<head>\n  <title>center</title>\n  <style type=\"text/css\">\n    .wrap .div{\n      width: 10%; \n      height: 60%; \n      border: 1px solid red;\n      margin: auto; \n      position: absolute;\n      top: 0; left: 0; bottom: 0; right: 0;\n      text-align: center;\n    }\n  </style>\n</head>\n<body>\n<div class=\"wrap\">\n  <div class=\"div\">test</div>\n</div>\n</body>\n</html>\n```\n<iframe width=\"100%\" height=\"100px\" srcdoc=\"\n<style type='text/css'>\n    .wrap .div{\n      width: 10%; \n      height: 60%; \n      border: 1px solid red;\n      margin: auto; \n      position: absolute;\n      top: 0; left: 0; bottom: 0; right: 0;\n      text-align: center;\n    }\n</style>\n<div class='wrap'>\n  <div class='div'>test</div>\n</div>\n\">\n</iframe>\n\n### 总结\n上述都需要`margin:auto`，这是利用了`margin`把元素在页面上的剩余位置用边距填满，为边距赋统一值`auto`，这样就可以使元素2边相等。  \n如果元素的`width:100%`，那么这个元素就相当于居中，如果`width`不等于100%，就可以用`margin`把剩下的位置填满, 因为`margin`也是盒子模型中的成员，所以它在盒子中占据空间和`width:100%`一样。\n\n## 3. table-cell\n利用表格中`vertical-align: middle`可以垂直居中的特性，使用方便。不过这种方法的水平居中有局限性，内部元素不可以设置宽度\n```\n<!DOCTYPE html>\n<html>\n<head>\n  <title>center</title>\n  <style type=\"text/css\">\n  .wrap {\n    display: table-cell;\n    vertical-align: middle;\n    text-align: center;\n    width: 100px;\n    height: 100px;\n    border: 1px solid red;\n  }\n  .div {\n    border: 1px solid red;\n  }\n  </style>\n</head>\n<body>\n  <div class=\"wrap\">\n    <div class=\"div\">test</div>\n  </div>\n</body>\n</html>\n```\n<iframe width=\"100%\" height=\"150px\" srcdoc=\"\n<style type='text/css'>\n\t\t.wrap {\n\t\t\tdisplay: table-cell;\n\t\t\tvertical-align: middle;\n\t\t\ttext-align: center;\n      width: 100px;\n      height: 100px;\n      border: 1px solid red;\n\t\t}\n    .div {\n      border: 1px solid red;\n    }\n</style>\n<div class='wrap'>\n  <div class='div'>test</div>\n</div>\n\">\n</iframe>\n\n## 4. 绝对定位和负边距\n这种方法本质上是使用计算解决偏离的问题，但只能用于居中元素确定宽度和高度。\n```\n<!DOCTYPE html>\n<html>\n<head>\n  <title>center</title>\n  <style type=\"text/css\">\n    .div {\n      position: absolute;\n      width:100px;\n      height: 50px;\n      top:50%;\n      left:50%;\n      margin-left:-50px;\n      margin-top:-25px;\n      text-align: center;\n      border: 1px solid red;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"wrap\">\n    <div class=\"div\">test</div>\n  </div>\n</body>\n</html>\n```\n<iframe width=\"100%\" height=\"150px\" srcdoc=\"\n<style type='text/css'>\n    .div {\n      position: absolute;\n      width:100px;\n      height: 50px;\n      top:50%;\n      left:50%;\n      margin-left:-50px;\n      margin-top:-25px;\n      text-align: center;\n      border: 1px solid red;\n    }\n</style>\n<div class='wrap'>\n  <div class='div'>test</div>\n</div>\n\">\n</iframe>\n\n## 5. css3 translate\n原理和上一种方法一样，但是没有宽度的限制。不过与其他css3技术一样，可能需要解决兼容问题。\n```\n<!DOCTYPE html>\n<html>\n<head>\n  <title>center</title>\n  <style type=\"text/css\">\n    .div {\n      position: absolute;\n      top:50%;\n      left:50%;\n      width:100px;\n      transform:translate(-50%,-50%);\n      text-align: center;\n      border: 1px solid red;\n    }\n\t</style>\n</head>\n<body>\n  <div class=\"wrap\">\n  \t<div class=\"div\">test</div>\n  </div>\n</body>\n</html>\n```\n<iframe width=\"100%\" height=\"150px\" srcdoc=\"\n<style type='text/css'>\n    .div {\n      position: absolute;\n      top:50%;\n      left:50%;\n      width:100px;\n      transform:translate(-50%,-50%);\n      text-align: center;\n      border: 1px solid red;\n    }\n</style>\n<div class='wrap'>\n  <div class='div'>test</div>\n</div>\n\">\n</iframe>\n\n## 6. display:flex\n代码量最少的方法，不过父元素宽、高需要确定。\n```\n<!DOCTYPE html>\n<html>\n<head>\n\t<title>center</title>\n\t<style type=\"text/css\">\n    .wrap {\n      height: 100px;\n      width: 100px;\n      border: 1px solid red;\n      display: flex;\n      justify-content:center;\n      align-items:center;\n    }\n    .div {\n      border: 1px solid red;\n    }\n\t</style>\n</head>\n<body>\n  <div class=\"wrap\">\n  \t<div class=\"div\">test</div>\n  </div>\n</body>\n</html>\n```\n<iframe width=\"100%\" height=\"150px\" srcdoc=\"\n<style type='text/css'>\n    .wrap {\n      height: 100px;\n      width: 100px;\n      border: 1px solid red;\n      display: flex;\n      justify-content:center;\n      align-items:center;\n    }\n    .div {\n      border: 1px solid red;\n    }\n</style>\n<div class='wrap'>\n  <div class='div'>test</div>\n</div>\n\">\n</iframe>\n\n---\n下面是一些不常见的方法，用于拓展\n\n---\n\n## 7. 通过伪元素:after占位\n```\n<!DOCTYPE html>\n<html>\n<head>\n  <title>center</title>\n  <style type=\"text/css\">\n    .wrap {\n      text-align:center;\n      font-size:0;\n    }\n    .wrap:after {\n      content:'';\n      width:0;\n      height:100%;\n      display:inline-block;\n      vertical-align:middle;\n    }\n    .div {\n      vertical-align:middle;\n      display:inline-block;\n      font-size:16px;\n      border: 1px solid red;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"wrap\">\n  \t<div class=\"div\">test</div>\n  </div>\n</body>\n</html>\n```\n<iframe width=\"100%\" height=\"150px\" srcdoc=\"\n<style type='text/css'>\n    .wrap {\n      text-align:center;\n      font-size:0;\n    }\n    .wrap:after {\n      content:'';\n      width:0;\n      height:100%;\n      display:inline-block;\n      vertical-align:middle;\n    }\n    .div {\n      vertical-align:middle;\n      display:inline-block;\n      font-size:16px;\n      border: 1px solid red;\n    }\n</style>\n<div class='wrap'>\n  <div class='div'>test</div>\n</div>\n\">\n</iframe>\n\n## 8. display:-webkit-box\n利用了css3的属性\n```\n<!DOCTYPE html>\n<html>\n<head>\n  <title>center</title>\n  <style type=\"text/css\">\n    .wrap {\n      display: -webkit-box;\n      -webkit-box-pack:center;\n      -webkit-box-align:center;\n      -webkit-box-orient: vertical;\n      text-align: center;\n    }\n    .div {\n      border: 1px solid red;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"wrap\">\n    <div class=\"div\">test</div>\n  </div>\n</body>\n</html>\n```\n<iframe width=\"100%\" height=\"150px\" srcdoc=\"\n<style type='text/css'>\n    .wrap {\n      text-align:center;\n      font-size:0;\n    }\n    .wrap:after {\n      content:'';\n      width:0;\n      height:100%;\n      display:inline-block;\n      vertical-align:middle;\n    }\n    .div {\n      vertical-align:middle;\n      display:inline-block;\n      font-size:16px;\n      border: 1px solid red;\n    }\n</style>\n<div class='wrap'>\n  <div class='div'>test</div>\n</div>\n\">\n</iframe>\n","slug":"2019-05-22-css居中详解","published":1,"updated":"2020-10-09T02:42:43.453Z","photos":[],"link":"","_id":"ckgkk27sq000gkcv043j09q1k","content":"<p>css中有很多不同的居中方法，适应不同的情况，下面简单介绍几种常见的：</p>\n<h2 id=\"1-文字居中-边距居中\"><a href=\"#1-文字居中-边距居中\" class=\"headerlink\" title=\"1. 文字居中,边距居中\"></a>1. 文字居中,边距居中</h2><p>这种居中方法一般使用较多。<code>text-align: center</code> 规定文字居中，<code>margin: 0 auto</code> 规定水平居中。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">  &lt;title&gt;center&lt;&#x2F;title&gt;</span><br><span class=\"line\">  &lt;style type&#x3D;&quot;text&#x2F;css&quot;&gt;</span><br><span class=\"line\">    .wrap &#123;</span><br><span class=\"line\">      text-align: center;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .div &#123;</span><br><span class=\"line\">      margin: 0 auto;</span><br><span class=\"line\">      border: 1px solid red;</span><br><span class=\"line\">      width: 200px;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &lt;&#x2F;style&gt;</span><br><span class=\"line\">&lt;&#x2F;head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div class&#x3D;&quot;wrap&quot;&gt;</span><br><span class=\"line\">  &lt;div class&#x3D;&quot;div&quot;&gt;test&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br><span class=\"line\">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>\n<iframe width=\"100%\" height=\"100px\" srcdoc=\"\n<style type='text/css'>\n  .wrap { text-align: center; }\n  .div { margin: 0 auto; border: 1px solid red; width: 200px; }\n</style>\n<div class='wrap'>\n  <div class='div'>test</div>\n</div>\n\">\n</iframe>\n\n\n<h2 id=\"2-绝对定位居中\"><a href=\"#2-绝对定位居中\" class=\"headerlink\" title=\"2. 绝对定位居中\"></a>2. 绝对定位居中</h2><p>用于没有父元素包裹，需要居中的元素是绝对定位。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">  &lt;title&gt;center&lt;&#x2F;title&gt;</span><br><span class=\"line\">  &lt;style type&#x3D;&quot;text&#x2F;css&quot;&gt;</span><br><span class=\"line\">    .wrap .div&#123;</span><br><span class=\"line\">      width: 10%; </span><br><span class=\"line\">      height: 60%; </span><br><span class=\"line\">      border: 1px solid red;</span><br><span class=\"line\">      margin: auto; </span><br><span class=\"line\">      position: absolute;</span><br><span class=\"line\">      top: 0; left: 0; bottom: 0; right: 0;</span><br><span class=\"line\">      text-align: center;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &lt;&#x2F;style&gt;</span><br><span class=\"line\">&lt;&#x2F;head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div class&#x3D;&quot;wrap&quot;&gt;</span><br><span class=\"line\">  &lt;div class&#x3D;&quot;div&quot;&gt;test&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br><span class=\"line\">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>\n<iframe width=\"100%\" height=\"100px\" srcdoc=\"\n<style type='text/css'>\n    .wrap .div{\n      width: 10%; \n      height: 60%; \n      border: 1px solid red;\n      margin: auto; \n      position: absolute;\n      top: 0; left: 0; bottom: 0; right: 0;\n      text-align: center;\n    }\n</style>\n<div class='wrap'>\n  <div class='div'>test</div>\n</div>\n\">\n</iframe>\n\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>上述都需要<code>margin:auto</code>，这是利用了<code>margin</code>把元素在页面上的剩余位置用边距填满，为边距赋统一值<code>auto</code>，这样就可以使元素2边相等。<br>如果元素的<code>width:100%</code>，那么这个元素就相当于居中，如果<code>width</code>不等于100%，就可以用<code>margin</code>把剩下的位置填满, 因为<code>margin</code>也是盒子模型中的成员，所以它在盒子中占据空间和<code>width:100%</code>一样。</p>\n<h2 id=\"3-table-cell\"><a href=\"#3-table-cell\" class=\"headerlink\" title=\"3. table-cell\"></a>3. table-cell</h2><p>利用表格中<code>vertical-align: middle</code>可以垂直居中的特性，使用方便。不过这种方法的水平居中有局限性，内部元素不可以设置宽度</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">  &lt;title&gt;center&lt;&#x2F;title&gt;</span><br><span class=\"line\">  &lt;style type&#x3D;&quot;text&#x2F;css&quot;&gt;</span><br><span class=\"line\">  .wrap &#123;</span><br><span class=\"line\">    display: table-cell;</span><br><span class=\"line\">    vertical-align: middle;</span><br><span class=\"line\">    text-align: center;</span><br><span class=\"line\">    width: 100px;</span><br><span class=\"line\">    height: 100px;</span><br><span class=\"line\">    border: 1px solid red;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  .div &#123;</span><br><span class=\"line\">    border: 1px solid red;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &lt;&#x2F;style&gt;</span><br><span class=\"line\">&lt;&#x2F;head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">  &lt;div class&#x3D;&quot;wrap&quot;&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;div&quot;&gt;test&lt;&#x2F;div&gt;</span><br><span class=\"line\">  &lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br><span class=\"line\">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>\n<iframe width=\"100%\" height=\"150px\" srcdoc=\"\n<style type='text/css'>\n        .wrap {\n            display: table-cell;\n            vertical-align: middle;\n            text-align: center;\n      width: 100px;\n      height: 100px;\n      border: 1px solid red;\n        }\n    .div {\n      border: 1px solid red;\n    }\n</style>\n<div class='wrap'>\n  <div class='div'>test</div>\n</div>\n\">\n</iframe>\n\n<h2 id=\"4-绝对定位和负边距\"><a href=\"#4-绝对定位和负边距\" class=\"headerlink\" title=\"4. 绝对定位和负边距\"></a>4. 绝对定位和负边距</h2><p>这种方法本质上是使用计算解决偏离的问题，但只能用于居中元素确定宽度和高度。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">  &lt;title&gt;center&lt;&#x2F;title&gt;</span><br><span class=\"line\">  &lt;style type&#x3D;&quot;text&#x2F;css&quot;&gt;</span><br><span class=\"line\">    .div &#123;</span><br><span class=\"line\">      position: absolute;</span><br><span class=\"line\">      width:100px;</span><br><span class=\"line\">      height: 50px;</span><br><span class=\"line\">      top:50%;</span><br><span class=\"line\">      left:50%;</span><br><span class=\"line\">      margin-left:-50px;</span><br><span class=\"line\">      margin-top:-25px;</span><br><span class=\"line\">      text-align: center;</span><br><span class=\"line\">      border: 1px solid red;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &lt;&#x2F;style&gt;</span><br><span class=\"line\">&lt;&#x2F;head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">  &lt;div class&#x3D;&quot;wrap&quot;&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;div&quot;&gt;test&lt;&#x2F;div&gt;</span><br><span class=\"line\">  &lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br><span class=\"line\">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>\n<iframe width=\"100%\" height=\"150px\" srcdoc=\"\n<style type='text/css'>\n    .div {\n      position: absolute;\n      width:100px;\n      height: 50px;\n      top:50%;\n      left:50%;\n      margin-left:-50px;\n      margin-top:-25px;\n      text-align: center;\n      border: 1px solid red;\n    }\n</style>\n<div class='wrap'>\n  <div class='div'>test</div>\n</div>\n\">\n</iframe>\n\n<h2 id=\"5-css3-translate\"><a href=\"#5-css3-translate\" class=\"headerlink\" title=\"5. css3 translate\"></a>5. css3 translate</h2><p>原理和上一种方法一样，但是没有宽度的限制。不过与其他css3技术一样，可能需要解决兼容问题。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">  &lt;title&gt;center&lt;&#x2F;title&gt;</span><br><span class=\"line\">  &lt;style type&#x3D;&quot;text&#x2F;css&quot;&gt;</span><br><span class=\"line\">    .div &#123;</span><br><span class=\"line\">      position: absolute;</span><br><span class=\"line\">      top:50%;</span><br><span class=\"line\">      left:50%;</span><br><span class=\"line\">      width:100px;</span><br><span class=\"line\">      transform:translate(-50%,-50%);</span><br><span class=\"line\">      text-align: center;</span><br><span class=\"line\">      border: 1px solid red;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t&lt;&#x2F;style&gt;</span><br><span class=\"line\">&lt;&#x2F;head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">  &lt;div class&#x3D;&quot;wrap&quot;&gt;</span><br><span class=\"line\">  \t&lt;div class&#x3D;&quot;div&quot;&gt;test&lt;&#x2F;div&gt;</span><br><span class=\"line\">  &lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br><span class=\"line\">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>\n<iframe width=\"100%\" height=\"150px\" srcdoc=\"\n<style type='text/css'>\n    .div {\n      position: absolute;\n      top:50%;\n      left:50%;\n      width:100px;\n      transform:translate(-50%,-50%);\n      text-align: center;\n      border: 1px solid red;\n    }\n</style>\n<div class='wrap'>\n  <div class='div'>test</div>\n</div>\n\">\n</iframe>\n\n<h2 id=\"6-display-flex\"><a href=\"#6-display-flex\" class=\"headerlink\" title=\"6. display:flex\"></a>6. display:flex</h2><p>代码量最少的方法，不过父元素宽、高需要确定。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">\t&lt;title&gt;center&lt;&#x2F;title&gt;</span><br><span class=\"line\">\t&lt;style type&#x3D;&quot;text&#x2F;css&quot;&gt;</span><br><span class=\"line\">    .wrap &#123;</span><br><span class=\"line\">      height: 100px;</span><br><span class=\"line\">      width: 100px;</span><br><span class=\"line\">      border: 1px solid red;</span><br><span class=\"line\">      display: flex;</span><br><span class=\"line\">      justify-content:center;</span><br><span class=\"line\">      align-items:center;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .div &#123;</span><br><span class=\"line\">      border: 1px solid red;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t&lt;&#x2F;style&gt;</span><br><span class=\"line\">&lt;&#x2F;head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">  &lt;div class&#x3D;&quot;wrap&quot;&gt;</span><br><span class=\"line\">  \t&lt;div class&#x3D;&quot;div&quot;&gt;test&lt;&#x2F;div&gt;</span><br><span class=\"line\">  &lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br><span class=\"line\">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>\n<iframe width=\"100%\" height=\"150px\" srcdoc=\"\n<style type='text/css'>\n    .wrap {\n      height: 100px;\n      width: 100px;\n      border: 1px solid red;\n      display: flex;\n      justify-content:center;\n      align-items:center;\n    }\n    .div {\n      border: 1px solid red;\n    }\n</style>\n<div class='wrap'>\n  <div class='div'>test</div>\n</div>\n\">\n</iframe>\n\n<hr>\n<p>下面是一些不常见的方法，用于拓展</p>\n<hr>\n<h2 id=\"7-通过伪元素-after占位\"><a href=\"#7-通过伪元素-after占位\" class=\"headerlink\" title=\"7. 通过伪元素:after占位\"></a>7. 通过伪元素:after占位</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">  &lt;title&gt;center&lt;&#x2F;title&gt;</span><br><span class=\"line\">  &lt;style type&#x3D;&quot;text&#x2F;css&quot;&gt;</span><br><span class=\"line\">    .wrap &#123;</span><br><span class=\"line\">      text-align:center;</span><br><span class=\"line\">      font-size:0;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .wrap:after &#123;</span><br><span class=\"line\">      content:&#39;&#39;;</span><br><span class=\"line\">      width:0;</span><br><span class=\"line\">      height:100%;</span><br><span class=\"line\">      display:inline-block;</span><br><span class=\"line\">      vertical-align:middle;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .div &#123;</span><br><span class=\"line\">      vertical-align:middle;</span><br><span class=\"line\">      display:inline-block;</span><br><span class=\"line\">      font-size:16px;</span><br><span class=\"line\">      border: 1px solid red;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &lt;&#x2F;style&gt;</span><br><span class=\"line\">&lt;&#x2F;head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">  &lt;div class&#x3D;&quot;wrap&quot;&gt;</span><br><span class=\"line\">  \t&lt;div class&#x3D;&quot;div&quot;&gt;test&lt;&#x2F;div&gt;</span><br><span class=\"line\">  &lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br><span class=\"line\">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>\n<iframe width=\"100%\" height=\"150px\" srcdoc=\"\n<style type='text/css'>\n    .wrap {\n      text-align:center;\n      font-size:0;\n    }\n    .wrap:after {\n      content:'';\n      width:0;\n      height:100%;\n      display:inline-block;\n      vertical-align:middle;\n    }\n    .div {\n      vertical-align:middle;\n      display:inline-block;\n      font-size:16px;\n      border: 1px solid red;\n    }\n</style>\n<div class='wrap'>\n  <div class='div'>test</div>\n</div>\n\">\n</iframe>\n\n<h2 id=\"8-display-webkit-box\"><a href=\"#8-display-webkit-box\" class=\"headerlink\" title=\"8. display:-webkit-box\"></a>8. display:-webkit-box</h2><p>利用了css3的属性</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">  &lt;title&gt;center&lt;&#x2F;title&gt;</span><br><span class=\"line\">  &lt;style type&#x3D;&quot;text&#x2F;css&quot;&gt;</span><br><span class=\"line\">    .wrap &#123;</span><br><span class=\"line\">      display: -webkit-box;</span><br><span class=\"line\">      -webkit-box-pack:center;</span><br><span class=\"line\">      -webkit-box-align:center;</span><br><span class=\"line\">      -webkit-box-orient: vertical;</span><br><span class=\"line\">      text-align: center;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .div &#123;</span><br><span class=\"line\">      border: 1px solid red;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &lt;&#x2F;style&gt;</span><br><span class=\"line\">&lt;&#x2F;head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">  &lt;div class&#x3D;&quot;wrap&quot;&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;div&quot;&gt;test&lt;&#x2F;div&gt;</span><br><span class=\"line\">  &lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br><span class=\"line\">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>\n<iframe width=\"100%\" height=\"150px\" srcdoc=\"\n<style type='text/css'>\n    .wrap {\n      text-align:center;\n      font-size:0;\n    }\n    .wrap:after {\n      content:'';\n      width:0;\n      height:100%;\n      display:inline-block;\n      vertical-align:middle;\n    }\n    .div {\n      vertical-align:middle;\n      display:inline-block;\n      font-size:16px;\n      border: 1px solid red;\n    }\n</style>\n<div class='wrap'>\n  <div class='div'>test</div>\n</div>\n\">\n</iframe>\n","site":{"data":{}},"more":"<p>css中有很多不同的居中方法，适应不同的情况，下面简单介绍几种常见的：</p>\n<h2 id=\"1-文字居中-边距居中\"><a href=\"#1-文字居中-边距居中\" class=\"headerlink\" title=\"1. 文字居中,边距居中\"></a>1. 文字居中,边距居中</h2><p>这种居中方法一般使用较多。<code>text-align: center</code> 规定文字居中，<code>margin: 0 auto</code> 规定水平居中。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">  &lt;title&gt;center&lt;&#x2F;title&gt;</span><br><span class=\"line\">  &lt;style type&#x3D;&quot;text&#x2F;css&quot;&gt;</span><br><span class=\"line\">    .wrap &#123;</span><br><span class=\"line\">      text-align: center;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .div &#123;</span><br><span class=\"line\">      margin: 0 auto;</span><br><span class=\"line\">      border: 1px solid red;</span><br><span class=\"line\">      width: 200px;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &lt;&#x2F;style&gt;</span><br><span class=\"line\">&lt;&#x2F;head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div class&#x3D;&quot;wrap&quot;&gt;</span><br><span class=\"line\">  &lt;div class&#x3D;&quot;div&quot;&gt;test&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br><span class=\"line\">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>\n<iframe width=\"100%\" height=\"100px\" srcdoc=\"\n<style type='text/css'>\n  .wrap { text-align: center; }\n  .div { margin: 0 auto; border: 1px solid red; width: 200px; }\n</style>\n<div class='wrap'>\n  <div class='div'>test</div>\n</div>\n\">\n</iframe>\n\n\n<h2 id=\"2-绝对定位居中\"><a href=\"#2-绝对定位居中\" class=\"headerlink\" title=\"2. 绝对定位居中\"></a>2. 绝对定位居中</h2><p>用于没有父元素包裹，需要居中的元素是绝对定位。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">  &lt;title&gt;center&lt;&#x2F;title&gt;</span><br><span class=\"line\">  &lt;style type&#x3D;&quot;text&#x2F;css&quot;&gt;</span><br><span class=\"line\">    .wrap .div&#123;</span><br><span class=\"line\">      width: 10%; </span><br><span class=\"line\">      height: 60%; </span><br><span class=\"line\">      border: 1px solid red;</span><br><span class=\"line\">      margin: auto; </span><br><span class=\"line\">      position: absolute;</span><br><span class=\"line\">      top: 0; left: 0; bottom: 0; right: 0;</span><br><span class=\"line\">      text-align: center;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &lt;&#x2F;style&gt;</span><br><span class=\"line\">&lt;&#x2F;head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div class&#x3D;&quot;wrap&quot;&gt;</span><br><span class=\"line\">  &lt;div class&#x3D;&quot;div&quot;&gt;test&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br><span class=\"line\">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>\n<iframe width=\"100%\" height=\"100px\" srcdoc=\"\n<style type='text/css'>\n    .wrap .div{\n      width: 10%; \n      height: 60%; \n      border: 1px solid red;\n      margin: auto; \n      position: absolute;\n      top: 0; left: 0; bottom: 0; right: 0;\n      text-align: center;\n    }\n</style>\n<div class='wrap'>\n  <div class='div'>test</div>\n</div>\n\">\n</iframe>\n\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>上述都需要<code>margin:auto</code>，这是利用了<code>margin</code>把元素在页面上的剩余位置用边距填满，为边距赋统一值<code>auto</code>，这样就可以使元素2边相等。<br>如果元素的<code>width:100%</code>，那么这个元素就相当于居中，如果<code>width</code>不等于100%，就可以用<code>margin</code>把剩下的位置填满, 因为<code>margin</code>也是盒子模型中的成员，所以它在盒子中占据空间和<code>width:100%</code>一样。</p>\n<h2 id=\"3-table-cell\"><a href=\"#3-table-cell\" class=\"headerlink\" title=\"3. table-cell\"></a>3. table-cell</h2><p>利用表格中<code>vertical-align: middle</code>可以垂直居中的特性，使用方便。不过这种方法的水平居中有局限性，内部元素不可以设置宽度</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">  &lt;title&gt;center&lt;&#x2F;title&gt;</span><br><span class=\"line\">  &lt;style type&#x3D;&quot;text&#x2F;css&quot;&gt;</span><br><span class=\"line\">  .wrap &#123;</span><br><span class=\"line\">    display: table-cell;</span><br><span class=\"line\">    vertical-align: middle;</span><br><span class=\"line\">    text-align: center;</span><br><span class=\"line\">    width: 100px;</span><br><span class=\"line\">    height: 100px;</span><br><span class=\"line\">    border: 1px solid red;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  .div &#123;</span><br><span class=\"line\">    border: 1px solid red;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &lt;&#x2F;style&gt;</span><br><span class=\"line\">&lt;&#x2F;head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">  &lt;div class&#x3D;&quot;wrap&quot;&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;div&quot;&gt;test&lt;&#x2F;div&gt;</span><br><span class=\"line\">  &lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br><span class=\"line\">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>\n<iframe width=\"100%\" height=\"150px\" srcdoc=\"\n<style type='text/css'>\n        .wrap {\n            display: table-cell;\n            vertical-align: middle;\n            text-align: center;\n      width: 100px;\n      height: 100px;\n      border: 1px solid red;\n        }\n    .div {\n      border: 1px solid red;\n    }\n</style>\n<div class='wrap'>\n  <div class='div'>test</div>\n</div>\n\">\n</iframe>\n\n<h2 id=\"4-绝对定位和负边距\"><a href=\"#4-绝对定位和负边距\" class=\"headerlink\" title=\"4. 绝对定位和负边距\"></a>4. 绝对定位和负边距</h2><p>这种方法本质上是使用计算解决偏离的问题，但只能用于居中元素确定宽度和高度。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">  &lt;title&gt;center&lt;&#x2F;title&gt;</span><br><span class=\"line\">  &lt;style type&#x3D;&quot;text&#x2F;css&quot;&gt;</span><br><span class=\"line\">    .div &#123;</span><br><span class=\"line\">      position: absolute;</span><br><span class=\"line\">      width:100px;</span><br><span class=\"line\">      height: 50px;</span><br><span class=\"line\">      top:50%;</span><br><span class=\"line\">      left:50%;</span><br><span class=\"line\">      margin-left:-50px;</span><br><span class=\"line\">      margin-top:-25px;</span><br><span class=\"line\">      text-align: center;</span><br><span class=\"line\">      border: 1px solid red;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &lt;&#x2F;style&gt;</span><br><span class=\"line\">&lt;&#x2F;head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">  &lt;div class&#x3D;&quot;wrap&quot;&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;div&quot;&gt;test&lt;&#x2F;div&gt;</span><br><span class=\"line\">  &lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br><span class=\"line\">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>\n<iframe width=\"100%\" height=\"150px\" srcdoc=\"\n<style type='text/css'>\n    .div {\n      position: absolute;\n      width:100px;\n      height: 50px;\n      top:50%;\n      left:50%;\n      margin-left:-50px;\n      margin-top:-25px;\n      text-align: center;\n      border: 1px solid red;\n    }\n</style>\n<div class='wrap'>\n  <div class='div'>test</div>\n</div>\n\">\n</iframe>\n\n<h2 id=\"5-css3-translate\"><a href=\"#5-css3-translate\" class=\"headerlink\" title=\"5. css3 translate\"></a>5. css3 translate</h2><p>原理和上一种方法一样，但是没有宽度的限制。不过与其他css3技术一样，可能需要解决兼容问题。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">  &lt;title&gt;center&lt;&#x2F;title&gt;</span><br><span class=\"line\">  &lt;style type&#x3D;&quot;text&#x2F;css&quot;&gt;</span><br><span class=\"line\">    .div &#123;</span><br><span class=\"line\">      position: absolute;</span><br><span class=\"line\">      top:50%;</span><br><span class=\"line\">      left:50%;</span><br><span class=\"line\">      width:100px;</span><br><span class=\"line\">      transform:translate(-50%,-50%);</span><br><span class=\"line\">      text-align: center;</span><br><span class=\"line\">      border: 1px solid red;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t&lt;&#x2F;style&gt;</span><br><span class=\"line\">&lt;&#x2F;head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">  &lt;div class&#x3D;&quot;wrap&quot;&gt;</span><br><span class=\"line\">  \t&lt;div class&#x3D;&quot;div&quot;&gt;test&lt;&#x2F;div&gt;</span><br><span class=\"line\">  &lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br><span class=\"line\">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>\n<iframe width=\"100%\" height=\"150px\" srcdoc=\"\n<style type='text/css'>\n    .div {\n      position: absolute;\n      top:50%;\n      left:50%;\n      width:100px;\n      transform:translate(-50%,-50%);\n      text-align: center;\n      border: 1px solid red;\n    }\n</style>\n<div class='wrap'>\n  <div class='div'>test</div>\n</div>\n\">\n</iframe>\n\n<h2 id=\"6-display-flex\"><a href=\"#6-display-flex\" class=\"headerlink\" title=\"6. display:flex\"></a>6. display:flex</h2><p>代码量最少的方法，不过父元素宽、高需要确定。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">\t&lt;title&gt;center&lt;&#x2F;title&gt;</span><br><span class=\"line\">\t&lt;style type&#x3D;&quot;text&#x2F;css&quot;&gt;</span><br><span class=\"line\">    .wrap &#123;</span><br><span class=\"line\">      height: 100px;</span><br><span class=\"line\">      width: 100px;</span><br><span class=\"line\">      border: 1px solid red;</span><br><span class=\"line\">      display: flex;</span><br><span class=\"line\">      justify-content:center;</span><br><span class=\"line\">      align-items:center;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .div &#123;</span><br><span class=\"line\">      border: 1px solid red;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t&lt;&#x2F;style&gt;</span><br><span class=\"line\">&lt;&#x2F;head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">  &lt;div class&#x3D;&quot;wrap&quot;&gt;</span><br><span class=\"line\">  \t&lt;div class&#x3D;&quot;div&quot;&gt;test&lt;&#x2F;div&gt;</span><br><span class=\"line\">  &lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br><span class=\"line\">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>\n<iframe width=\"100%\" height=\"150px\" srcdoc=\"\n<style type='text/css'>\n    .wrap {\n      height: 100px;\n      width: 100px;\n      border: 1px solid red;\n      display: flex;\n      justify-content:center;\n      align-items:center;\n    }\n    .div {\n      border: 1px solid red;\n    }\n</style>\n<div class='wrap'>\n  <div class='div'>test</div>\n</div>\n\">\n</iframe>\n\n<hr>\n<p>下面是一些不常见的方法，用于拓展</p>\n<hr>\n<h2 id=\"7-通过伪元素-after占位\"><a href=\"#7-通过伪元素-after占位\" class=\"headerlink\" title=\"7. 通过伪元素:after占位\"></a>7. 通过伪元素:after占位</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">  &lt;title&gt;center&lt;&#x2F;title&gt;</span><br><span class=\"line\">  &lt;style type&#x3D;&quot;text&#x2F;css&quot;&gt;</span><br><span class=\"line\">    .wrap &#123;</span><br><span class=\"line\">      text-align:center;</span><br><span class=\"line\">      font-size:0;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .wrap:after &#123;</span><br><span class=\"line\">      content:&#39;&#39;;</span><br><span class=\"line\">      width:0;</span><br><span class=\"line\">      height:100%;</span><br><span class=\"line\">      display:inline-block;</span><br><span class=\"line\">      vertical-align:middle;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .div &#123;</span><br><span class=\"line\">      vertical-align:middle;</span><br><span class=\"line\">      display:inline-block;</span><br><span class=\"line\">      font-size:16px;</span><br><span class=\"line\">      border: 1px solid red;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &lt;&#x2F;style&gt;</span><br><span class=\"line\">&lt;&#x2F;head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">  &lt;div class&#x3D;&quot;wrap&quot;&gt;</span><br><span class=\"line\">  \t&lt;div class&#x3D;&quot;div&quot;&gt;test&lt;&#x2F;div&gt;</span><br><span class=\"line\">  &lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br><span class=\"line\">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>\n<iframe width=\"100%\" height=\"150px\" srcdoc=\"\n<style type='text/css'>\n    .wrap {\n      text-align:center;\n      font-size:0;\n    }\n    .wrap:after {\n      content:'';\n      width:0;\n      height:100%;\n      display:inline-block;\n      vertical-align:middle;\n    }\n    .div {\n      vertical-align:middle;\n      display:inline-block;\n      font-size:16px;\n      border: 1px solid red;\n    }\n</style>\n<div class='wrap'>\n  <div class='div'>test</div>\n</div>\n\">\n</iframe>\n\n<h2 id=\"8-display-webkit-box\"><a href=\"#8-display-webkit-box\" class=\"headerlink\" title=\"8. display:-webkit-box\"></a>8. display:-webkit-box</h2><p>利用了css3的属性</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">  &lt;title&gt;center&lt;&#x2F;title&gt;</span><br><span class=\"line\">  &lt;style type&#x3D;&quot;text&#x2F;css&quot;&gt;</span><br><span class=\"line\">    .wrap &#123;</span><br><span class=\"line\">      display: -webkit-box;</span><br><span class=\"line\">      -webkit-box-pack:center;</span><br><span class=\"line\">      -webkit-box-align:center;</span><br><span class=\"line\">      -webkit-box-orient: vertical;</span><br><span class=\"line\">      text-align: center;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .div &#123;</span><br><span class=\"line\">      border: 1px solid red;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &lt;&#x2F;style&gt;</span><br><span class=\"line\">&lt;&#x2F;head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">  &lt;div class&#x3D;&quot;wrap&quot;&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;div&quot;&gt;test&lt;&#x2F;div&gt;</span><br><span class=\"line\">  &lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br><span class=\"line\">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>\n<iframe width=\"100%\" height=\"150px\" srcdoc=\"\n<style type='text/css'>\n    .wrap {\n      text-align:center;\n      font-size:0;\n    }\n    .wrap:after {\n      content:'';\n      width:0;\n      height:100%;\n      display:inline-block;\n      vertical-align:middle;\n    }\n    .div {\n      vertical-align:middle;\n      display:inline-block;\n      font-size:16px;\n      border: 1px solid red;\n    }\n</style>\n<div class='wrap'>\n  <div class='div'>test</div>\n</div>\n\">\n</iframe>\n"},{"layout":"post","title":"flex布局","date":"2019-05-26T16:00:00.000Z","excerpt":"简单介绍flex布局的各种属性","comments":1,"_content":"\n## flex布局是什么\nFlex是Flexible Box的缩写，意为”弹性布局”，用来为盒状模型提供最大的灵活性。\n\n任何一个容器都可以指定为Flex布局。\n\n```\n//块元素\n.box{\n  display: flex;\n}\n\n//行内元素\n.box{\n  display: inline-flex;\n}\n\n//webkit内核浏览器(chrome, safari)\n.box{\n  display: -webkit-flex; /* Safari */\n  display: flex;\n}\n```\n\n## 容器的属性\n* flex-direction\n* flex-wrap\n* flex-flow\n* justify-content\n* align-items\n* align-content\n\n### 1、flex-direction属性\nflex-direction属性决定主轴的方向（即项目的排列方向）。\n```\nrow（默认值）：主轴为水平方向，起点在左端。\nrow-reverse：主轴为水平方向，起点在右端。\ncolumn：主轴为垂直方向，起点在上沿。\ncolumn-reverse：主轴为垂直方向，起点在下沿。\n```\n### 2、flex-wrap属性\n默认情况下，项目都排在一条线（又称”轴线”）上。flex-wrap属性定义，如果一条轴线排不下，如何换行。\n```\nnowrap（默认）：不换行。\nwrap：换行，第一行在上方。\nwrap-reverse：换行，第一行在下方。\n```\n### 3、flex-flow\nflex-flow属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap。\n```\n.box {\n  flex-flow: <flex-direction> <flex-wrap>;\n}\n```\n### 4、justify-content属性\njustify-content属性定义了项目在主轴上的对齐方式。\n```\nflex-start（默认值）：左对齐\nflex-end：右对齐\ncenter： 居中\nspace-between：两端对齐，项目之间的间隔都相等。\nspace-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。\n```\n### 5、align-items属性\nalign-items属性定义项目在交叉轴上如何对齐。\n```\nflex-start：交叉轴的起点对齐。\nflex-end：交叉轴的终点对齐。\ncenter：交叉轴的中点对齐。\nbaseline: 项目的第一行文字的基线对齐。\nstretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。\n```\n### 6、align-content属性\nalign-content属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。\n```\nflex-start：与交叉轴的起点对齐。\nflex-end：与交叉轴的终点对齐。\ncenter：与交叉轴的中点对齐。\nspace-between：与交叉轴两端对齐，轴线之间的间隔平均分布。\nspace-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。\nstretch（默认值）：轴线占满整个交叉轴。\n```\n## 项目的属性\n以下6个属性设置在项目上。\n* order\n* flex-grow\n* flex-shrink\n* flex-basis\n* flex\n* align-self\n### 1、order属性\norder属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。\n### 2、flex-grow属性\nflex-grow属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。  \n如果所有项目的flex-grow属性都为1，则它们将等分剩余空间（如果有的话）。如果一个项目的flex-grow属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。\n### 3、flex-shrink属性\nflex-shrink属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。  \n如果所有项目的flex-shrink属性都为1，当空间不足时，都将等比例缩小。如果一个项目的flex-shrink属性为0，其他项目都为1，则空间不足时，前者不缩小。  \n负值对该属性无效。\n### 4、flex-basis属性\nflex-basis属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小。  \n它可以设为跟width或height属性一样的值（比如350px），则项目将占据固定空间。\n### 5、flex属性\nflex属性是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选。\n```\n.item {\n  flex: none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]\n}\n```\n该属性有两个快捷值：auto (1 1 auto) 和 none (0 0 auto)。  \n建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。\n### 6、align-self属性\nalign-self属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。\n```\n.item {\n  align-self: auto | flex-start | flex-end | center | baseline | stretch;\n}\n```\n该属性可能取6个值，除了auto，其他都与align-items属性完全一致。\n## 参考\n[阮一峰教程](http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html)","source":"_posts/2019-05-27-flex布局.md","raw":"---\nlayout: post\ntitle: \"flex布局\"\ndate: 2019-05-27\nexcerpt: \"简单介绍flex布局的各种属性\"\ntags: [css]\ncomments: true\n---\n\n## flex布局是什么\nFlex是Flexible Box的缩写，意为”弹性布局”，用来为盒状模型提供最大的灵活性。\n\n任何一个容器都可以指定为Flex布局。\n\n```\n//块元素\n.box{\n  display: flex;\n}\n\n//行内元素\n.box{\n  display: inline-flex;\n}\n\n//webkit内核浏览器(chrome, safari)\n.box{\n  display: -webkit-flex; /* Safari */\n  display: flex;\n}\n```\n\n## 容器的属性\n* flex-direction\n* flex-wrap\n* flex-flow\n* justify-content\n* align-items\n* align-content\n\n### 1、flex-direction属性\nflex-direction属性决定主轴的方向（即项目的排列方向）。\n```\nrow（默认值）：主轴为水平方向，起点在左端。\nrow-reverse：主轴为水平方向，起点在右端。\ncolumn：主轴为垂直方向，起点在上沿。\ncolumn-reverse：主轴为垂直方向，起点在下沿。\n```\n### 2、flex-wrap属性\n默认情况下，项目都排在一条线（又称”轴线”）上。flex-wrap属性定义，如果一条轴线排不下，如何换行。\n```\nnowrap（默认）：不换行。\nwrap：换行，第一行在上方。\nwrap-reverse：换行，第一行在下方。\n```\n### 3、flex-flow\nflex-flow属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap。\n```\n.box {\n  flex-flow: <flex-direction> <flex-wrap>;\n}\n```\n### 4、justify-content属性\njustify-content属性定义了项目在主轴上的对齐方式。\n```\nflex-start（默认值）：左对齐\nflex-end：右对齐\ncenter： 居中\nspace-between：两端对齐，项目之间的间隔都相等。\nspace-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。\n```\n### 5、align-items属性\nalign-items属性定义项目在交叉轴上如何对齐。\n```\nflex-start：交叉轴的起点对齐。\nflex-end：交叉轴的终点对齐。\ncenter：交叉轴的中点对齐。\nbaseline: 项目的第一行文字的基线对齐。\nstretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。\n```\n### 6、align-content属性\nalign-content属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。\n```\nflex-start：与交叉轴的起点对齐。\nflex-end：与交叉轴的终点对齐。\ncenter：与交叉轴的中点对齐。\nspace-between：与交叉轴两端对齐，轴线之间的间隔平均分布。\nspace-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。\nstretch（默认值）：轴线占满整个交叉轴。\n```\n## 项目的属性\n以下6个属性设置在项目上。\n* order\n* flex-grow\n* flex-shrink\n* flex-basis\n* flex\n* align-self\n### 1、order属性\norder属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。\n### 2、flex-grow属性\nflex-grow属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。  \n如果所有项目的flex-grow属性都为1，则它们将等分剩余空间（如果有的话）。如果一个项目的flex-grow属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。\n### 3、flex-shrink属性\nflex-shrink属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。  \n如果所有项目的flex-shrink属性都为1，当空间不足时，都将等比例缩小。如果一个项目的flex-shrink属性为0，其他项目都为1，则空间不足时，前者不缩小。  \n负值对该属性无效。\n### 4、flex-basis属性\nflex-basis属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小。  \n它可以设为跟width或height属性一样的值（比如350px），则项目将占据固定空间。\n### 5、flex属性\nflex属性是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选。\n```\n.item {\n  flex: none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]\n}\n```\n该属性有两个快捷值：auto (1 1 auto) 和 none (0 0 auto)。  \n建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。\n### 6、align-self属性\nalign-self属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。\n```\n.item {\n  align-self: auto | flex-start | flex-end | center | baseline | stretch;\n}\n```\n该属性可能取6个值，除了auto，其他都与align-items属性完全一致。\n## 参考\n[阮一峰教程](http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html)","slug":"2019-05-27-flex布局","published":1,"updated":"2020-10-05T03:06:43.194Z","photos":[],"link":"","_id":"ckgkk27ss000ikcv0fay4etey","content":"<h2 id=\"flex布局是什么\"><a href=\"#flex布局是什么\" class=\"headerlink\" title=\"flex布局是什么\"></a>flex布局是什么</h2><p>Flex是Flexible Box的缩写，意为”弹性布局”，用来为盒状模型提供最大的灵活性。</p>\n<p>任何一个容器都可以指定为Flex布局。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;块元素</span><br><span class=\"line\">.box&#123;</span><br><span class=\"line\">  display: flex;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;行内元素</span><br><span class=\"line\">.box&#123;</span><br><span class=\"line\">  display: inline-flex;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;webkit内核浏览器(chrome, safari)</span><br><span class=\"line\">.box&#123;</span><br><span class=\"line\">  display: -webkit-flex; &#x2F;* Safari *&#x2F;</span><br><span class=\"line\">  display: flex;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"容器的属性\"><a href=\"#容器的属性\" class=\"headerlink\" title=\"容器的属性\"></a>容器的属性</h2><ul>\n<li>flex-direction</li>\n<li>flex-wrap</li>\n<li>flex-flow</li>\n<li>justify-content</li>\n<li>align-items</li>\n<li>align-content</li>\n</ul>\n<h3 id=\"1、flex-direction属性\"><a href=\"#1、flex-direction属性\" class=\"headerlink\" title=\"1、flex-direction属性\"></a>1、flex-direction属性</h3><p>flex-direction属性决定主轴的方向（即项目的排列方向）。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">row（默认值）：主轴为水平方向，起点在左端。</span><br><span class=\"line\">row-reverse：主轴为水平方向，起点在右端。</span><br><span class=\"line\">column：主轴为垂直方向，起点在上沿。</span><br><span class=\"line\">column-reverse：主轴为垂直方向，起点在下沿。</span><br></pre></td></tr></table></figure>\n<h3 id=\"2、flex-wrap属性\"><a href=\"#2、flex-wrap属性\" class=\"headerlink\" title=\"2、flex-wrap属性\"></a>2、flex-wrap属性</h3><p>默认情况下，项目都排在一条线（又称”轴线”）上。flex-wrap属性定义，如果一条轴线排不下，如何换行。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nowrap（默认）：不换行。</span><br><span class=\"line\">wrap：换行，第一行在上方。</span><br><span class=\"line\">wrap-reverse：换行，第一行在下方。</span><br></pre></td></tr></table></figure>\n<h3 id=\"3、flex-flow\"><a href=\"#3、flex-flow\" class=\"headerlink\" title=\"3、flex-flow\"></a>3、flex-flow</h3><p>flex-flow属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.box &#123;</span><br><span class=\"line\">  flex-flow: &lt;flex-direction&gt; &lt;flex-wrap&gt;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4、justify-content属性\"><a href=\"#4、justify-content属性\" class=\"headerlink\" title=\"4、justify-content属性\"></a>4、justify-content属性</h3><p>justify-content属性定义了项目在主轴上的对齐方式。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flex-start（默认值）：左对齐</span><br><span class=\"line\">flex-end：右对齐</span><br><span class=\"line\">center： 居中</span><br><span class=\"line\">space-between：两端对齐，项目之间的间隔都相等。</span><br><span class=\"line\">space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。</span><br></pre></td></tr></table></figure>\n<h3 id=\"5、align-items属性\"><a href=\"#5、align-items属性\" class=\"headerlink\" title=\"5、align-items属性\"></a>5、align-items属性</h3><p>align-items属性定义项目在交叉轴上如何对齐。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flex-start：交叉轴的起点对齐。</span><br><span class=\"line\">flex-end：交叉轴的终点对齐。</span><br><span class=\"line\">center：交叉轴的中点对齐。</span><br><span class=\"line\">baseline: 项目的第一行文字的基线对齐。</span><br><span class=\"line\">stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。</span><br></pre></td></tr></table></figure>\n<h3 id=\"6、align-content属性\"><a href=\"#6、align-content属性\" class=\"headerlink\" title=\"6、align-content属性\"></a>6、align-content属性</h3><p>align-content属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flex-start：与交叉轴的起点对齐。</span><br><span class=\"line\">flex-end：与交叉轴的终点对齐。</span><br><span class=\"line\">center：与交叉轴的中点对齐。</span><br><span class=\"line\">space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。</span><br><span class=\"line\">space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。</span><br><span class=\"line\">stretch（默认值）：轴线占满整个交叉轴。</span><br></pre></td></tr></table></figure>\n<h2 id=\"项目的属性\"><a href=\"#项目的属性\" class=\"headerlink\" title=\"项目的属性\"></a>项目的属性</h2><p>以下6个属性设置在项目上。</p>\n<ul>\n<li>order</li>\n<li>flex-grow</li>\n<li>flex-shrink</li>\n<li>flex-basis</li>\n<li>flex</li>\n<li>align-self<h3 id=\"1、order属性\"><a href=\"#1、order属性\" class=\"headerlink\" title=\"1、order属性\"></a>1、order属性</h3>order属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。<h3 id=\"2、flex-grow属性\"><a href=\"#2、flex-grow属性\" class=\"headerlink\" title=\"2、flex-grow属性\"></a>2、flex-grow属性</h3>flex-grow属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。<br>如果所有项目的flex-grow属性都为1，则它们将等分剩余空间（如果有的话）。如果一个项目的flex-grow属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。<h3 id=\"3、flex-shrink属性\"><a href=\"#3、flex-shrink属性\" class=\"headerlink\" title=\"3、flex-shrink属性\"></a>3、flex-shrink属性</h3>flex-shrink属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。<br>如果所有项目的flex-shrink属性都为1，当空间不足时，都将等比例缩小。如果一个项目的flex-shrink属性为0，其他项目都为1，则空间不足时，前者不缩小。<br>负值对该属性无效。<h3 id=\"4、flex-basis属性\"><a href=\"#4、flex-basis属性\" class=\"headerlink\" title=\"4、flex-basis属性\"></a>4、flex-basis属性</h3>flex-basis属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小。<br>它可以设为跟width或height属性一样的值（比如350px），则项目将占据固定空间。<h3 id=\"5、flex属性\"><a href=\"#5、flex属性\" class=\"headerlink\" title=\"5、flex属性\"></a>5、flex属性</h3>flex属性是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选。<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.item &#123;</span><br><span class=\"line\">  flex: none | [ &lt;&#39;flex-grow&#39;&gt; &lt;&#39;flex-shrink&#39;&gt;? || &lt;&#39;flex-basis&#39;&gt; ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n该属性有两个快捷值：auto (1 1 auto) 和 none (0 0 auto)。<br>建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。<h3 id=\"6、align-self属性\"><a href=\"#6、align-self属性\" class=\"headerlink\" title=\"6、align-self属性\"></a>6、align-self属性</h3>align-self属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.item &#123;</span><br><span class=\"line\">  align-self: auto | flex-start | flex-end | center | baseline | stretch;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n该属性可能取6个值，除了auto，其他都与align-items属性完全一致。<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><a href=\"http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html\">阮一峰教程</a></li>\n</ul>\n","site":{"data":{}},"more":"<h2 id=\"flex布局是什么\"><a href=\"#flex布局是什么\" class=\"headerlink\" title=\"flex布局是什么\"></a>flex布局是什么</h2><p>Flex是Flexible Box的缩写，意为”弹性布局”，用来为盒状模型提供最大的灵活性。</p>\n<p>任何一个容器都可以指定为Flex布局。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;块元素</span><br><span class=\"line\">.box&#123;</span><br><span class=\"line\">  display: flex;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;行内元素</span><br><span class=\"line\">.box&#123;</span><br><span class=\"line\">  display: inline-flex;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;webkit内核浏览器(chrome, safari)</span><br><span class=\"line\">.box&#123;</span><br><span class=\"line\">  display: -webkit-flex; &#x2F;* Safari *&#x2F;</span><br><span class=\"line\">  display: flex;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"容器的属性\"><a href=\"#容器的属性\" class=\"headerlink\" title=\"容器的属性\"></a>容器的属性</h2><ul>\n<li>flex-direction</li>\n<li>flex-wrap</li>\n<li>flex-flow</li>\n<li>justify-content</li>\n<li>align-items</li>\n<li>align-content</li>\n</ul>\n<h3 id=\"1、flex-direction属性\"><a href=\"#1、flex-direction属性\" class=\"headerlink\" title=\"1、flex-direction属性\"></a>1、flex-direction属性</h3><p>flex-direction属性决定主轴的方向（即项目的排列方向）。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">row（默认值）：主轴为水平方向，起点在左端。</span><br><span class=\"line\">row-reverse：主轴为水平方向，起点在右端。</span><br><span class=\"line\">column：主轴为垂直方向，起点在上沿。</span><br><span class=\"line\">column-reverse：主轴为垂直方向，起点在下沿。</span><br></pre></td></tr></table></figure>\n<h3 id=\"2、flex-wrap属性\"><a href=\"#2、flex-wrap属性\" class=\"headerlink\" title=\"2、flex-wrap属性\"></a>2、flex-wrap属性</h3><p>默认情况下，项目都排在一条线（又称”轴线”）上。flex-wrap属性定义，如果一条轴线排不下，如何换行。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nowrap（默认）：不换行。</span><br><span class=\"line\">wrap：换行，第一行在上方。</span><br><span class=\"line\">wrap-reverse：换行，第一行在下方。</span><br></pre></td></tr></table></figure>\n<h3 id=\"3、flex-flow\"><a href=\"#3、flex-flow\" class=\"headerlink\" title=\"3、flex-flow\"></a>3、flex-flow</h3><p>flex-flow属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.box &#123;</span><br><span class=\"line\">  flex-flow: &lt;flex-direction&gt; &lt;flex-wrap&gt;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4、justify-content属性\"><a href=\"#4、justify-content属性\" class=\"headerlink\" title=\"4、justify-content属性\"></a>4、justify-content属性</h3><p>justify-content属性定义了项目在主轴上的对齐方式。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flex-start（默认值）：左对齐</span><br><span class=\"line\">flex-end：右对齐</span><br><span class=\"line\">center： 居中</span><br><span class=\"line\">space-between：两端对齐，项目之间的间隔都相等。</span><br><span class=\"line\">space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。</span><br></pre></td></tr></table></figure>\n<h3 id=\"5、align-items属性\"><a href=\"#5、align-items属性\" class=\"headerlink\" title=\"5、align-items属性\"></a>5、align-items属性</h3><p>align-items属性定义项目在交叉轴上如何对齐。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flex-start：交叉轴的起点对齐。</span><br><span class=\"line\">flex-end：交叉轴的终点对齐。</span><br><span class=\"line\">center：交叉轴的中点对齐。</span><br><span class=\"line\">baseline: 项目的第一行文字的基线对齐。</span><br><span class=\"line\">stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。</span><br></pre></td></tr></table></figure>\n<h3 id=\"6、align-content属性\"><a href=\"#6、align-content属性\" class=\"headerlink\" title=\"6、align-content属性\"></a>6、align-content属性</h3><p>align-content属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flex-start：与交叉轴的起点对齐。</span><br><span class=\"line\">flex-end：与交叉轴的终点对齐。</span><br><span class=\"line\">center：与交叉轴的中点对齐。</span><br><span class=\"line\">space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。</span><br><span class=\"line\">space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。</span><br><span class=\"line\">stretch（默认值）：轴线占满整个交叉轴。</span><br></pre></td></tr></table></figure>\n<h2 id=\"项目的属性\"><a href=\"#项目的属性\" class=\"headerlink\" title=\"项目的属性\"></a>项目的属性</h2><p>以下6个属性设置在项目上。</p>\n<ul>\n<li>order</li>\n<li>flex-grow</li>\n<li>flex-shrink</li>\n<li>flex-basis</li>\n<li>flex</li>\n<li>align-self<h3 id=\"1、order属性\"><a href=\"#1、order属性\" class=\"headerlink\" title=\"1、order属性\"></a>1、order属性</h3>order属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。<h3 id=\"2、flex-grow属性\"><a href=\"#2、flex-grow属性\" class=\"headerlink\" title=\"2、flex-grow属性\"></a>2、flex-grow属性</h3>flex-grow属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。<br>如果所有项目的flex-grow属性都为1，则它们将等分剩余空间（如果有的话）。如果一个项目的flex-grow属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。<h3 id=\"3、flex-shrink属性\"><a href=\"#3、flex-shrink属性\" class=\"headerlink\" title=\"3、flex-shrink属性\"></a>3、flex-shrink属性</h3>flex-shrink属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。<br>如果所有项目的flex-shrink属性都为1，当空间不足时，都将等比例缩小。如果一个项目的flex-shrink属性为0，其他项目都为1，则空间不足时，前者不缩小。<br>负值对该属性无效。<h3 id=\"4、flex-basis属性\"><a href=\"#4、flex-basis属性\" class=\"headerlink\" title=\"4、flex-basis属性\"></a>4、flex-basis属性</h3>flex-basis属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小。<br>它可以设为跟width或height属性一样的值（比如350px），则项目将占据固定空间。<h3 id=\"5、flex属性\"><a href=\"#5、flex属性\" class=\"headerlink\" title=\"5、flex属性\"></a>5、flex属性</h3>flex属性是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选。<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.item &#123;</span><br><span class=\"line\">  flex: none | [ &lt;&#39;flex-grow&#39;&gt; &lt;&#39;flex-shrink&#39;&gt;? || &lt;&#39;flex-basis&#39;&gt; ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n该属性有两个快捷值：auto (1 1 auto) 和 none (0 0 auto)。<br>建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。<h3 id=\"6、align-self属性\"><a href=\"#6、align-self属性\" class=\"headerlink\" title=\"6、align-self属性\"></a>6、align-self属性</h3>align-self属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.item &#123;</span><br><span class=\"line\">  align-self: auto | flex-start | flex-end | center | baseline | stretch;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n该属性可能取6个值，除了auto，其他都与align-items属性完全一致。<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><a href=\"http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html\">阮一峰教程</a></li>\n</ul>\n"},{"layout":"projects","title":"网站推荐","date":"2019-07-11T16:00:00.000Z","excerpt":"相关教程及Api检索","comments":1,"_content":"\n## [Chart.js](https://www.chartjs.org/docs/latest/)\n\n## [css小图标大全](https://fontawesome.com/v4.7.0/)\n\n## [精美图片](http://pic.netbian.com/)\n\nto be contined...","source":"_posts/2019-07-12-网站推荐.md","raw":"---\nlayout: projects\ntitle: \"网站推荐\"\ndate: 2019-07-12\nexcerpt: \"相关教程及Api检索\"\ntags: [projects]\ncomments: true\n---\n\n## [Chart.js](https://www.chartjs.org/docs/latest/)\n\n## [css小图标大全](https://fontawesome.com/v4.7.0/)\n\n## [精美图片](http://pic.netbian.com/)\n\nto be contined...","slug":"2019-07-12-网站推荐","published":1,"updated":"2020-10-09T02:42:43.451Z","photos":[],"link":"","_id":"ckgkk27sv000kkcv01e5a0s26","content":"<h2 id=\"Chart-js\"><a href=\"#Chart-js\" class=\"headerlink\" title=\"Chart.js\"></a><a href=\"https://www.chartjs.org/docs/latest/\">Chart.js</a></h2><h2 id=\"css小图标大全\"><a href=\"#css小图标大全\" class=\"headerlink\" title=\"css小图标大全\"></a><a href=\"https://fontawesome.com/v4.7.0/\">css小图标大全</a></h2><h2 id=\"精美图片\"><a href=\"#精美图片\" class=\"headerlink\" title=\"精美图片\"></a><a href=\"http://pic.netbian.com/\">精美图片</a></h2><p>to be contined…</p>\n","site":{"data":{}},"more":"<h2 id=\"Chart-js\"><a href=\"#Chart-js\" class=\"headerlink\" title=\"Chart.js\"></a><a href=\"https://www.chartjs.org/docs/latest/\">Chart.js</a></h2><h2 id=\"css小图标大全\"><a href=\"#css小图标大全\" class=\"headerlink\" title=\"css小图标大全\"></a><a href=\"https://fontawesome.com/v4.7.0/\">css小图标大全</a></h2><h2 id=\"精美图片\"><a href=\"#精美图片\" class=\"headerlink\" title=\"精美图片\"></a><a href=\"http://pic.netbian.com/\">精美图片</a></h2><p>to be contined…</p>\n"},{"layout":"post","title":"css中的百分比","date":"2019-10-21T16:00:00.000Z","excerpt":"margin, padding, top等的百分比","comments":1,"_content":"\n## css中的百分比\nCSS支持多种单位形式，如百分比、px、pt、rem等，百分比和px是常用的单位，随着移动端和响应式的流行，rem、vh、vw也开始普遍使用。   \n那么元素的百分比到底是怎样计算出来的？\n\n### margin, padding\n```\n<div style=\"width: 20px\">\n    <div id=\"temp1\" style=\"margin-top: 50%\">Test top</div>\n    <div id=\"temp2\" style=\"margin-right: 25%\">Test right</div>\n    <div id=\"temp3\" style=\"margin-bottom: 75%\">Test bottom</div>\n    <div id=\"temp4\" style=\"margin-left: 100%\">Test left</div>\n</div>\n```\n得到的offset如下：\n```\ntemp1.marginTop = 20px * 50% = 10px;\ntemp2.marginRight = 20px * 25% = 5px;\ntemp3.marginBottom = 20px * 75% = 15px;\ntemp4.marginLeft = 20px * 100% = 20px;\n```\n当按百分比设定一个元素的宽度时，它是相对于父容器的宽度计算的，```元素竖向的百分比设定也是相对于容器的宽度，而不是高度```\n\n### 定位元素 top\n```\n<div style=\"height: 100px; width: 50px\">\n    <div id=\"temp1\" style=\"position: relative; top: 50%\">Test top</div>\n    <div id=\"temp2\" style=\"position: relative; right: 25%\">Test right</div>\n    <div id=\"temp3\" style=\"position: relative; bottom: 75%\">Test bottom</div>\n    <div id=\"temp4\" style=\"position: relative; left: 100%\">Test left</div>\n</div>\n```\n得到的offset如下：\n```\ntemp1.top = 100px * 50% = 50px;\ntemp2.right = 50px * 25% = 12.5px;\ntemp3.bottom = 100px * 75% = 75px;\ntemp4.left = 50px * 100% = 50px;\n```\n所以，可以看到，当为定位元素时，top、bottom、right、left是按父元素对应的宽度和高度计算的。\n\n### 补充\n当我们改变书写模式为垂直的时候，margin等的参照就变为高度了\n```\n#demo{\n    -webkit-writing-mode: vertical-rl; /* for browsers of webkit engine */\n    writing-mode: tb-rl; /* for ie */\n}\n```\n你是否觉得这不符合常规的感性认知？感性认知更多感觉应该横向参照包含块宽度，纵向参照包含块高度。   \n其实这是为了要横向和纵向2个方向都创建相同的 margin，如果它们的参照物不一致，那就无法得到两个方向相同的留白。\n#### 你可能会问那为什么要选择宽度做参照而不是高度呢？\n这其实更多的要从 CSS 设计意图上去想，因为CSS的基础需求是排版，而通常我们所见的横排文字，其水平宽度一定（仔细回想一下，如果没有显式的定义宽度或者强制一行显示，都会遇到边界换行，而不是水平延展），垂直方向可以无限延展。但当书写模式为纵向时，其参照就变成了高度而不再是宽度了。\n## 参考\n[css中的百分比计算方法](https://www.runoob.com/w3cnote/css-percentage-calculation.html)\n","source":"_posts/2019-10-22-percentage-of-css.md","raw":"---\nlayout: post\ntitle: \"css中的百分比\"\ndate: 2019-10-22\nexcerpt: \"margin, padding, top等的百分比\"\ntags: [mongo, ruby]\ncomments: true\n---\n\n## css中的百分比\nCSS支持多种单位形式，如百分比、px、pt、rem等，百分比和px是常用的单位，随着移动端和响应式的流行，rem、vh、vw也开始普遍使用。   \n那么元素的百分比到底是怎样计算出来的？\n\n### margin, padding\n```\n<div style=\"width: 20px\">\n    <div id=\"temp1\" style=\"margin-top: 50%\">Test top</div>\n    <div id=\"temp2\" style=\"margin-right: 25%\">Test right</div>\n    <div id=\"temp3\" style=\"margin-bottom: 75%\">Test bottom</div>\n    <div id=\"temp4\" style=\"margin-left: 100%\">Test left</div>\n</div>\n```\n得到的offset如下：\n```\ntemp1.marginTop = 20px * 50% = 10px;\ntemp2.marginRight = 20px * 25% = 5px;\ntemp3.marginBottom = 20px * 75% = 15px;\ntemp4.marginLeft = 20px * 100% = 20px;\n```\n当按百分比设定一个元素的宽度时，它是相对于父容器的宽度计算的，```元素竖向的百分比设定也是相对于容器的宽度，而不是高度```\n\n### 定位元素 top\n```\n<div style=\"height: 100px; width: 50px\">\n    <div id=\"temp1\" style=\"position: relative; top: 50%\">Test top</div>\n    <div id=\"temp2\" style=\"position: relative; right: 25%\">Test right</div>\n    <div id=\"temp3\" style=\"position: relative; bottom: 75%\">Test bottom</div>\n    <div id=\"temp4\" style=\"position: relative; left: 100%\">Test left</div>\n</div>\n```\n得到的offset如下：\n```\ntemp1.top = 100px * 50% = 50px;\ntemp2.right = 50px * 25% = 12.5px;\ntemp3.bottom = 100px * 75% = 75px;\ntemp4.left = 50px * 100% = 50px;\n```\n所以，可以看到，当为定位元素时，top、bottom、right、left是按父元素对应的宽度和高度计算的。\n\n### 补充\n当我们改变书写模式为垂直的时候，margin等的参照就变为高度了\n```\n#demo{\n    -webkit-writing-mode: vertical-rl; /* for browsers of webkit engine */\n    writing-mode: tb-rl; /* for ie */\n}\n```\n你是否觉得这不符合常规的感性认知？感性认知更多感觉应该横向参照包含块宽度，纵向参照包含块高度。   \n其实这是为了要横向和纵向2个方向都创建相同的 margin，如果它们的参照物不一致，那就无法得到两个方向相同的留白。\n#### 你可能会问那为什么要选择宽度做参照而不是高度呢？\n这其实更多的要从 CSS 设计意图上去想，因为CSS的基础需求是排版，而通常我们所见的横排文字，其水平宽度一定（仔细回想一下，如果没有显式的定义宽度或者强制一行显示，都会遇到边界换行，而不是水平延展），垂直方向可以无限延展。但当书写模式为纵向时，其参照就变成了高度而不再是宽度了。\n## 参考\n[css中的百分比计算方法](https://www.runoob.com/w3cnote/css-percentage-calculation.html)\n","slug":"2019-10-22-percentage-of-css","published":1,"updated":"2020-10-05T03:06:43.196Z","photos":[],"link":"","_id":"ckgkk27sx000lkcv013ls3fg3","content":"<h2 id=\"css中的百分比\"><a href=\"#css中的百分比\" class=\"headerlink\" title=\"css中的百分比\"></a>css中的百分比</h2><p>CSS支持多种单位形式，如百分比、px、pt、rem等，百分比和px是常用的单位，随着移动端和响应式的流行，rem、vh、vw也开始普遍使用。<br>那么元素的百分比到底是怎样计算出来的？</p>\n<h3 id=\"margin-padding\"><a href=\"#margin-padding\" class=\"headerlink\" title=\"margin, padding\"></a>margin, padding</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div style&#x3D;&quot;width: 20px&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;temp1&quot; style&#x3D;&quot;margin-top: 50%&quot;&gt;Test top&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;temp2&quot; style&#x3D;&quot;margin-right: 25%&quot;&gt;Test right&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;temp3&quot; style&#x3D;&quot;margin-bottom: 75%&quot;&gt;Test bottom&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;temp4&quot; style&#x3D;&quot;margin-left: 100%&quot;&gt;Test left&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>\n<p>得到的offset如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp1.marginTop &#x3D; 20px * 50% &#x3D; 10px;</span><br><span class=\"line\">temp2.marginRight &#x3D; 20px * 25% &#x3D; 5px;</span><br><span class=\"line\">temp3.marginBottom &#x3D; 20px * 75% &#x3D; 15px;</span><br><span class=\"line\">temp4.marginLeft &#x3D; 20px * 100% &#x3D; 20px;</span><br></pre></td></tr></table></figure>\n<p>当按百分比设定一个元素的宽度时，它是相对于父容器的宽度计算的，<code>元素竖向的百分比设定也是相对于容器的宽度，而不是高度</code></p>\n<h3 id=\"定位元素-top\"><a href=\"#定位元素-top\" class=\"headerlink\" title=\"定位元素 top\"></a>定位元素 top</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div style&#x3D;&quot;height: 100px; width: 50px&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;temp1&quot; style&#x3D;&quot;position: relative; top: 50%&quot;&gt;Test top&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;temp2&quot; style&#x3D;&quot;position: relative; right: 25%&quot;&gt;Test right&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;temp3&quot; style&#x3D;&quot;position: relative; bottom: 75%&quot;&gt;Test bottom&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;temp4&quot; style&#x3D;&quot;position: relative; left: 100%&quot;&gt;Test left&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>\n<p>得到的offset如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp1.top &#x3D; 100px * 50% &#x3D; 50px;</span><br><span class=\"line\">temp2.right &#x3D; 50px * 25% &#x3D; 12.5px;</span><br><span class=\"line\">temp3.bottom &#x3D; 100px * 75% &#x3D; 75px;</span><br><span class=\"line\">temp4.left &#x3D; 50px * 100% &#x3D; 50px;</span><br></pre></td></tr></table></figure>\n<p>所以，可以看到，当为定位元素时，top、bottom、right、left是按父元素对应的宽度和高度计算的。</p>\n<h3 id=\"补充\"><a href=\"#补充\" class=\"headerlink\" title=\"补充\"></a>补充</h3><p>当我们改变书写模式为垂直的时候，margin等的参照就变为高度了</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#demo&#123;</span><br><span class=\"line\">    -webkit-writing-mode: vertical-rl; &#x2F;* for browsers of webkit engine *&#x2F;</span><br><span class=\"line\">    writing-mode: tb-rl; &#x2F;* for ie *&#x2F;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>你是否觉得这不符合常规的感性认知？感性认知更多感觉应该横向参照包含块宽度，纵向参照包含块高度。<br>其实这是为了要横向和纵向2个方向都创建相同的 margin，如果它们的参照物不一致，那就无法得到两个方向相同的留白。</p>\n<h4 id=\"你可能会问那为什么要选择宽度做参照而不是高度呢？\"><a href=\"#你可能会问那为什么要选择宽度做参照而不是高度呢？\" class=\"headerlink\" title=\"你可能会问那为什么要选择宽度做参照而不是高度呢？\"></a>你可能会问那为什么要选择宽度做参照而不是高度呢？</h4><p>这其实更多的要从 CSS 设计意图上去想，因为CSS的基础需求是排版，而通常我们所见的横排文字，其水平宽度一定（仔细回想一下，如果没有显式的定义宽度或者强制一行显示，都会遇到边界换行，而不是水平延展），垂直方向可以无限延展。但当书写模式为纵向时，其参照就变成了高度而不再是宽度了。</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"https://www.runoob.com/w3cnote/css-percentage-calculation.html\">css中的百分比计算方法</a></p>\n","site":{"data":{}},"more":"<h2 id=\"css中的百分比\"><a href=\"#css中的百分比\" class=\"headerlink\" title=\"css中的百分比\"></a>css中的百分比</h2><p>CSS支持多种单位形式，如百分比、px、pt、rem等，百分比和px是常用的单位，随着移动端和响应式的流行，rem、vh、vw也开始普遍使用。<br>那么元素的百分比到底是怎样计算出来的？</p>\n<h3 id=\"margin-padding\"><a href=\"#margin-padding\" class=\"headerlink\" title=\"margin, padding\"></a>margin, padding</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div style&#x3D;&quot;width: 20px&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;temp1&quot; style&#x3D;&quot;margin-top: 50%&quot;&gt;Test top&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;temp2&quot; style&#x3D;&quot;margin-right: 25%&quot;&gt;Test right&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;temp3&quot; style&#x3D;&quot;margin-bottom: 75%&quot;&gt;Test bottom&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;temp4&quot; style&#x3D;&quot;margin-left: 100%&quot;&gt;Test left&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>\n<p>得到的offset如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp1.marginTop &#x3D; 20px * 50% &#x3D; 10px;</span><br><span class=\"line\">temp2.marginRight &#x3D; 20px * 25% &#x3D; 5px;</span><br><span class=\"line\">temp3.marginBottom &#x3D; 20px * 75% &#x3D; 15px;</span><br><span class=\"line\">temp4.marginLeft &#x3D; 20px * 100% &#x3D; 20px;</span><br></pre></td></tr></table></figure>\n<p>当按百分比设定一个元素的宽度时，它是相对于父容器的宽度计算的，<code>元素竖向的百分比设定也是相对于容器的宽度，而不是高度</code></p>\n<h3 id=\"定位元素-top\"><a href=\"#定位元素-top\" class=\"headerlink\" title=\"定位元素 top\"></a>定位元素 top</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div style&#x3D;&quot;height: 100px; width: 50px&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;temp1&quot; style&#x3D;&quot;position: relative; top: 50%&quot;&gt;Test top&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;temp2&quot; style&#x3D;&quot;position: relative; right: 25%&quot;&gt;Test right&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;temp3&quot; style&#x3D;&quot;position: relative; bottom: 75%&quot;&gt;Test bottom&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;temp4&quot; style&#x3D;&quot;position: relative; left: 100%&quot;&gt;Test left&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>\n<p>得到的offset如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp1.top &#x3D; 100px * 50% &#x3D; 50px;</span><br><span class=\"line\">temp2.right &#x3D; 50px * 25% &#x3D; 12.5px;</span><br><span class=\"line\">temp3.bottom &#x3D; 100px * 75% &#x3D; 75px;</span><br><span class=\"line\">temp4.left &#x3D; 50px * 100% &#x3D; 50px;</span><br></pre></td></tr></table></figure>\n<p>所以，可以看到，当为定位元素时，top、bottom、right、left是按父元素对应的宽度和高度计算的。</p>\n<h3 id=\"补充\"><a href=\"#补充\" class=\"headerlink\" title=\"补充\"></a>补充</h3><p>当我们改变书写模式为垂直的时候，margin等的参照就变为高度了</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#demo&#123;</span><br><span class=\"line\">    -webkit-writing-mode: vertical-rl; &#x2F;* for browsers of webkit engine *&#x2F;</span><br><span class=\"line\">    writing-mode: tb-rl; &#x2F;* for ie *&#x2F;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>你是否觉得这不符合常规的感性认知？感性认知更多感觉应该横向参照包含块宽度，纵向参照包含块高度。<br>其实这是为了要横向和纵向2个方向都创建相同的 margin，如果它们的参照物不一致，那就无法得到两个方向相同的留白。</p>\n<h4 id=\"你可能会问那为什么要选择宽度做参照而不是高度呢？\"><a href=\"#你可能会问那为什么要选择宽度做参照而不是高度呢？\" class=\"headerlink\" title=\"你可能会问那为什么要选择宽度做参照而不是高度呢？\"></a>你可能会问那为什么要选择宽度做参照而不是高度呢？</h4><p>这其实更多的要从 CSS 设计意图上去想，因为CSS的基础需求是排版，而通常我们所见的横排文字，其水平宽度一定（仔细回想一下，如果没有显式的定义宽度或者强制一行显示，都会遇到边界换行，而不是水平延展），垂直方向可以无限延展。但当书写模式为纵向时，其参照就变成了高度而不再是宽度了。</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"https://www.runoob.com/w3cnote/css-percentage-calculation.html\">css中的百分比计算方法</a></p>\n"},{"layout":"post","title":"docker的http代理","date":"2019-10-28T16:00:00.000Z","excerpt":"docker无法访问网络，在需要网络代理的情况下，配置docker http代理","comments":1,"_content":"\n## 步骤\n解决代理的方法，参考官网教程   \n[https://docs.docker.com/config/daemon/systemd/#httphttps-proxy](https://docs.docker.com/config/daemon/systemd/#httphttps-proxy)\n\n### 创建文件夹\n```\nsudo mkdir -p /etc/systemd/system/docker.service.d\n```\n### 创建配置文件\n```\ncd /etc/systemd/system/docker.service.d\ntouch http-proxy.conf\n```\n### 在http-proxy.conf中添加http代理\n```\n[Service] Environment=\"HTTP_PROXY=http://proxy.example.com:80/\" \"NO_PROXY=localhost,127.0.0.1\"\n```\n### 更新，使配置文件生效\n```\nsudo systemctl daemon-reload\n```\n### 重启docker服务\n```\nsudo systemctl restart docker\n```\n### 检查配置是否生效\n```\n$ systemctl show --property=Environment docker\n```\n## 转载\n[配置Docker的HTTP代理](https://blog.csdn.net/talang376763947/article/details/79281009)","source":"_posts/2019-10-29-proxy-of-docker.md","raw":"---\nlayout: post\ntitle: \"docker的http代理\"\ndate: 2019-10-29\nexcerpt: \"docker无法访问网络，在需要网络代理的情况下，配置docker http代理\"\ntags: [docker]\ncomments: true\n---\n\n## 步骤\n解决代理的方法，参考官网教程   \n[https://docs.docker.com/config/daemon/systemd/#httphttps-proxy](https://docs.docker.com/config/daemon/systemd/#httphttps-proxy)\n\n### 创建文件夹\n```\nsudo mkdir -p /etc/systemd/system/docker.service.d\n```\n### 创建配置文件\n```\ncd /etc/systemd/system/docker.service.d\ntouch http-proxy.conf\n```\n### 在http-proxy.conf中添加http代理\n```\n[Service] Environment=\"HTTP_PROXY=http://proxy.example.com:80/\" \"NO_PROXY=localhost,127.0.0.1\"\n```\n### 更新，使配置文件生效\n```\nsudo systemctl daemon-reload\n```\n### 重启docker服务\n```\nsudo systemctl restart docker\n```\n### 检查配置是否生效\n```\n$ systemctl show --property=Environment docker\n```\n## 转载\n[配置Docker的HTTP代理](https://blog.csdn.net/talang376763947/article/details/79281009)","slug":"2019-10-29-proxy-of-docker","published":1,"updated":"2020-10-09T03:02:05.078Z","photos":[],"link":"","_id":"ckgkk27sz000mkcv08v6ceafp","content":"<h2 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h2><p>解决代理的方法，参考官网教程<br><a href=\"https://docs.docker.com/config/daemon/systemd/#httphttps-proxy\">https://docs.docker.com/config/daemon/systemd/#httphttps-proxy</a></p>\n<h3 id=\"创建文件夹\"><a href=\"#创建文件夹\" class=\"headerlink\" title=\"创建文件夹\"></a>创建文件夹</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mkdir -p &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;docker.service.d</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建配置文件\"><a href=\"#创建配置文件\" class=\"headerlink\" title=\"创建配置文件\"></a>创建配置文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;docker.service.d</span><br><span class=\"line\">touch http-proxy.conf</span><br></pre></td></tr></table></figure>\n<h3 id=\"在http-proxy-conf中添加http代理\"><a href=\"#在http-proxy-conf中添加http代理\" class=\"headerlink\" title=\"在http-proxy.conf中添加http代理\"></a>在http-proxy.conf中添加http代理</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Service] Environment&#x3D;&quot;HTTP_PROXY&#x3D;http:&#x2F;&#x2F;proxy.example.com:80&#x2F;&quot; &quot;NO_PROXY&#x3D;localhost,127.0.0.1&quot;</span><br></pre></td></tr></table></figure>\n<h3 id=\"更新，使配置文件生效\"><a href=\"#更新，使配置文件生效\" class=\"headerlink\" title=\"更新，使配置文件生效\"></a>更新，使配置文件生效</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl daemon-reload</span><br></pre></td></tr></table></figure>\n<h3 id=\"重启docker服务\"><a href=\"#重启docker服务\" class=\"headerlink\" title=\"重启docker服务\"></a>重启docker服务</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>\n<h3 id=\"检查配置是否生效\"><a href=\"#检查配置是否生效\" class=\"headerlink\" title=\"检查配置是否生效\"></a>检查配置是否生效</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ systemctl show --property&#x3D;Environment docker</span><br></pre></td></tr></table></figure>\n<h2 id=\"转载\"><a href=\"#转载\" class=\"headerlink\" title=\"转载\"></a>转载</h2><p><a href=\"https://blog.csdn.net/talang376763947/article/details/79281009\">配置Docker的HTTP代理</a></p>\n","site":{"data":{}},"more":"<h2 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h2><p>解决代理的方法，参考官网教程<br><a href=\"https://docs.docker.com/config/daemon/systemd/#httphttps-proxy\">https://docs.docker.com/config/daemon/systemd/#httphttps-proxy</a></p>\n<h3 id=\"创建文件夹\"><a href=\"#创建文件夹\" class=\"headerlink\" title=\"创建文件夹\"></a>创建文件夹</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mkdir -p &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;docker.service.d</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建配置文件\"><a href=\"#创建配置文件\" class=\"headerlink\" title=\"创建配置文件\"></a>创建配置文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;docker.service.d</span><br><span class=\"line\">touch http-proxy.conf</span><br></pre></td></tr></table></figure>\n<h3 id=\"在http-proxy-conf中添加http代理\"><a href=\"#在http-proxy-conf中添加http代理\" class=\"headerlink\" title=\"在http-proxy.conf中添加http代理\"></a>在http-proxy.conf中添加http代理</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Service] Environment&#x3D;&quot;HTTP_PROXY&#x3D;http:&#x2F;&#x2F;proxy.example.com:80&#x2F;&quot; &quot;NO_PROXY&#x3D;localhost,127.0.0.1&quot;</span><br></pre></td></tr></table></figure>\n<h3 id=\"更新，使配置文件生效\"><a href=\"#更新，使配置文件生效\" class=\"headerlink\" title=\"更新，使配置文件生效\"></a>更新，使配置文件生效</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl daemon-reload</span><br></pre></td></tr></table></figure>\n<h3 id=\"重启docker服务\"><a href=\"#重启docker服务\" class=\"headerlink\" title=\"重启docker服务\"></a>重启docker服务</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>\n<h3 id=\"检查配置是否生效\"><a href=\"#检查配置是否生效\" class=\"headerlink\" title=\"检查配置是否生效\"></a>检查配置是否生效</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ systemctl show --property&#x3D;Environment docker</span><br></pre></td></tr></table></figure>\n<h2 id=\"转载\"><a href=\"#转载\" class=\"headerlink\" title=\"转载\"></a>转载</h2><p><a href=\"https://blog.csdn.net/talang376763947/article/details/79281009\">配置Docker的HTTP代理</a></p>\n"},{"layout":"post","title":"linux连接蓝牙的方法","date":"2020-05-10T16:00:00.000Z","excerpt":"在linux上使用蓝牙，连接耳机、键盘等蓝牙设备","comments":1,"_content":"\n## 连接蓝牙\n\n首先确定有蓝牙设备，没有去网上购买蓝牙发射器  \n\n```bash\n$ lsusb\nBus 002 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hub\nBus 001 Device 004: ID 17ef:608d Lenovo\nBus 001 Device 003: ID 0a12:0001 Cambridge Silicon Radio, Ltd Bluetooth Dongle (HCI mode)\nBus 001 Device 002: ID 17ef:6099 Lenovo\nBus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub\n```\n\n然后运行激活蓝牙设备\n\n```bash\n$ hciconfig\nhci0: Type: Primary  Bus: USB\n  BD Address: 00:1A:7D:DA:71:11  ACL MTU: 310:10  SCO MTU: 64:8\n  UP RUNNING PSCAN\n  RX bytes:1009522 acl:55943 sco:0 events:201 errors:0\n  TX bytes:4712 acl:49 sco:0 commands:90 errors:0\n$ sudo hciconfig hci0 up\n```\n\n使用bluetoothctl去连接蓝牙\n```\n$ bluetoothctl\n[bluetooth]# scan on 开始扫描\n[bluetooth]# pair 01:02:03:04:05:06 后面的mac地址是你的键盘mac地址\n[bluetooth]# trust 01:02:03:04:05:06 把键盘设置为可信设备\n\n[bluetooth]# connect 01:02:03:04:05:06 进行对接\n```\n\n### 参考\n[Linux下的蓝牙键盘对接](https://www.jianshu.com/p/a89c8a0fdd73)  \n[在Linux系统中使用蓝牙功能的基本方法](https://www.jb51.net/LINUXjishu/379648.html)\n","source":"_posts/2020-05-11-linux-connect-blueteeth.md","raw":"---\nlayout: post\ntitle: \"linux连接蓝牙的方法\"\ndate: 2020-05-11\nexcerpt: \"在linux上使用蓝牙，连接耳机、键盘等蓝牙设备\"\ntags: [linux]\ncomments: true\n---\n\n## 连接蓝牙\n\n首先确定有蓝牙设备，没有去网上购买蓝牙发射器  \n\n```bash\n$ lsusb\nBus 002 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hub\nBus 001 Device 004: ID 17ef:608d Lenovo\nBus 001 Device 003: ID 0a12:0001 Cambridge Silicon Radio, Ltd Bluetooth Dongle (HCI mode)\nBus 001 Device 002: ID 17ef:6099 Lenovo\nBus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub\n```\n\n然后运行激活蓝牙设备\n\n```bash\n$ hciconfig\nhci0: Type: Primary  Bus: USB\n  BD Address: 00:1A:7D:DA:71:11  ACL MTU: 310:10  SCO MTU: 64:8\n  UP RUNNING PSCAN\n  RX bytes:1009522 acl:55943 sco:0 events:201 errors:0\n  TX bytes:4712 acl:49 sco:0 commands:90 errors:0\n$ sudo hciconfig hci0 up\n```\n\n使用bluetoothctl去连接蓝牙\n```\n$ bluetoothctl\n[bluetooth]# scan on 开始扫描\n[bluetooth]# pair 01:02:03:04:05:06 后面的mac地址是你的键盘mac地址\n[bluetooth]# trust 01:02:03:04:05:06 把键盘设置为可信设备\n\n[bluetooth]# connect 01:02:03:04:05:06 进行对接\n```\n\n### 参考\n[Linux下的蓝牙键盘对接](https://www.jianshu.com/p/a89c8a0fdd73)  \n[在Linux系统中使用蓝牙功能的基本方法](https://www.jb51.net/LINUXjishu/379648.html)\n","slug":"2020-05-11-linux-connect-blueteeth","published":1,"updated":"2020-10-09T03:01:35.069Z","photos":[],"link":"","_id":"ckgkk27t4000pkcv08zv9fmzd","content":"<h2 id=\"连接蓝牙\"><a href=\"#连接蓝牙\" class=\"headerlink\" title=\"连接蓝牙\"></a>连接蓝牙</h2><p>首先确定有蓝牙设备，没有去网上购买蓝牙发射器  </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ lsusb</span><br><span class=\"line\">Bus 002 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hub</span><br><span class=\"line\">Bus 001 Device 004: ID 17ef:608d Lenovo</span><br><span class=\"line\">Bus 001 Device 003: ID 0a12:0001 Cambridge Silicon Radio, Ltd Bluetooth Dongle (HCI mode)</span><br><span class=\"line\">Bus 001 Device 002: ID 17ef:6099 Lenovo</span><br><span class=\"line\">Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub</span><br></pre></td></tr></table></figure>\n\n<p>然后运行激活蓝牙设备</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hciconfig</span><br><span class=\"line\">hci0: Type: Primary  Bus: USB</span><br><span class=\"line\">  BD Address: 00:1A:7D:DA:71:11  ACL MTU: 310:10  SCO MTU: 64:8</span><br><span class=\"line\">  UP RUNNING PSCAN</span><br><span class=\"line\">  RX bytes:1009522 acl:55943 sco:0 events:201 errors:0</span><br><span class=\"line\">  TX bytes:4712 acl:49 sco:0 commands:90 errors:0</span><br><span class=\"line\">$ sudo hciconfig hci0 up</span><br></pre></td></tr></table></figure>\n\n<p>使用bluetoothctl去连接蓝牙</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ bluetoothctl</span><br><span class=\"line\">[bluetooth]# scan on 开始扫描</span><br><span class=\"line\">[bluetooth]# pair 01:02:03:04:05:06 后面的mac地址是你的键盘mac地址</span><br><span class=\"line\">[bluetooth]# trust 01:02:03:04:05:06 把键盘设置为可信设备</span><br><span class=\"line\"></span><br><span class=\"line\">[bluetooth]# connect 01:02:03:04:05:06 进行对接</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><p><a href=\"https://www.jianshu.com/p/a89c8a0fdd73\">Linux下的蓝牙键盘对接</a><br><a href=\"https://www.jb51.net/LINUXjishu/379648.html\">在Linux系统中使用蓝牙功能的基本方法</a></p>\n","site":{"data":{}},"more":"<h2 id=\"连接蓝牙\"><a href=\"#连接蓝牙\" class=\"headerlink\" title=\"连接蓝牙\"></a>连接蓝牙</h2><p>首先确定有蓝牙设备，没有去网上购买蓝牙发射器  </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ lsusb</span><br><span class=\"line\">Bus 002 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hub</span><br><span class=\"line\">Bus 001 Device 004: ID 17ef:608d Lenovo</span><br><span class=\"line\">Bus 001 Device 003: ID 0a12:0001 Cambridge Silicon Radio, Ltd Bluetooth Dongle (HCI mode)</span><br><span class=\"line\">Bus 001 Device 002: ID 17ef:6099 Lenovo</span><br><span class=\"line\">Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub</span><br></pre></td></tr></table></figure>\n\n<p>然后运行激活蓝牙设备</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hciconfig</span><br><span class=\"line\">hci0: Type: Primary  Bus: USB</span><br><span class=\"line\">  BD Address: 00:1A:7D:DA:71:11  ACL MTU: 310:10  SCO MTU: 64:8</span><br><span class=\"line\">  UP RUNNING PSCAN</span><br><span class=\"line\">  RX bytes:1009522 acl:55943 sco:0 events:201 errors:0</span><br><span class=\"line\">  TX bytes:4712 acl:49 sco:0 commands:90 errors:0</span><br><span class=\"line\">$ sudo hciconfig hci0 up</span><br></pre></td></tr></table></figure>\n\n<p>使用bluetoothctl去连接蓝牙</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ bluetoothctl</span><br><span class=\"line\">[bluetooth]# scan on 开始扫描</span><br><span class=\"line\">[bluetooth]# pair 01:02:03:04:05:06 后面的mac地址是你的键盘mac地址</span><br><span class=\"line\">[bluetooth]# trust 01:02:03:04:05:06 把键盘设置为可信设备</span><br><span class=\"line\"></span><br><span class=\"line\">[bluetooth]# connect 01:02:03:04:05:06 进行对接</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><p><a href=\"https://www.jianshu.com/p/a89c8a0fdd73\">Linux下的蓝牙键盘对接</a><br><a href=\"https://www.jb51.net/LINUXjishu/379648.html\">在Linux系统中使用蓝牙功能的基本方法</a></p>\n"},{"layout":"post","title":"整理面试相关","date":"2020-09-05T16:00:00.000Z","excerpt":"主要是一些关于web的知识, 记录一些要点","comments":1,"_content":"\n简单记录一下面试的一些要点\n\n## javascript事件机制  \n先捕获，后冒泡，捕获从上到下，冒泡从下到上\n### 冒泡机制\nIE提出的事件流叫做事件冒泡，即事件开始时由最具体的元素接收，然后逐级向上传播到较为不具体的节点，看一下以下示例\n```\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n</head>\n<body onclick=\"bodyClick()\">\n\n    <div onclick=\"divClick()\">\n        <button onclick=\"btn()\">\n            <p onclick=\"p()\">点击冒泡</p>\n        </button>\n    </div>\n    <script>\n       \n       function p(){\n          console.log('p标签被点击')\n       }\n        function btn(){\n            console.log(\"button被点击\")\n        }\n         function divClick(event){\n             console.log('div被点击');\n         }\n        function bodyClick(){\n            console.log('body被点击')\n        }\n\n    </script>\n\n</body>\n</html>\n```\n结果显而易见\n```\np标签被点击\nbutton被点击\ndiv被点击\nbody被点击\n```\n### 捕获机制\n 事件捕获流的思想是不太具体的DOM节点应该更早接收到事件，而最具体的节点应该最后接收到事件，针对上面同样的例子，点击按钮，那么此时click事件会按照这样传播：（下面我们就借用addEventListener的第三个参数来模拟事件捕获流）\n ```\n <!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n</head>\n<body>\n\n<div>\n    <button>\n        <p>点击捕获</p>\n    </button>\n</div>\n<script>\n    var oP=document.querySelector('p');\n    var oB=document.querySelector('button');\n    var oD=document.querySelector('div');\n    var oBody=document.querySelector('body');\n\n    oP.addEventListener('click',function(){\n        console.log('p标签被点击')\n    },true);\n\n    oB.addEventListener('click',function(){\n        console.log(\"button被点击\")\n    },true);\n\n    oD.addEventListener('click',  function(){\n        console.log('div被点击')\n    },true);\n\n    oBody.addEventListener('click',function(){\n        console.log('body被点击')\n    },true);\n\n</script>\n ```\n 与冒泡相反的结果\n ```\n body被点击\n div被点击\n button被点击\n p标签被点击\n ```\n\n ## css省略文字的实现\n\n ```\n overflow: hidden;\n white-space: nowrap;\n text-overflow: allipsis\n ```\n\n ## settimeout, setinterval，eval在赋值时有什么问题？\n ## vue解决跨域问题\n### 什么是跨域\n\n跨域：由于浏览器同源策略，凡是发送请求url的协议、域名、端口三者之间任意一个与当前页面地址不同即为跨域。存在跨域的情况：\n\n* 网络协议不同，如http协议访问https协议。\n* 端口不同，如80端口访问8080端口。\n* 域名不同，如qianduanblog.com访问baidu.com。\n* 子域名不同，如abc.qianduanblog.com访问def.qianduanblog.com。\n* 域名和域名对应ip,如www.a.com访问20.205.28.90.\n\n下面是项目使用vue-cli脚手架搭建  \n使用http-proxy-middleware 代理解决跨域问题  \n例如请求的url:“http://f.apiplus.cn/bj11x5.json”  \n1、打开config/index.js,在proxyTable中添写如下代码：\n```\nproxyTable: {\n  '/api': {  //使用\"/api\"来代替\"http://f.apiplus.c\"\n    target: 'http://f.apiplus.cn', //源地址\n    changeOrigin: true, //是否跨域\n    pathRewrite: {\n      '^/api': 'http://f.apiplus.cn' //路径重写\n      }\n  }\n}\n```\n2、使用axios请求数据时直接使用“/api”：\n```\ngetData () {\naxios.get('/api/bj11x5.json', function (res) {\n  console.log(res)\n})\n```\n通过这中方法去解决跨域，打包部署时还按这种方法会出问题。解决方法如下：\n```\nlet serverUrl = '/api/'  //本地调试时\n// let serverUrl = 'http://f.apiplus.cn/'  //打包部署上线时\n```\n## vue解决xss注入问题\n1.在终端引入xss,命令：\n```\nnpm install xss --save\n```\n2.在vue的页面进行引入\n```\nimport xss from 'xss'\n```\n3.定义一个变量进行测试   \n首先测试一个没有进行防止xss攻击的测试\n```\n<p v-html=\"test\"></p>\n \nexport default {\n  data () {\n    return {\n      test: `<a onclick='alert(\"xss攻击\")'>链接</a>`\n    }\n```\n结果，js事件直接被翻译了\n```\nxss攻击\n```\n因此应该杜绝这些情况，解决方法如下\n```\n<p v-html=\"$xss(test)\"></p>\nimport xss from 'xss'\nexport default {\n  data () {\n    return {\n      test: `<a onclick='alert(\"xss攻击\")'>链接</a>`\n    }\n}\n \nObject.defineProperty(Vue.prototype, '$xss', {\n  value: xss\n})\n```\n此时a标签会保留，但是onclick事件被拦截了\n\n## vue axios的几种请求方式\naxios的请求方法：get、post、put、patch、delete\n\n* get：获取数据\n* post：提交数据（表单提交+文件上传）\n* put：更新数据（所有数据推送到后端）\n* patch：更新数据（只将更改的数据推送到后端）\n* delete：删除数据\n```\n//axios的get请求第一种写法不带参数\naxios.get('/data.json').then((res)=>{\n  console.log(res)\n}),\n\n//axios的get请求第一种写法带参数\naxios.get('/data.json',{\n  params:{\n    id:12\n  }\n}).then((res)=>{\n  console.log(res)\n}),\n\n//axios的get请求第二种写法不带参数\naxios({\n  method:'get',\n  url:'/data.json',\n}).then(res=>{\n  console.log(res)\n}),\n\n//axios的get请求第二种写法带参数\naxios({\n  method:'get',\n  url:'/data.json',\n  params:{\n    id:12\n  },\n}).then(res=>{\n  console.log(res)\n}),\n\n//axios的post请求第一种写法\nlet data = {\n  id:12\n}\naxios.post('/post',data).then((res)=>{\n  console.log(res)\n}),\n\n//axios的post请求第二种写法\naxios({\n  method:'post',\n  url:'/post',\n  data:data\n}).then(res=>{\n  console.log(res)\n}),\n\n//form-data请求,图片上传、文件上传，文件格式为：multipart/form-data，其他请求为application/json\n\nlet formData = new formData()\nfor(let key in data){\n  formData.append(key,data[key])\n},\naxios.post('/post',formData).then(res=>{\n  console.log(res)\n})\n\n//axios之put请求\naxios.put('/put',data).then(res=>{\n  console.log(res)\n})\n\n//axios之patch请求\naxios.patch('/patch',data).then(res=>{\n  console.log(res)\n}),\n\n  //axios之delete请求的第一种写法\n  axios.delete('/delete',{\n    params:{\n      id:12\n    }\n  }).then(res=>{\n    console.log(res)\n  })\n//说明:当使用第一种写法参数为params时，请求接口时参数是放在URL里面的。\n// 例：http://localhost:8080/delete?id=12,而写成第二种方法data就不会，根据实际情况使用\n\n//axios之delete请求的第二种写法\naxios.delete('/delete',{\n  data:{\n    id:12\n  }\n}).then(res=>{\n  console.log(res)\n})\n```\n\n## js如何比较浮点数\n浮点数的定义，非整数的Number类型无法用`=`来比较，这就是为什么在JavaScript中，0.1+0.2不能=0.3：\n```\nconsole.log( 0.1 + 0.2 == 0.3);\nfalse\n```\n这里输出的结果是`false`，说明两边不相等的，这是浮点运算的特点，浮点数运算的精度问题导致等式左右的结果并不是严格相等，而是相差了个微小的值。\n\n所以实际上，这里错误的不是结论，而是比较的方法，正确的比较方法是使用`JavaScript`提供的最小精度值：\n```\nconsole.log( Math.abs(0.1 + 0.2 - 0.3) <= Number.EPSILON);\n```\n\n\n","source":"_posts/2020-09-06-interview-css.md","raw":"---\nlayout: post\ntitle: \"整理面试相关\"\ndate: 2020-09-06\nexcerpt: \"主要是一些关于web的知识, 记录一些要点\"\ntags: [web, javascript, html, css]\ncomments: true\n---\n\n简单记录一下面试的一些要点\n\n## javascript事件机制  \n先捕获，后冒泡，捕获从上到下，冒泡从下到上\n### 冒泡机制\nIE提出的事件流叫做事件冒泡，即事件开始时由最具体的元素接收，然后逐级向上传播到较为不具体的节点，看一下以下示例\n```\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n</head>\n<body onclick=\"bodyClick()\">\n\n    <div onclick=\"divClick()\">\n        <button onclick=\"btn()\">\n            <p onclick=\"p()\">点击冒泡</p>\n        </button>\n    </div>\n    <script>\n       \n       function p(){\n          console.log('p标签被点击')\n       }\n        function btn(){\n            console.log(\"button被点击\")\n        }\n         function divClick(event){\n             console.log('div被点击');\n         }\n        function bodyClick(){\n            console.log('body被点击')\n        }\n\n    </script>\n\n</body>\n</html>\n```\n结果显而易见\n```\np标签被点击\nbutton被点击\ndiv被点击\nbody被点击\n```\n### 捕获机制\n 事件捕获流的思想是不太具体的DOM节点应该更早接收到事件，而最具体的节点应该最后接收到事件，针对上面同样的例子，点击按钮，那么此时click事件会按照这样传播：（下面我们就借用addEventListener的第三个参数来模拟事件捕获流）\n ```\n <!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n</head>\n<body>\n\n<div>\n    <button>\n        <p>点击捕获</p>\n    </button>\n</div>\n<script>\n    var oP=document.querySelector('p');\n    var oB=document.querySelector('button');\n    var oD=document.querySelector('div');\n    var oBody=document.querySelector('body');\n\n    oP.addEventListener('click',function(){\n        console.log('p标签被点击')\n    },true);\n\n    oB.addEventListener('click',function(){\n        console.log(\"button被点击\")\n    },true);\n\n    oD.addEventListener('click',  function(){\n        console.log('div被点击')\n    },true);\n\n    oBody.addEventListener('click',function(){\n        console.log('body被点击')\n    },true);\n\n</script>\n ```\n 与冒泡相反的结果\n ```\n body被点击\n div被点击\n button被点击\n p标签被点击\n ```\n\n ## css省略文字的实现\n\n ```\n overflow: hidden;\n white-space: nowrap;\n text-overflow: allipsis\n ```\n\n ## settimeout, setinterval，eval在赋值时有什么问题？\n ## vue解决跨域问题\n### 什么是跨域\n\n跨域：由于浏览器同源策略，凡是发送请求url的协议、域名、端口三者之间任意一个与当前页面地址不同即为跨域。存在跨域的情况：\n\n* 网络协议不同，如http协议访问https协议。\n* 端口不同，如80端口访问8080端口。\n* 域名不同，如qianduanblog.com访问baidu.com。\n* 子域名不同，如abc.qianduanblog.com访问def.qianduanblog.com。\n* 域名和域名对应ip,如www.a.com访问20.205.28.90.\n\n下面是项目使用vue-cli脚手架搭建  \n使用http-proxy-middleware 代理解决跨域问题  \n例如请求的url:“http://f.apiplus.cn/bj11x5.json”  \n1、打开config/index.js,在proxyTable中添写如下代码：\n```\nproxyTable: {\n  '/api': {  //使用\"/api\"来代替\"http://f.apiplus.c\"\n    target: 'http://f.apiplus.cn', //源地址\n    changeOrigin: true, //是否跨域\n    pathRewrite: {\n      '^/api': 'http://f.apiplus.cn' //路径重写\n      }\n  }\n}\n```\n2、使用axios请求数据时直接使用“/api”：\n```\ngetData () {\naxios.get('/api/bj11x5.json', function (res) {\n  console.log(res)\n})\n```\n通过这中方法去解决跨域，打包部署时还按这种方法会出问题。解决方法如下：\n```\nlet serverUrl = '/api/'  //本地调试时\n// let serverUrl = 'http://f.apiplus.cn/'  //打包部署上线时\n```\n## vue解决xss注入问题\n1.在终端引入xss,命令：\n```\nnpm install xss --save\n```\n2.在vue的页面进行引入\n```\nimport xss from 'xss'\n```\n3.定义一个变量进行测试   \n首先测试一个没有进行防止xss攻击的测试\n```\n<p v-html=\"test\"></p>\n \nexport default {\n  data () {\n    return {\n      test: `<a onclick='alert(\"xss攻击\")'>链接</a>`\n    }\n```\n结果，js事件直接被翻译了\n```\nxss攻击\n```\n因此应该杜绝这些情况，解决方法如下\n```\n<p v-html=\"$xss(test)\"></p>\nimport xss from 'xss'\nexport default {\n  data () {\n    return {\n      test: `<a onclick='alert(\"xss攻击\")'>链接</a>`\n    }\n}\n \nObject.defineProperty(Vue.prototype, '$xss', {\n  value: xss\n})\n```\n此时a标签会保留，但是onclick事件被拦截了\n\n## vue axios的几种请求方式\naxios的请求方法：get、post、put、patch、delete\n\n* get：获取数据\n* post：提交数据（表单提交+文件上传）\n* put：更新数据（所有数据推送到后端）\n* patch：更新数据（只将更改的数据推送到后端）\n* delete：删除数据\n```\n//axios的get请求第一种写法不带参数\naxios.get('/data.json').then((res)=>{\n  console.log(res)\n}),\n\n//axios的get请求第一种写法带参数\naxios.get('/data.json',{\n  params:{\n    id:12\n  }\n}).then((res)=>{\n  console.log(res)\n}),\n\n//axios的get请求第二种写法不带参数\naxios({\n  method:'get',\n  url:'/data.json',\n}).then(res=>{\n  console.log(res)\n}),\n\n//axios的get请求第二种写法带参数\naxios({\n  method:'get',\n  url:'/data.json',\n  params:{\n    id:12\n  },\n}).then(res=>{\n  console.log(res)\n}),\n\n//axios的post请求第一种写法\nlet data = {\n  id:12\n}\naxios.post('/post',data).then((res)=>{\n  console.log(res)\n}),\n\n//axios的post请求第二种写法\naxios({\n  method:'post',\n  url:'/post',\n  data:data\n}).then(res=>{\n  console.log(res)\n}),\n\n//form-data请求,图片上传、文件上传，文件格式为：multipart/form-data，其他请求为application/json\n\nlet formData = new formData()\nfor(let key in data){\n  formData.append(key,data[key])\n},\naxios.post('/post',formData).then(res=>{\n  console.log(res)\n})\n\n//axios之put请求\naxios.put('/put',data).then(res=>{\n  console.log(res)\n})\n\n//axios之patch请求\naxios.patch('/patch',data).then(res=>{\n  console.log(res)\n}),\n\n  //axios之delete请求的第一种写法\n  axios.delete('/delete',{\n    params:{\n      id:12\n    }\n  }).then(res=>{\n    console.log(res)\n  })\n//说明:当使用第一种写法参数为params时，请求接口时参数是放在URL里面的。\n// 例：http://localhost:8080/delete?id=12,而写成第二种方法data就不会，根据实际情况使用\n\n//axios之delete请求的第二种写法\naxios.delete('/delete',{\n  data:{\n    id:12\n  }\n}).then(res=>{\n  console.log(res)\n})\n```\n\n## js如何比较浮点数\n浮点数的定义，非整数的Number类型无法用`=`来比较，这就是为什么在JavaScript中，0.1+0.2不能=0.3：\n```\nconsole.log( 0.1 + 0.2 == 0.3);\nfalse\n```\n这里输出的结果是`false`，说明两边不相等的，这是浮点运算的特点，浮点数运算的精度问题导致等式左右的结果并不是严格相等，而是相差了个微小的值。\n\n所以实际上，这里错误的不是结论，而是比较的方法，正确的比较方法是使用`JavaScript`提供的最小精度值：\n```\nconsole.log( Math.abs(0.1 + 0.2 - 0.3) <= Number.EPSILON);\n```\n\n\n","slug":"2020-09-06-interview-css","published":1,"updated":"2020-10-13T15:10:23.811Z","photos":[],"link":"","_id":"ckgkk27t6000rkcv0h9oz8rzw","content":"<p>简单记录一下面试的一些要点</p>\n<h2 id=\"javascript事件机制\"><a href=\"#javascript事件机制\" class=\"headerlink\" title=\"javascript事件机制\"></a>javascript事件机制</h2><p>先捕获，后冒泡，捕获从上到下，冒泡从下到上</p>\n<h3 id=\"冒泡机制\"><a href=\"#冒泡机制\" class=\"headerlink\" title=\"冒泡机制\"></a>冒泡机制</h3><p>IE提出的事件流叫做事件冒泡，即事件开始时由最具体的元素接收，然后逐级向上传播到较为不具体的节点，看一下以下示例</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class=\"line\">    &lt;title&gt;Title&lt;&#x2F;title&gt;</span><br><span class=\"line\">&lt;&#x2F;head&gt;</span><br><span class=\"line\">&lt;body onclick&#x3D;&quot;bodyClick()&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;div onclick&#x3D;&quot;divClick()&quot;&gt;</span><br><span class=\"line\">        &lt;button onclick&#x3D;&quot;btn()&quot;&gt;</span><br><span class=\"line\">            &lt;p onclick&#x3D;&quot;p()&quot;&gt;点击冒泡&lt;&#x2F;p&gt;</span><br><span class=\"line\">        &lt;&#x2F;button&gt;</span><br><span class=\"line\">    &lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;script&gt;</span><br><span class=\"line\">       </span><br><span class=\"line\">       function p()&#123;</span><br><span class=\"line\">          console.log(&#39;p标签被点击&#39;)</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">        function btn()&#123;</span><br><span class=\"line\">            console.log(&quot;button被点击&quot;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">         function divClick(event)&#123;</span><br><span class=\"line\">             console.log(&#39;div被点击&#39;);</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">        function bodyClick()&#123;</span><br><span class=\"line\">            console.log(&#39;body被点击&#39;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;&#x2F;script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br><span class=\"line\">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>\n<p>结果显而易见</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p标签被点击</span><br><span class=\"line\">button被点击</span><br><span class=\"line\">div被点击</span><br><span class=\"line\">body被点击</span><br></pre></td></tr></table></figure>\n<h3 id=\"捕获机制\"><a href=\"#捕获机制\" class=\"headerlink\" title=\"捕获机制\"></a>捕获机制</h3><p> 事件捕获流的思想是不太具体的DOM节点应该更早接收到事件，而最具体的节点应该最后接收到事件，针对上面同样的例子，点击按钮，那么此时click事件会按照这样传播：（下面我们就借用addEventListener的第三个参数来模拟事件捕获流）<br> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> &lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class=\"line\">    &lt;title&gt;Title&lt;&#x2F;title&gt;</span><br><span class=\"line\">&lt;&#x2F;head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;div&gt;</span><br><span class=\"line\">    &lt;button&gt;</span><br><span class=\"line\">        &lt;p&gt;点击捕获&lt;&#x2F;p&gt;</span><br><span class=\"line\">    &lt;&#x2F;button&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">    var oP&#x3D;document.querySelector(&#39;p&#39;);</span><br><span class=\"line\">    var oB&#x3D;document.querySelector(&#39;button&#39;);</span><br><span class=\"line\">    var oD&#x3D;document.querySelector(&#39;div&#39;);</span><br><span class=\"line\">    var oBody&#x3D;document.querySelector(&#39;body&#39;);</span><br><span class=\"line\"></span><br><span class=\"line\">    oP.addEventListener(&#39;click&#39;,function()&#123;</span><br><span class=\"line\">        console.log(&#39;p标签被点击&#39;)</span><br><span class=\"line\">    &#125;,true);</span><br><span class=\"line\"></span><br><span class=\"line\">    oB.addEventListener(&#39;click&#39;,function()&#123;</span><br><span class=\"line\">        console.log(&quot;button被点击&quot;)</span><br><span class=\"line\">    &#125;,true);</span><br><span class=\"line\"></span><br><span class=\"line\">    oD.addEventListener(&#39;click&#39;,  function()&#123;</span><br><span class=\"line\">        console.log(&#39;div被点击&#39;)</span><br><span class=\"line\">    &#125;,true);</span><br><span class=\"line\"></span><br><span class=\"line\">    oBody.addEventListener(&#39;click&#39;,function()&#123;</span><br><span class=\"line\">        console.log(&#39;body被点击&#39;)</span><br><span class=\"line\">    &#125;,true);</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><br> 与冒泡相反的结果<br> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">body被点击</span><br><span class=\"line\">div被点击</span><br><span class=\"line\">button被点击</span><br><span class=\"line\">p标签被点击</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"css省略文字的实现\"><a href=\"#css省略文字的实现\" class=\"headerlink\" title=\"css省略文字的实现\"></a>css省略文字的实现</h2> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">overflow: hidden;</span><br><span class=\"line\">white-space: nowrap;</span><br><span class=\"line\">text-overflow: allipsis</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"settimeout-setinterval，eval在赋值时有什么问题？\"><a href=\"#settimeout-setinterval，eval在赋值时有什么问题？\" class=\"headerlink\" title=\"settimeout, setinterval，eval在赋值时有什么问题？\"></a>settimeout, setinterval，eval在赋值时有什么问题？</h2><h2 id=\"vue解决跨域问题\"><a href=\"#vue解决跨域问题\" class=\"headerlink\" title=\"vue解决跨域问题\"></a>vue解决跨域问题</h2><h3 id=\"什么是跨域\"><a href=\"#什么是跨域\" class=\"headerlink\" title=\"什么是跨域\"></a>什么是跨域</h3><p>跨域：由于浏览器同源策略，凡是发送请求url的协议、域名、端口三者之间任意一个与当前页面地址不同即为跨域。存在跨域的情况：</p>\n<ul>\n<li>网络协议不同，如http协议访问https协议。</li>\n<li>端口不同，如80端口访问8080端口。</li>\n<li>域名不同，如qianduanblog.com访问baidu.com。</li>\n<li>子域名不同，如abc.qianduanblog.com访问def.qianduanblog.com。</li>\n<li>域名和域名对应ip,如<a href=\"http://www.a.com访问20.205.28.90/\">www.a.com访问20.205.28.90</a>.</li>\n</ul>\n<p>下面是项目使用vue-cli脚手架搭建<br>使用http-proxy-middleware 代理解决跨域问题<br>例如请求的url:“<a href=\"http://f.apiplus.cn/bj11x5.json%E2%80%9D\">http://f.apiplus.cn/bj11x5.json”</a><br>1、打开config/index.js,在proxyTable中添写如下代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">proxyTable: &#123;</span><br><span class=\"line\">  &#39;&#x2F;api&#39;: &#123;  &#x2F;&#x2F;使用&quot;&#x2F;api&quot;来代替&quot;http:&#x2F;&#x2F;f.apiplus.c&quot;</span><br><span class=\"line\">    target: &#39;http:&#x2F;&#x2F;f.apiplus.cn&#39;, &#x2F;&#x2F;源地址</span><br><span class=\"line\">    changeOrigin: true, &#x2F;&#x2F;是否跨域</span><br><span class=\"line\">    pathRewrite: &#123;</span><br><span class=\"line\">      &#39;^&#x2F;api&#39;: &#39;http:&#x2F;&#x2F;f.apiplus.cn&#39; &#x2F;&#x2F;路径重写</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>2、使用axios请求数据时直接使用“/api”：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getData () &#123;</span><br><span class=\"line\">axios.get(&#39;&#x2F;api&#x2F;bj11x5.json&#39;, function (res) &#123;</span><br><span class=\"line\">  console.log(res)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>通过这中方法去解决跨域，打包部署时还按这种方法会出问题。解决方法如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let serverUrl &#x3D; &#39;&#x2F;api&#x2F;&#39;  &#x2F;&#x2F;本地调试时</span><br><span class=\"line\">&#x2F;&#x2F; let serverUrl &#x3D; &#39;http:&#x2F;&#x2F;f.apiplus.cn&#x2F;&#39;  &#x2F;&#x2F;打包部署上线时</span><br></pre></td></tr></table></figure>\n<h2 id=\"vue解决xss注入问题\"><a href=\"#vue解决xss注入问题\" class=\"headerlink\" title=\"vue解决xss注入问题\"></a>vue解决xss注入问题</h2><p>1.在终端引入xss,命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install xss --save</span><br></pre></td></tr></table></figure>\n<p>2.在vue的页面进行引入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import xss from &#39;xss&#39;</span><br></pre></td></tr></table></figure>\n<p>3.定义一个变量进行测试<br>首先测试一个没有进行防止xss攻击的测试</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;p v-html&#x3D;&quot;test&quot;&gt;&lt;&#x2F;p&gt;</span><br><span class=\"line\"> </span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  data () &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      test: &#96;&lt;a onclick&#x3D;&#39;alert(&quot;xss攻击&quot;)&#39;&gt;链接&lt;&#x2F;a&gt;&#96;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>结果，js事件直接被翻译了</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xss攻击</span><br></pre></td></tr></table></figure>\n<p>因此应该杜绝这些情况，解决方法如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;p v-html&#x3D;&quot;$xss(test)&quot;&gt;&lt;&#x2F;p&gt;</span><br><span class=\"line\">import xss from &#39;xss&#39;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  data () &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      test: &#96;&lt;a onclick&#x3D;&#39;alert(&quot;xss攻击&quot;)&#39;&gt;链接&lt;&#x2F;a&gt;&#96;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">Object.defineProperty(Vue.prototype, &#39;$xss&#39;, &#123;</span><br><span class=\"line\">  value: xss</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>此时a标签会保留，但是onclick事件被拦截了</p>\n<h2 id=\"vue-axios的几种请求方式\"><a href=\"#vue-axios的几种请求方式\" class=\"headerlink\" title=\"vue axios的几种请求方式\"></a>vue axios的几种请求方式</h2><p>axios的请求方法：get、post、put、patch、delete</p>\n<ul>\n<li>get：获取数据</li>\n<li>post：提交数据（表单提交+文件上传）</li>\n<li>put：更新数据（所有数据推送到后端）</li>\n<li>patch：更新数据（只将更改的数据推送到后端）</li>\n<li>delete：删除数据<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;axios的get请求第一种写法不带参数</span><br><span class=\"line\">axios.get(&#39;&#x2F;data.json&#39;).then((res)&#x3D;&gt;&#123;</span><br><span class=\"line\">  console.log(res)</span><br><span class=\"line\">&#125;),</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;axios的get请求第一种写法带参数</span><br><span class=\"line\">axios.get(&#39;&#x2F;data.json&#39;,&#123;</span><br><span class=\"line\">  params:&#123;</span><br><span class=\"line\">    id:12</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;).then((res)&#x3D;&gt;&#123;</span><br><span class=\"line\">  console.log(res)</span><br><span class=\"line\">&#125;),</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;axios的get请求第二种写法不带参数</span><br><span class=\"line\">axios(&#123;</span><br><span class=\"line\">  method:&#39;get&#39;,</span><br><span class=\"line\">  url:&#39;&#x2F;data.json&#39;,</span><br><span class=\"line\">&#125;).then(res&#x3D;&gt;&#123;</span><br><span class=\"line\">  console.log(res)</span><br><span class=\"line\">&#125;),</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;axios的get请求第二种写法带参数</span><br><span class=\"line\">axios(&#123;</span><br><span class=\"line\">  method:&#39;get&#39;,</span><br><span class=\"line\">  url:&#39;&#x2F;data.json&#39;,</span><br><span class=\"line\">  params:&#123;</span><br><span class=\"line\">    id:12</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;).then(res&#x3D;&gt;&#123;</span><br><span class=\"line\">  console.log(res)</span><br><span class=\"line\">&#125;),</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;axios的post请求第一种写法</span><br><span class=\"line\">let data &#x3D; &#123;</span><br><span class=\"line\">  id:12</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">axios.post(&#39;&#x2F;post&#39;,data).then((res)&#x3D;&gt;&#123;</span><br><span class=\"line\">  console.log(res)</span><br><span class=\"line\">&#125;),</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;axios的post请求第二种写法</span><br><span class=\"line\">axios(&#123;</span><br><span class=\"line\">  method:&#39;post&#39;,</span><br><span class=\"line\">  url:&#39;&#x2F;post&#39;,</span><br><span class=\"line\">  data:data</span><br><span class=\"line\">&#125;).then(res&#x3D;&gt;&#123;</span><br><span class=\"line\">  console.log(res)</span><br><span class=\"line\">&#125;),</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;form-data请求,图片上传、文件上传，文件格式为：multipart&#x2F;form-data，其他请求为application&#x2F;json</span><br><span class=\"line\"></span><br><span class=\"line\">let formData &#x3D; new formData()</span><br><span class=\"line\">for(let key in data)&#123;</span><br><span class=\"line\">  formData.append(key,data[key])</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">axios.post(&#39;&#x2F;post&#39;,formData).then(res&#x3D;&gt;&#123;</span><br><span class=\"line\">  console.log(res)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;axios之put请求</span><br><span class=\"line\">axios.put(&#39;&#x2F;put&#39;,data).then(res&#x3D;&gt;&#123;</span><br><span class=\"line\">  console.log(res)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;axios之patch请求</span><br><span class=\"line\">axios.patch(&#39;&#x2F;patch&#39;,data).then(res&#x3D;&gt;&#123;</span><br><span class=\"line\">  console.log(res)</span><br><span class=\"line\">&#125;),</span><br><span class=\"line\"></span><br><span class=\"line\">  &#x2F;&#x2F;axios之delete请求的第一种写法</span><br><span class=\"line\">  axios.delete(&#39;&#x2F;delete&#39;,&#123;</span><br><span class=\"line\">    params:&#123;</span><br><span class=\"line\">      id:12</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;).then(res&#x3D;&gt;&#123;</span><br><span class=\"line\">    console.log(res)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#x2F;&#x2F;说明:当使用第一种写法参数为params时，请求接口时参数是放在URL里面的。</span><br><span class=\"line\">&#x2F;&#x2F; 例：http:&#x2F;&#x2F;localhost:8080&#x2F;delete?id&#x3D;12,而写成第二种方法data就不会，根据实际情况使用</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;axios之delete请求的第二种写法</span><br><span class=\"line\">axios.delete(&#39;&#x2F;delete&#39;,&#123;</span><br><span class=\"line\">  data:&#123;</span><br><span class=\"line\">    id:12</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;).then(res&#x3D;&gt;&#123;</span><br><span class=\"line\">  console.log(res)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"js如何比较浮点数\"><a href=\"#js如何比较浮点数\" class=\"headerlink\" title=\"js如何比较浮点数\"></a>js如何比较浮点数</h2><p>浮点数的定义，非整数的Number类型无法用<code>=</code>来比较，这就是为什么在JavaScript中，0.1+0.2不能=0.3：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">console.log( 0.1 + 0.2 &#x3D;&#x3D; 0.3);</span><br><span class=\"line\">false</span><br></pre></td></tr></table></figure>\n<p>这里输出的结果是<code>false</code>，说明两边不相等的，这是浮点运算的特点，浮点数运算的精度问题导致等式左右的结果并不是严格相等，而是相差了个微小的值。</p>\n<p>所以实际上，这里错误的不是结论，而是比较的方法，正确的比较方法是使用<code>JavaScript</code>提供的最小精度值：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">console.log( Math.abs(0.1 + 0.2 - 0.3) &lt;&#x3D; Number.EPSILON);</span><br></pre></td></tr></table></figure>\n\n\n","site":{"data":{}},"more":"<p>简单记录一下面试的一些要点</p>\n<h2 id=\"javascript事件机制\"><a href=\"#javascript事件机制\" class=\"headerlink\" title=\"javascript事件机制\"></a>javascript事件机制</h2><p>先捕获，后冒泡，捕获从上到下，冒泡从下到上</p>\n<h3 id=\"冒泡机制\"><a href=\"#冒泡机制\" class=\"headerlink\" title=\"冒泡机制\"></a>冒泡机制</h3><p>IE提出的事件流叫做事件冒泡，即事件开始时由最具体的元素接收，然后逐级向上传播到较为不具体的节点，看一下以下示例</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class=\"line\">    &lt;title&gt;Title&lt;&#x2F;title&gt;</span><br><span class=\"line\">&lt;&#x2F;head&gt;</span><br><span class=\"line\">&lt;body onclick&#x3D;&quot;bodyClick()&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;div onclick&#x3D;&quot;divClick()&quot;&gt;</span><br><span class=\"line\">        &lt;button onclick&#x3D;&quot;btn()&quot;&gt;</span><br><span class=\"line\">            &lt;p onclick&#x3D;&quot;p()&quot;&gt;点击冒泡&lt;&#x2F;p&gt;</span><br><span class=\"line\">        &lt;&#x2F;button&gt;</span><br><span class=\"line\">    &lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;script&gt;</span><br><span class=\"line\">       </span><br><span class=\"line\">       function p()&#123;</span><br><span class=\"line\">          console.log(&#39;p标签被点击&#39;)</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">        function btn()&#123;</span><br><span class=\"line\">            console.log(&quot;button被点击&quot;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">         function divClick(event)&#123;</span><br><span class=\"line\">             console.log(&#39;div被点击&#39;);</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">        function bodyClick()&#123;</span><br><span class=\"line\">            console.log(&#39;body被点击&#39;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;&#x2F;script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br><span class=\"line\">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>\n<p>结果显而易见</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p标签被点击</span><br><span class=\"line\">button被点击</span><br><span class=\"line\">div被点击</span><br><span class=\"line\">body被点击</span><br></pre></td></tr></table></figure>\n<h3 id=\"捕获机制\"><a href=\"#捕获机制\" class=\"headerlink\" title=\"捕获机制\"></a>捕获机制</h3><p> 事件捕获流的思想是不太具体的DOM节点应该更早接收到事件，而最具体的节点应该最后接收到事件，针对上面同样的例子，点击按钮，那么此时click事件会按照这样传播：（下面我们就借用addEventListener的第三个参数来模拟事件捕获流）<br> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> &lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class=\"line\">    &lt;title&gt;Title&lt;&#x2F;title&gt;</span><br><span class=\"line\">&lt;&#x2F;head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;div&gt;</span><br><span class=\"line\">    &lt;button&gt;</span><br><span class=\"line\">        &lt;p&gt;点击捕获&lt;&#x2F;p&gt;</span><br><span class=\"line\">    &lt;&#x2F;button&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">    var oP&#x3D;document.querySelector(&#39;p&#39;);</span><br><span class=\"line\">    var oB&#x3D;document.querySelector(&#39;button&#39;);</span><br><span class=\"line\">    var oD&#x3D;document.querySelector(&#39;div&#39;);</span><br><span class=\"line\">    var oBody&#x3D;document.querySelector(&#39;body&#39;);</span><br><span class=\"line\"></span><br><span class=\"line\">    oP.addEventListener(&#39;click&#39;,function()&#123;</span><br><span class=\"line\">        console.log(&#39;p标签被点击&#39;)</span><br><span class=\"line\">    &#125;,true);</span><br><span class=\"line\"></span><br><span class=\"line\">    oB.addEventListener(&#39;click&#39;,function()&#123;</span><br><span class=\"line\">        console.log(&quot;button被点击&quot;)</span><br><span class=\"line\">    &#125;,true);</span><br><span class=\"line\"></span><br><span class=\"line\">    oD.addEventListener(&#39;click&#39;,  function()&#123;</span><br><span class=\"line\">        console.log(&#39;div被点击&#39;)</span><br><span class=\"line\">    &#125;,true);</span><br><span class=\"line\"></span><br><span class=\"line\">    oBody.addEventListener(&#39;click&#39;,function()&#123;</span><br><span class=\"line\">        console.log(&#39;body被点击&#39;)</span><br><span class=\"line\">    &#125;,true);</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><br> 与冒泡相反的结果<br> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">body被点击</span><br><span class=\"line\">div被点击</span><br><span class=\"line\">button被点击</span><br><span class=\"line\">p标签被点击</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"css省略文字的实现\"><a href=\"#css省略文字的实现\" class=\"headerlink\" title=\"css省略文字的实现\"></a>css省略文字的实现</h2> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">overflow: hidden;</span><br><span class=\"line\">white-space: nowrap;</span><br><span class=\"line\">text-overflow: allipsis</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"settimeout-setinterval，eval在赋值时有什么问题？\"><a href=\"#settimeout-setinterval，eval在赋值时有什么问题？\" class=\"headerlink\" title=\"settimeout, setinterval，eval在赋值时有什么问题？\"></a>settimeout, setinterval，eval在赋值时有什么问题？</h2><h2 id=\"vue解决跨域问题\"><a href=\"#vue解决跨域问题\" class=\"headerlink\" title=\"vue解决跨域问题\"></a>vue解决跨域问题</h2><h3 id=\"什么是跨域\"><a href=\"#什么是跨域\" class=\"headerlink\" title=\"什么是跨域\"></a>什么是跨域</h3><p>跨域：由于浏览器同源策略，凡是发送请求url的协议、域名、端口三者之间任意一个与当前页面地址不同即为跨域。存在跨域的情况：</p>\n<ul>\n<li>网络协议不同，如http协议访问https协议。</li>\n<li>端口不同，如80端口访问8080端口。</li>\n<li>域名不同，如qianduanblog.com访问baidu.com。</li>\n<li>子域名不同，如abc.qianduanblog.com访问def.qianduanblog.com。</li>\n<li>域名和域名对应ip,如<a href=\"http://www.a.com访问20.205.28.90/\">www.a.com访问20.205.28.90</a>.</li>\n</ul>\n<p>下面是项目使用vue-cli脚手架搭建<br>使用http-proxy-middleware 代理解决跨域问题<br>例如请求的url:“<a href=\"http://f.apiplus.cn/bj11x5.json%E2%80%9D\">http://f.apiplus.cn/bj11x5.json”</a><br>1、打开config/index.js,在proxyTable中添写如下代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">proxyTable: &#123;</span><br><span class=\"line\">  &#39;&#x2F;api&#39;: &#123;  &#x2F;&#x2F;使用&quot;&#x2F;api&quot;来代替&quot;http:&#x2F;&#x2F;f.apiplus.c&quot;</span><br><span class=\"line\">    target: &#39;http:&#x2F;&#x2F;f.apiplus.cn&#39;, &#x2F;&#x2F;源地址</span><br><span class=\"line\">    changeOrigin: true, &#x2F;&#x2F;是否跨域</span><br><span class=\"line\">    pathRewrite: &#123;</span><br><span class=\"line\">      &#39;^&#x2F;api&#39;: &#39;http:&#x2F;&#x2F;f.apiplus.cn&#39; &#x2F;&#x2F;路径重写</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>2、使用axios请求数据时直接使用“/api”：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getData () &#123;</span><br><span class=\"line\">axios.get(&#39;&#x2F;api&#x2F;bj11x5.json&#39;, function (res) &#123;</span><br><span class=\"line\">  console.log(res)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>通过这中方法去解决跨域，打包部署时还按这种方法会出问题。解决方法如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let serverUrl &#x3D; &#39;&#x2F;api&#x2F;&#39;  &#x2F;&#x2F;本地调试时</span><br><span class=\"line\">&#x2F;&#x2F; let serverUrl &#x3D; &#39;http:&#x2F;&#x2F;f.apiplus.cn&#x2F;&#39;  &#x2F;&#x2F;打包部署上线时</span><br></pre></td></tr></table></figure>\n<h2 id=\"vue解决xss注入问题\"><a href=\"#vue解决xss注入问题\" class=\"headerlink\" title=\"vue解决xss注入问题\"></a>vue解决xss注入问题</h2><p>1.在终端引入xss,命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install xss --save</span><br></pre></td></tr></table></figure>\n<p>2.在vue的页面进行引入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import xss from &#39;xss&#39;</span><br></pre></td></tr></table></figure>\n<p>3.定义一个变量进行测试<br>首先测试一个没有进行防止xss攻击的测试</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;p v-html&#x3D;&quot;test&quot;&gt;&lt;&#x2F;p&gt;</span><br><span class=\"line\"> </span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  data () &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      test: &#96;&lt;a onclick&#x3D;&#39;alert(&quot;xss攻击&quot;)&#39;&gt;链接&lt;&#x2F;a&gt;&#96;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>结果，js事件直接被翻译了</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xss攻击</span><br></pre></td></tr></table></figure>\n<p>因此应该杜绝这些情况，解决方法如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;p v-html&#x3D;&quot;$xss(test)&quot;&gt;&lt;&#x2F;p&gt;</span><br><span class=\"line\">import xss from &#39;xss&#39;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  data () &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      test: &#96;&lt;a onclick&#x3D;&#39;alert(&quot;xss攻击&quot;)&#39;&gt;链接&lt;&#x2F;a&gt;&#96;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">Object.defineProperty(Vue.prototype, &#39;$xss&#39;, &#123;</span><br><span class=\"line\">  value: xss</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>此时a标签会保留，但是onclick事件被拦截了</p>\n<h2 id=\"vue-axios的几种请求方式\"><a href=\"#vue-axios的几种请求方式\" class=\"headerlink\" title=\"vue axios的几种请求方式\"></a>vue axios的几种请求方式</h2><p>axios的请求方法：get、post、put、patch、delete</p>\n<ul>\n<li>get：获取数据</li>\n<li>post：提交数据（表单提交+文件上传）</li>\n<li>put：更新数据（所有数据推送到后端）</li>\n<li>patch：更新数据（只将更改的数据推送到后端）</li>\n<li>delete：删除数据<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;axios的get请求第一种写法不带参数</span><br><span class=\"line\">axios.get(&#39;&#x2F;data.json&#39;).then((res)&#x3D;&gt;&#123;</span><br><span class=\"line\">  console.log(res)</span><br><span class=\"line\">&#125;),</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;axios的get请求第一种写法带参数</span><br><span class=\"line\">axios.get(&#39;&#x2F;data.json&#39;,&#123;</span><br><span class=\"line\">  params:&#123;</span><br><span class=\"line\">    id:12</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;).then((res)&#x3D;&gt;&#123;</span><br><span class=\"line\">  console.log(res)</span><br><span class=\"line\">&#125;),</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;axios的get请求第二种写法不带参数</span><br><span class=\"line\">axios(&#123;</span><br><span class=\"line\">  method:&#39;get&#39;,</span><br><span class=\"line\">  url:&#39;&#x2F;data.json&#39;,</span><br><span class=\"line\">&#125;).then(res&#x3D;&gt;&#123;</span><br><span class=\"line\">  console.log(res)</span><br><span class=\"line\">&#125;),</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;axios的get请求第二种写法带参数</span><br><span class=\"line\">axios(&#123;</span><br><span class=\"line\">  method:&#39;get&#39;,</span><br><span class=\"line\">  url:&#39;&#x2F;data.json&#39;,</span><br><span class=\"line\">  params:&#123;</span><br><span class=\"line\">    id:12</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;).then(res&#x3D;&gt;&#123;</span><br><span class=\"line\">  console.log(res)</span><br><span class=\"line\">&#125;),</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;axios的post请求第一种写法</span><br><span class=\"line\">let data &#x3D; &#123;</span><br><span class=\"line\">  id:12</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">axios.post(&#39;&#x2F;post&#39;,data).then((res)&#x3D;&gt;&#123;</span><br><span class=\"line\">  console.log(res)</span><br><span class=\"line\">&#125;),</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;axios的post请求第二种写法</span><br><span class=\"line\">axios(&#123;</span><br><span class=\"line\">  method:&#39;post&#39;,</span><br><span class=\"line\">  url:&#39;&#x2F;post&#39;,</span><br><span class=\"line\">  data:data</span><br><span class=\"line\">&#125;).then(res&#x3D;&gt;&#123;</span><br><span class=\"line\">  console.log(res)</span><br><span class=\"line\">&#125;),</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;form-data请求,图片上传、文件上传，文件格式为：multipart&#x2F;form-data，其他请求为application&#x2F;json</span><br><span class=\"line\"></span><br><span class=\"line\">let formData &#x3D; new formData()</span><br><span class=\"line\">for(let key in data)&#123;</span><br><span class=\"line\">  formData.append(key,data[key])</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">axios.post(&#39;&#x2F;post&#39;,formData).then(res&#x3D;&gt;&#123;</span><br><span class=\"line\">  console.log(res)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;axios之put请求</span><br><span class=\"line\">axios.put(&#39;&#x2F;put&#39;,data).then(res&#x3D;&gt;&#123;</span><br><span class=\"line\">  console.log(res)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;axios之patch请求</span><br><span class=\"line\">axios.patch(&#39;&#x2F;patch&#39;,data).then(res&#x3D;&gt;&#123;</span><br><span class=\"line\">  console.log(res)</span><br><span class=\"line\">&#125;),</span><br><span class=\"line\"></span><br><span class=\"line\">  &#x2F;&#x2F;axios之delete请求的第一种写法</span><br><span class=\"line\">  axios.delete(&#39;&#x2F;delete&#39;,&#123;</span><br><span class=\"line\">    params:&#123;</span><br><span class=\"line\">      id:12</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;).then(res&#x3D;&gt;&#123;</span><br><span class=\"line\">    console.log(res)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#x2F;&#x2F;说明:当使用第一种写法参数为params时，请求接口时参数是放在URL里面的。</span><br><span class=\"line\">&#x2F;&#x2F; 例：http:&#x2F;&#x2F;localhost:8080&#x2F;delete?id&#x3D;12,而写成第二种方法data就不会，根据实际情况使用</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;axios之delete请求的第二种写法</span><br><span class=\"line\">axios.delete(&#39;&#x2F;delete&#39;,&#123;</span><br><span class=\"line\">  data:&#123;</span><br><span class=\"line\">    id:12</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;).then(res&#x3D;&gt;&#123;</span><br><span class=\"line\">  console.log(res)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"js如何比较浮点数\"><a href=\"#js如何比较浮点数\" class=\"headerlink\" title=\"js如何比较浮点数\"></a>js如何比较浮点数</h2><p>浮点数的定义，非整数的Number类型无法用<code>=</code>来比较，这就是为什么在JavaScript中，0.1+0.2不能=0.3：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">console.log( 0.1 + 0.2 &#x3D;&#x3D; 0.3);</span><br><span class=\"line\">false</span><br></pre></td></tr></table></figure>\n<p>这里输出的结果是<code>false</code>，说明两边不相等的，这是浮点运算的特点，浮点数运算的精度问题导致等式左右的结果并不是严格相等，而是相差了个微小的值。</p>\n<p>所以实际上，这里错误的不是结论，而是比较的方法，正确的比较方法是使用<code>JavaScript</code>提供的最小精度值：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">console.log( Math.abs(0.1 + 0.2 - 0.3) &lt;&#x3D; Number.EPSILON);</span><br></pre></td></tr></table></figure>\n\n\n"},{"layout":"post","title":"在debian上使用kubeadm搭建 v1.16.3版本Kubernetes集群","date":"2020-09-09T16:00:00.000Z","excerpt":"在debian上使用一键安装工具kubeadm安装kubernete环境，摆脱繁琐的k8s配置","comments":1,"_content":"\n# 环境准备\ndebian 9 机器一台，作为master节点和node节点\n\n## 首先安装docker\n[离线安装docker](https://www.cnblogs.com/luoSteel/p/10038954.html)  \n[docker 安装包下载地址](https://download.docker.com/linux/static/stable/x86_64/)  \n### 解压\n```\ntar -xvf docker-18.06.1-ce.tgz\n```\n### 将解压出来的docker文件内容移动到 /usr/bin/ 目录下\n```\ncp docker/* /usr/bin/\n```\n### 将docker注册为service\n```\nvim /etc/systemd/system/docker.service\n```\n将下列配置复制到docker.service中并保存\n```\n[Unit]\n\nDescription=Docker Application Container Engine\n\nDocumentation=https://docs.docker.com\n\nAfter=network-online.target firewalld.service\n\nWants=network-online.target\n\n[Service]\n\nType=notify\n\n# the default is not to use systemd for cgroups because the delegate issues still\n\n# exists and systemd currently does not support the cgroup feature set required\n\n# for containers run by docker\n\nExecStart=/usr/bin/dockerd\n\nExecReload=/bin/kill -s HUP $MAINPID\n\n# Having non-zero Limit*s causes performance problems due to accounting overhead\n\n# in the kernel. We recommend using cgroups to do container-local accounting.\n\nLimitNOFILE=infinity\n\nLimitNPROC=infinity\n\nLimitCORE=infinity\n\n# Uncomment TasksMax if your systemd version supports it.\n\n# Only systemd 226 and above support this version.\n\n#TasksMax=infinity\n\nTimeoutStartSec=0\n\n# set delegate yes so that systemd does not reset the cgroups of docker containers\n\nDelegate=yes\n\n# kill only the docker process, not all processes in the cgroup\n\nKillMode=process\n\n# restart the docker process if it exits prematurely\n\nRestart=on-failure\n\nStartLimitBurst=3\n\nStartLimitInterval=60s\n\n \n\n[Install]\n\nWantedBy=multi-user.target\n```\n### 启动\n```\nchmod +x /etc/systemd/system/docker.service             #添加文件权限并启动docker\nsystemctl daemon-reload                                 #重载unit配置文件\nsystemctl start docker                                  #启动Docker\nsystemctl enable docker.service                         #设置开机自启\n```\n### 验证\n```\nsystemctl status docker                                 #查看Docker状态\ndocker -v                                               #查看Docker版本\n```\n\n## 关闭swap、selinux、防火墙\n```\nswapoff -a\n\nsystemctl stop firewalld\n```\n\n## 添加k8s官方源\n需要科学上网\n```\nsudo curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add\nsudo cat <<EOF >/etc/apt/sources.list.d/kubernetes.list\ndeb http://apt.kubernetes.io/ kubernetes-xenial main\nEOF\nsudo apt-get update\nsudo apt-get install kubelet=1.16.3-00 kubeadm=1.16.3-00 kubectl=1.16.3-00 kubernetes-cni\n```\n\n# 使用kubeadm部署k8s\n## 初始化环境\n因为官方镜像比较慢，所以使用阿里镜像\n```\n$ kubeadm init \\\n    --image-repository registry.aliyuncs.com/google_containers \\\n    --kubernetes-version v1.16.3 \\\n    --pod-network-cidr=10.244.0.0/16\n...\nYour Kubernetes control-plane has initialized successfully!\n\nTo start using your cluster, you need to run the following as a regular user:\n\n  mkdir -p $HOME/.kube\n  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n  sudo chown $(id -u):$(id -g) $HOME/.kube/config\n\nYou should now deploy a pod network to the cluster.\nRun \"kubectl apply -f [podnetwork].yaml\" with one of the options listed at:\n  https://kubernetes.io/docs/concepts/cluster-administration/addons/\n\nYou can now join any number of control-plane nodes by copying certificate authorities \nand service account keys on each node and then running the following as root:\n\n  kubeadm join 192.168.9.10:6443 --token px979r.mphk9ee5ya8fgy44 \\\n    --discovery-token-ca-cert-hash sha256:5e7c7cd1cc1f86c0761e54b9380de22968b6b221cb98939c14ab2942223f6f51 \\\n    --control-plane \t  \n\nThen you can join any number of worker nodes by running the following on each as root:\n\nkubeadm join 192.168.9.10:6443 --token px979r.mphk9ee5ya8fgy44 \\\n    --discovery-token-ca-cert-hash sha256:5e7c7cd1cc1f86c0761e54b9380de22968b6b221cb98939c14ab2942223f6f51 \n\n```\n根据提示设置`kubeconfig`，或者添加子节点\n## 设置k8s的网络插件\n使用`kubectl get pods -A`发现`coredns`状态不是`running`，需要配置网络插件\n```\n$ kubectl apply -f \"https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\\n')\"\n```\n## 安装helm\n### 去除节点污点\n只有一个master节点的情况下，master节点不允许运行资源，需要去掉污点\n```\n$ kubectl get nodes\nNAME       STATUS   ROLES    AGE    VERSION\nlinx-dev   Ready    master   138m   v1.16.3\n\n$ kubectl describe node linx-dev  | grep Taint\nTaints:             node-role.kubernetes.io/master:NoSchedule\n\n// 如果Taints是none，则不需要去除污点\nkubectl taint nodes linx-dev node-role.kubernetes.io/master:NoSchedule-\n```\n\n### 下载客户端\n```\nwget https://get.helm.sh/helm-v2.16.3-linux-amd64.tar.gz\n```\n### 解压缩并拷贝helm二进制文件\n```\ntar xf helm-v2.16.3-linux-amd64.tar.gz\ncp linux-amd64/helm /usr/local/bin\n```\n### 添加阿里云的仓库\n```\nhelm init --client-only --stable-repo-url https://aliacs-app-catalog.oss-cn-hangzhou.aliyuncs.com/charts/\nhelm repo add incubator https://aliacs-app-catalog.oss-cn-hangzhou.aliyuncs.com/charts-incubator/\nhelm repo update\n```\n### 创建 Kubernetes 的服务帐号和绑定角色\n```\n// 创建serviceaccount\nkubectl create serviceaccount --namespace kube-system tiller\n\n// 创建角色绑定\nkubectl create clusterrolebinding tiller-cluster-rule --clusterrole=cluster-admin --serviceaccount=kube-system:tiller\n```\n### 创建服务端 使用-i指定阿里云仓库\n```\nhelm init --service-account tiller --upgrade -i registry.cn-hangzhou.aliyuncs.com/google_containers/tiller:v2.16.3  --stable-repo-url https://kubernetes.oss-cn-hangzhou.aliyuncs.com/charts\n```\n\n## 安装openebs存储服务\n### 部署openebs\n```\nkubectl apply -f https://openebs.github.io/charts/openebs-operator-1.5.0.yaml\n```\n### 设置默认存储\n```\n$ kubectl patch storageclass openebs-hostpath -p '{\"metadata\": {\"annotations\":{\"storageclass.kubernetes.io/is-default-class\":\"true\"}}}'\nstorageclass.storage.k8s.io/openebs-hostpath patched\n```\n## 安装kubesphere\n\n```\nkubectl apply -f https://raw.githubusercontent.com/kubesphere/ks-installer/master/kubesphere-minimal.yaml\n```\n\n## 参考\n[Helm离线安装](https://www.jianshu.com/p/2bb1dfdadee8)","source":"_posts/2020-09-10-debian-install-k8s.md","raw":"---\nlayout: post\ntitle: \"在debian上使用kubeadm搭建 v1.16.3版本Kubernetes集群\"\ndate: 2020-09-10\nexcerpt: \"在debian上使用一键安装工具kubeadm安装kubernete环境，摆脱繁琐的k8s配置\"\ntags: [linux, kubernetes, debian]\ncomments: true\n---\n\n# 环境准备\ndebian 9 机器一台，作为master节点和node节点\n\n## 首先安装docker\n[离线安装docker](https://www.cnblogs.com/luoSteel/p/10038954.html)  \n[docker 安装包下载地址](https://download.docker.com/linux/static/stable/x86_64/)  \n### 解压\n```\ntar -xvf docker-18.06.1-ce.tgz\n```\n### 将解压出来的docker文件内容移动到 /usr/bin/ 目录下\n```\ncp docker/* /usr/bin/\n```\n### 将docker注册为service\n```\nvim /etc/systemd/system/docker.service\n```\n将下列配置复制到docker.service中并保存\n```\n[Unit]\n\nDescription=Docker Application Container Engine\n\nDocumentation=https://docs.docker.com\n\nAfter=network-online.target firewalld.service\n\nWants=network-online.target\n\n[Service]\n\nType=notify\n\n# the default is not to use systemd for cgroups because the delegate issues still\n\n# exists and systemd currently does not support the cgroup feature set required\n\n# for containers run by docker\n\nExecStart=/usr/bin/dockerd\n\nExecReload=/bin/kill -s HUP $MAINPID\n\n# Having non-zero Limit*s causes performance problems due to accounting overhead\n\n# in the kernel. We recommend using cgroups to do container-local accounting.\n\nLimitNOFILE=infinity\n\nLimitNPROC=infinity\n\nLimitCORE=infinity\n\n# Uncomment TasksMax if your systemd version supports it.\n\n# Only systemd 226 and above support this version.\n\n#TasksMax=infinity\n\nTimeoutStartSec=0\n\n# set delegate yes so that systemd does not reset the cgroups of docker containers\n\nDelegate=yes\n\n# kill only the docker process, not all processes in the cgroup\n\nKillMode=process\n\n# restart the docker process if it exits prematurely\n\nRestart=on-failure\n\nStartLimitBurst=3\n\nStartLimitInterval=60s\n\n \n\n[Install]\n\nWantedBy=multi-user.target\n```\n### 启动\n```\nchmod +x /etc/systemd/system/docker.service             #添加文件权限并启动docker\nsystemctl daemon-reload                                 #重载unit配置文件\nsystemctl start docker                                  #启动Docker\nsystemctl enable docker.service                         #设置开机自启\n```\n### 验证\n```\nsystemctl status docker                                 #查看Docker状态\ndocker -v                                               #查看Docker版本\n```\n\n## 关闭swap、selinux、防火墙\n```\nswapoff -a\n\nsystemctl stop firewalld\n```\n\n## 添加k8s官方源\n需要科学上网\n```\nsudo curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add\nsudo cat <<EOF >/etc/apt/sources.list.d/kubernetes.list\ndeb http://apt.kubernetes.io/ kubernetes-xenial main\nEOF\nsudo apt-get update\nsudo apt-get install kubelet=1.16.3-00 kubeadm=1.16.3-00 kubectl=1.16.3-00 kubernetes-cni\n```\n\n# 使用kubeadm部署k8s\n## 初始化环境\n因为官方镜像比较慢，所以使用阿里镜像\n```\n$ kubeadm init \\\n    --image-repository registry.aliyuncs.com/google_containers \\\n    --kubernetes-version v1.16.3 \\\n    --pod-network-cidr=10.244.0.0/16\n...\nYour Kubernetes control-plane has initialized successfully!\n\nTo start using your cluster, you need to run the following as a regular user:\n\n  mkdir -p $HOME/.kube\n  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n  sudo chown $(id -u):$(id -g) $HOME/.kube/config\n\nYou should now deploy a pod network to the cluster.\nRun \"kubectl apply -f [podnetwork].yaml\" with one of the options listed at:\n  https://kubernetes.io/docs/concepts/cluster-administration/addons/\n\nYou can now join any number of control-plane nodes by copying certificate authorities \nand service account keys on each node and then running the following as root:\n\n  kubeadm join 192.168.9.10:6443 --token px979r.mphk9ee5ya8fgy44 \\\n    --discovery-token-ca-cert-hash sha256:5e7c7cd1cc1f86c0761e54b9380de22968b6b221cb98939c14ab2942223f6f51 \\\n    --control-plane \t  \n\nThen you can join any number of worker nodes by running the following on each as root:\n\nkubeadm join 192.168.9.10:6443 --token px979r.mphk9ee5ya8fgy44 \\\n    --discovery-token-ca-cert-hash sha256:5e7c7cd1cc1f86c0761e54b9380de22968b6b221cb98939c14ab2942223f6f51 \n\n```\n根据提示设置`kubeconfig`，或者添加子节点\n## 设置k8s的网络插件\n使用`kubectl get pods -A`发现`coredns`状态不是`running`，需要配置网络插件\n```\n$ kubectl apply -f \"https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\\n')\"\n```\n## 安装helm\n### 去除节点污点\n只有一个master节点的情况下，master节点不允许运行资源，需要去掉污点\n```\n$ kubectl get nodes\nNAME       STATUS   ROLES    AGE    VERSION\nlinx-dev   Ready    master   138m   v1.16.3\n\n$ kubectl describe node linx-dev  | grep Taint\nTaints:             node-role.kubernetes.io/master:NoSchedule\n\n// 如果Taints是none，则不需要去除污点\nkubectl taint nodes linx-dev node-role.kubernetes.io/master:NoSchedule-\n```\n\n### 下载客户端\n```\nwget https://get.helm.sh/helm-v2.16.3-linux-amd64.tar.gz\n```\n### 解压缩并拷贝helm二进制文件\n```\ntar xf helm-v2.16.3-linux-amd64.tar.gz\ncp linux-amd64/helm /usr/local/bin\n```\n### 添加阿里云的仓库\n```\nhelm init --client-only --stable-repo-url https://aliacs-app-catalog.oss-cn-hangzhou.aliyuncs.com/charts/\nhelm repo add incubator https://aliacs-app-catalog.oss-cn-hangzhou.aliyuncs.com/charts-incubator/\nhelm repo update\n```\n### 创建 Kubernetes 的服务帐号和绑定角色\n```\n// 创建serviceaccount\nkubectl create serviceaccount --namespace kube-system tiller\n\n// 创建角色绑定\nkubectl create clusterrolebinding tiller-cluster-rule --clusterrole=cluster-admin --serviceaccount=kube-system:tiller\n```\n### 创建服务端 使用-i指定阿里云仓库\n```\nhelm init --service-account tiller --upgrade -i registry.cn-hangzhou.aliyuncs.com/google_containers/tiller:v2.16.3  --stable-repo-url https://kubernetes.oss-cn-hangzhou.aliyuncs.com/charts\n```\n\n## 安装openebs存储服务\n### 部署openebs\n```\nkubectl apply -f https://openebs.github.io/charts/openebs-operator-1.5.0.yaml\n```\n### 设置默认存储\n```\n$ kubectl patch storageclass openebs-hostpath -p '{\"metadata\": {\"annotations\":{\"storageclass.kubernetes.io/is-default-class\":\"true\"}}}'\nstorageclass.storage.k8s.io/openebs-hostpath patched\n```\n## 安装kubesphere\n\n```\nkubectl apply -f https://raw.githubusercontent.com/kubesphere/ks-installer/master/kubesphere-minimal.yaml\n```\n\n## 参考\n[Helm离线安装](https://www.jianshu.com/p/2bb1dfdadee8)","slug":"2020-09-10-debian-install-k8s","published":1,"updated":"2020-10-09T02:59:50.425Z","photos":[],"link":"","_id":"ckgkk27t8000ukcv0ffn56pos","content":"<h1 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h1><p>debian 9 机器一台，作为master节点和node节点</p>\n<h2 id=\"首先安装docker\"><a href=\"#首先安装docker\" class=\"headerlink\" title=\"首先安装docker\"></a>首先安装docker</h2><p><a href=\"https://www.cnblogs.com/luoSteel/p/10038954.html\">离线安装docker</a><br><a href=\"https://download.docker.com/linux/static/stable/x86_64/\">docker 安装包下载地址</a>  </p>\n<h3 id=\"解压\"><a href=\"#解压\" class=\"headerlink\" title=\"解压\"></a>解压</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -xvf docker-18.06.1-ce.tgz</span><br></pre></td></tr></table></figure>\n<h3 id=\"将解压出来的docker文件内容移动到-usr-bin-目录下\"><a href=\"#将解压出来的docker文件内容移动到-usr-bin-目录下\" class=\"headerlink\" title=\"将解压出来的docker文件内容移动到 /usr/bin/ 目录下\"></a>将解压出来的docker文件内容移动到 /usr/bin/ 目录下</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp docker&#x2F;* &#x2F;usr&#x2F;bin&#x2F;</span><br></pre></td></tr></table></figure>\n<h3 id=\"将docker注册为service\"><a href=\"#将docker注册为service\" class=\"headerlink\" title=\"将docker注册为service\"></a>将docker注册为service</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;docker.service</span><br></pre></td></tr></table></figure>\n<p>将下列配置复制到docker.service中并保存</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Unit]</span><br><span class=\"line\"></span><br><span class=\"line\">Description&#x3D;Docker Application Container Engine</span><br><span class=\"line\"></span><br><span class=\"line\">Documentation&#x3D;https:&#x2F;&#x2F;docs.docker.com</span><br><span class=\"line\"></span><br><span class=\"line\">After&#x3D;network-online.target firewalld.service</span><br><span class=\"line\"></span><br><span class=\"line\">Wants&#x3D;network-online.target</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\"></span><br><span class=\"line\">Type&#x3D;notify</span><br><span class=\"line\"></span><br><span class=\"line\"># the default is not to use systemd for cgroups because the delegate issues still</span><br><span class=\"line\"></span><br><span class=\"line\"># exists and systemd currently does not support the cgroup feature set required</span><br><span class=\"line\"></span><br><span class=\"line\"># for containers run by docker</span><br><span class=\"line\"></span><br><span class=\"line\">ExecStart&#x3D;&#x2F;usr&#x2F;bin&#x2F;dockerd</span><br><span class=\"line\"></span><br><span class=\"line\">ExecReload&#x3D;&#x2F;bin&#x2F;kill -s HUP $MAINPID</span><br><span class=\"line\"></span><br><span class=\"line\"># Having non-zero Limit*s causes performance problems due to accounting overhead</span><br><span class=\"line\"></span><br><span class=\"line\"># in the kernel. We recommend using cgroups to do container-local accounting.</span><br><span class=\"line\"></span><br><span class=\"line\">LimitNOFILE&#x3D;infinity</span><br><span class=\"line\"></span><br><span class=\"line\">LimitNPROC&#x3D;infinity</span><br><span class=\"line\"></span><br><span class=\"line\">LimitCORE&#x3D;infinity</span><br><span class=\"line\"></span><br><span class=\"line\"># Uncomment TasksMax if your systemd version supports it.</span><br><span class=\"line\"></span><br><span class=\"line\"># Only systemd 226 and above support this version.</span><br><span class=\"line\"></span><br><span class=\"line\">#TasksMax&#x3D;infinity</span><br><span class=\"line\"></span><br><span class=\"line\">TimeoutStartSec&#x3D;0</span><br><span class=\"line\"></span><br><span class=\"line\"># set delegate yes so that systemd does not reset the cgroups of docker containers</span><br><span class=\"line\"></span><br><span class=\"line\">Delegate&#x3D;yes</span><br><span class=\"line\"></span><br><span class=\"line\"># kill only the docker process, not all processes in the cgroup</span><br><span class=\"line\"></span><br><span class=\"line\">KillMode&#x3D;process</span><br><span class=\"line\"></span><br><span class=\"line\"># restart the docker process if it exits prematurely</span><br><span class=\"line\"></span><br><span class=\"line\">Restart&#x3D;on-failure</span><br><span class=\"line\"></span><br><span class=\"line\">StartLimitBurst&#x3D;3</span><br><span class=\"line\"></span><br><span class=\"line\">StartLimitInterval&#x3D;60s</span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\"></span><br><span class=\"line\">WantedBy&#x3D;multi-user.target</span><br></pre></td></tr></table></figure>\n<h3 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod +x &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;docker.service             #添加文件权限并启动docker</span><br><span class=\"line\">systemctl daemon-reload                                 #重载unit配置文件</span><br><span class=\"line\">systemctl start docker                                  #启动Docker</span><br><span class=\"line\">systemctl enable docker.service                         #设置开机自启</span><br></pre></td></tr></table></figure>\n<h3 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl status docker                                 #查看Docker状态</span><br><span class=\"line\">docker -v                                               #查看Docker版本</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"关闭swap、selinux、防火墙\"><a href=\"#关闭swap、selinux、防火墙\" class=\"headerlink\" title=\"关闭swap、selinux、防火墙\"></a>关闭swap、selinux、防火墙</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">swapoff -a</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl stop firewalld</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"添加k8s官方源\"><a href=\"#添加k8s官方源\" class=\"headerlink\" title=\"添加k8s官方源\"></a>添加k8s官方源</h2><p>需要科学上网</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo curl -s https:&#x2F;&#x2F;packages.cloud.google.com&#x2F;apt&#x2F;doc&#x2F;apt-key.gpg | sudo apt-key add</span><br><span class=\"line\">sudo cat &lt;&lt;EOF &gt;&#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;kubernetes.list</span><br><span class=\"line\">deb http:&#x2F;&#x2F;apt.kubernetes.io&#x2F; kubernetes-xenial main</span><br><span class=\"line\">EOF</span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get install kubelet&#x3D;1.16.3-00 kubeadm&#x3D;1.16.3-00 kubectl&#x3D;1.16.3-00 kubernetes-cni</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"使用kubeadm部署k8s\"><a href=\"#使用kubeadm部署k8s\" class=\"headerlink\" title=\"使用kubeadm部署k8s\"></a>使用kubeadm部署k8s</h1><h2 id=\"初始化环境\"><a href=\"#初始化环境\" class=\"headerlink\" title=\"初始化环境\"></a>初始化环境</h2><p>因为官方镜像比较慢，所以使用阿里镜像</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubeadm init \\</span><br><span class=\"line\">    --image-repository registry.aliyuncs.com&#x2F;google_containers \\</span><br><span class=\"line\">    --kubernetes-version v1.16.3 \\</span><br><span class=\"line\">    --pod-network-cidr&#x3D;10.244.0.0&#x2F;16</span><br><span class=\"line\">...</span><br><span class=\"line\">Your Kubernetes control-plane has initialized successfully!</span><br><span class=\"line\"></span><br><span class=\"line\">To start using your cluster, you need to run the following as a regular user:</span><br><span class=\"line\"></span><br><span class=\"line\">  mkdir -p $HOME&#x2F;.kube</span><br><span class=\"line\">  sudo cp -i &#x2F;etc&#x2F;kubernetes&#x2F;admin.conf $HOME&#x2F;.kube&#x2F;config</span><br><span class=\"line\">  sudo chown $(id -u):$(id -g) $HOME&#x2F;.kube&#x2F;config</span><br><span class=\"line\"></span><br><span class=\"line\">You should now deploy a pod network to the cluster.</span><br><span class=\"line\">Run &quot;kubectl apply -f [podnetwork].yaml&quot; with one of the options listed at:</span><br><span class=\"line\">  https:&#x2F;&#x2F;kubernetes.io&#x2F;docs&#x2F;concepts&#x2F;cluster-administration&#x2F;addons&#x2F;</span><br><span class=\"line\"></span><br><span class=\"line\">You can now join any number of control-plane nodes by copying certificate authorities </span><br><span class=\"line\">and service account keys on each node and then running the following as root:</span><br><span class=\"line\"></span><br><span class=\"line\">  kubeadm join 192.168.9.10:6443 --token px979r.mphk9ee5ya8fgy44 \\</span><br><span class=\"line\">    --discovery-token-ca-cert-hash sha256:5e7c7cd1cc1f86c0761e54b9380de22968b6b221cb98939c14ab2942223f6f51 \\</span><br><span class=\"line\">    --control-plane \t  </span><br><span class=\"line\"></span><br><span class=\"line\">Then you can join any number of worker nodes by running the following on each as root:</span><br><span class=\"line\"></span><br><span class=\"line\">kubeadm join 192.168.9.10:6443 --token px979r.mphk9ee5ya8fgy44 \\</span><br><span class=\"line\">    --discovery-token-ca-cert-hash sha256:5e7c7cd1cc1f86c0761e54b9380de22968b6b221cb98939c14ab2942223f6f51 </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>根据提示设置<code>kubeconfig</code>，或者添加子节点</p>\n<h2 id=\"设置k8s的网络插件\"><a href=\"#设置k8s的网络插件\" class=\"headerlink\" title=\"设置k8s的网络插件\"></a>设置k8s的网络插件</h2><p>使用<code>kubectl get pods -A</code>发现<code>coredns</code>状态不是<code>running</code>，需要配置网络插件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl apply -f &quot;https:&#x2F;&#x2F;cloud.weave.works&#x2F;k8s&#x2F;net?k8s-version&#x3D;$(kubectl version | base64 | tr -d &#39;\\n&#39;)&quot;</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装helm\"><a href=\"#安装helm\" class=\"headerlink\" title=\"安装helm\"></a>安装helm</h2><h3 id=\"去除节点污点\"><a href=\"#去除节点污点\" class=\"headerlink\" title=\"去除节点污点\"></a>去除节点污点</h3><p>只有一个master节点的情况下，master节点不允许运行资源，需要去掉污点</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl get nodes</span><br><span class=\"line\">NAME       STATUS   ROLES    AGE    VERSION</span><br><span class=\"line\">linx-dev   Ready    master   138m   v1.16.3</span><br><span class=\"line\"></span><br><span class=\"line\">$ kubectl describe node linx-dev  | grep Taint</span><br><span class=\"line\">Taints:             node-role.kubernetes.io&#x2F;master:NoSchedule</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; 如果Taints是none，则不需要去除污点</span><br><span class=\"line\">kubectl taint nodes linx-dev node-role.kubernetes.io&#x2F;master:NoSchedule-</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"下载客户端\"><a href=\"#下载客户端\" class=\"headerlink\" title=\"下载客户端\"></a>下载客户端</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https:&#x2F;&#x2F;get.helm.sh&#x2F;helm-v2.16.3-linux-amd64.tar.gz</span><br></pre></td></tr></table></figure>\n<h3 id=\"解压缩并拷贝helm二进制文件\"><a href=\"#解压缩并拷贝helm二进制文件\" class=\"headerlink\" title=\"解压缩并拷贝helm二进制文件\"></a>解压缩并拷贝helm二进制文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar xf helm-v2.16.3-linux-amd64.tar.gz</span><br><span class=\"line\">cp linux-amd64&#x2F;helm &#x2F;usr&#x2F;local&#x2F;bin</span><br></pre></td></tr></table></figure>\n<h3 id=\"添加阿里云的仓库\"><a href=\"#添加阿里云的仓库\" class=\"headerlink\" title=\"添加阿里云的仓库\"></a>添加阿里云的仓库</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">helm init --client-only --stable-repo-url https:&#x2F;&#x2F;aliacs-app-catalog.oss-cn-hangzhou.aliyuncs.com&#x2F;charts&#x2F;</span><br><span class=\"line\">helm repo add incubator https:&#x2F;&#x2F;aliacs-app-catalog.oss-cn-hangzhou.aliyuncs.com&#x2F;charts-incubator&#x2F;</span><br><span class=\"line\">helm repo update</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建-Kubernetes-的服务帐号和绑定角色\"><a href=\"#创建-Kubernetes-的服务帐号和绑定角色\" class=\"headerlink\" title=\"创建 Kubernetes 的服务帐号和绑定角色\"></a>创建 Kubernetes 的服务帐号和绑定角色</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F; 创建serviceaccount</span><br><span class=\"line\">kubectl create serviceaccount --namespace kube-system tiller</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; 创建角色绑定</span><br><span class=\"line\">kubectl create clusterrolebinding tiller-cluster-rule --clusterrole&#x3D;cluster-admin --serviceaccount&#x3D;kube-system:tiller</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建服务端-使用-i指定阿里云仓库\"><a href=\"#创建服务端-使用-i指定阿里云仓库\" class=\"headerlink\" title=\"创建服务端 使用-i指定阿里云仓库\"></a>创建服务端 使用-i指定阿里云仓库</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">helm init --service-account tiller --upgrade -i registry.cn-hangzhou.aliyuncs.com&#x2F;google_containers&#x2F;tiller:v2.16.3  --stable-repo-url https:&#x2F;&#x2F;kubernetes.oss-cn-hangzhou.aliyuncs.com&#x2F;charts</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装openebs存储服务\"><a href=\"#安装openebs存储服务\" class=\"headerlink\" title=\"安装openebs存储服务\"></a>安装openebs存储服务</h2><h3 id=\"部署openebs\"><a href=\"#部署openebs\" class=\"headerlink\" title=\"部署openebs\"></a>部署openebs</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl apply -f https:&#x2F;&#x2F;openebs.github.io&#x2F;charts&#x2F;openebs-operator-1.5.0.yaml</span><br></pre></td></tr></table></figure>\n<h3 id=\"设置默认存储\"><a href=\"#设置默认存储\" class=\"headerlink\" title=\"设置默认存储\"></a>设置默认存储</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl patch storageclass openebs-hostpath -p &#39;&#123;&quot;metadata&quot;: &#123;&quot;annotations&quot;:&#123;&quot;storageclass.kubernetes.io&#x2F;is-default-class&quot;:&quot;true&quot;&#125;&#125;&#125;&#39;</span><br><span class=\"line\">storageclass.storage.k8s.io&#x2F;openebs-hostpath patched</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装kubesphere\"><a href=\"#安装kubesphere\" class=\"headerlink\" title=\"安装kubesphere\"></a>安装kubesphere</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl apply -f https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;kubesphere&#x2F;ks-installer&#x2F;master&#x2F;kubesphere-minimal.yaml</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"https://www.jianshu.com/p/2bb1dfdadee8\">Helm离线安装</a></p>\n","site":{"data":{}},"more":"<h1 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h1><p>debian 9 机器一台，作为master节点和node节点</p>\n<h2 id=\"首先安装docker\"><a href=\"#首先安装docker\" class=\"headerlink\" title=\"首先安装docker\"></a>首先安装docker</h2><p><a href=\"https://www.cnblogs.com/luoSteel/p/10038954.html\">离线安装docker</a><br><a href=\"https://download.docker.com/linux/static/stable/x86_64/\">docker 安装包下载地址</a>  </p>\n<h3 id=\"解压\"><a href=\"#解压\" class=\"headerlink\" title=\"解压\"></a>解压</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -xvf docker-18.06.1-ce.tgz</span><br></pre></td></tr></table></figure>\n<h3 id=\"将解压出来的docker文件内容移动到-usr-bin-目录下\"><a href=\"#将解压出来的docker文件内容移动到-usr-bin-目录下\" class=\"headerlink\" title=\"将解压出来的docker文件内容移动到 /usr/bin/ 目录下\"></a>将解压出来的docker文件内容移动到 /usr/bin/ 目录下</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp docker&#x2F;* &#x2F;usr&#x2F;bin&#x2F;</span><br></pre></td></tr></table></figure>\n<h3 id=\"将docker注册为service\"><a href=\"#将docker注册为service\" class=\"headerlink\" title=\"将docker注册为service\"></a>将docker注册为service</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;docker.service</span><br></pre></td></tr></table></figure>\n<p>将下列配置复制到docker.service中并保存</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Unit]</span><br><span class=\"line\"></span><br><span class=\"line\">Description&#x3D;Docker Application Container Engine</span><br><span class=\"line\"></span><br><span class=\"line\">Documentation&#x3D;https:&#x2F;&#x2F;docs.docker.com</span><br><span class=\"line\"></span><br><span class=\"line\">After&#x3D;network-online.target firewalld.service</span><br><span class=\"line\"></span><br><span class=\"line\">Wants&#x3D;network-online.target</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\"></span><br><span class=\"line\">Type&#x3D;notify</span><br><span class=\"line\"></span><br><span class=\"line\"># the default is not to use systemd for cgroups because the delegate issues still</span><br><span class=\"line\"></span><br><span class=\"line\"># exists and systemd currently does not support the cgroup feature set required</span><br><span class=\"line\"></span><br><span class=\"line\"># for containers run by docker</span><br><span class=\"line\"></span><br><span class=\"line\">ExecStart&#x3D;&#x2F;usr&#x2F;bin&#x2F;dockerd</span><br><span class=\"line\"></span><br><span class=\"line\">ExecReload&#x3D;&#x2F;bin&#x2F;kill -s HUP $MAINPID</span><br><span class=\"line\"></span><br><span class=\"line\"># Having non-zero Limit*s causes performance problems due to accounting overhead</span><br><span class=\"line\"></span><br><span class=\"line\"># in the kernel. We recommend using cgroups to do container-local accounting.</span><br><span class=\"line\"></span><br><span class=\"line\">LimitNOFILE&#x3D;infinity</span><br><span class=\"line\"></span><br><span class=\"line\">LimitNPROC&#x3D;infinity</span><br><span class=\"line\"></span><br><span class=\"line\">LimitCORE&#x3D;infinity</span><br><span class=\"line\"></span><br><span class=\"line\"># Uncomment TasksMax if your systemd version supports it.</span><br><span class=\"line\"></span><br><span class=\"line\"># Only systemd 226 and above support this version.</span><br><span class=\"line\"></span><br><span class=\"line\">#TasksMax&#x3D;infinity</span><br><span class=\"line\"></span><br><span class=\"line\">TimeoutStartSec&#x3D;0</span><br><span class=\"line\"></span><br><span class=\"line\"># set delegate yes so that systemd does not reset the cgroups of docker containers</span><br><span class=\"line\"></span><br><span class=\"line\">Delegate&#x3D;yes</span><br><span class=\"line\"></span><br><span class=\"line\"># kill only the docker process, not all processes in the cgroup</span><br><span class=\"line\"></span><br><span class=\"line\">KillMode&#x3D;process</span><br><span class=\"line\"></span><br><span class=\"line\"># restart the docker process if it exits prematurely</span><br><span class=\"line\"></span><br><span class=\"line\">Restart&#x3D;on-failure</span><br><span class=\"line\"></span><br><span class=\"line\">StartLimitBurst&#x3D;3</span><br><span class=\"line\"></span><br><span class=\"line\">StartLimitInterval&#x3D;60s</span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\"></span><br><span class=\"line\">WantedBy&#x3D;multi-user.target</span><br></pre></td></tr></table></figure>\n<h3 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod +x &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;docker.service             #添加文件权限并启动docker</span><br><span class=\"line\">systemctl daemon-reload                                 #重载unit配置文件</span><br><span class=\"line\">systemctl start docker                                  #启动Docker</span><br><span class=\"line\">systemctl enable docker.service                         #设置开机自启</span><br></pre></td></tr></table></figure>\n<h3 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl status docker                                 #查看Docker状态</span><br><span class=\"line\">docker -v                                               #查看Docker版本</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"关闭swap、selinux、防火墙\"><a href=\"#关闭swap、selinux、防火墙\" class=\"headerlink\" title=\"关闭swap、selinux、防火墙\"></a>关闭swap、selinux、防火墙</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">swapoff -a</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl stop firewalld</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"添加k8s官方源\"><a href=\"#添加k8s官方源\" class=\"headerlink\" title=\"添加k8s官方源\"></a>添加k8s官方源</h2><p>需要科学上网</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo curl -s https:&#x2F;&#x2F;packages.cloud.google.com&#x2F;apt&#x2F;doc&#x2F;apt-key.gpg | sudo apt-key add</span><br><span class=\"line\">sudo cat &lt;&lt;EOF &gt;&#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;kubernetes.list</span><br><span class=\"line\">deb http:&#x2F;&#x2F;apt.kubernetes.io&#x2F; kubernetes-xenial main</span><br><span class=\"line\">EOF</span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get install kubelet&#x3D;1.16.3-00 kubeadm&#x3D;1.16.3-00 kubectl&#x3D;1.16.3-00 kubernetes-cni</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"使用kubeadm部署k8s\"><a href=\"#使用kubeadm部署k8s\" class=\"headerlink\" title=\"使用kubeadm部署k8s\"></a>使用kubeadm部署k8s</h1><h2 id=\"初始化环境\"><a href=\"#初始化环境\" class=\"headerlink\" title=\"初始化环境\"></a>初始化环境</h2><p>因为官方镜像比较慢，所以使用阿里镜像</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubeadm init \\</span><br><span class=\"line\">    --image-repository registry.aliyuncs.com&#x2F;google_containers \\</span><br><span class=\"line\">    --kubernetes-version v1.16.3 \\</span><br><span class=\"line\">    --pod-network-cidr&#x3D;10.244.0.0&#x2F;16</span><br><span class=\"line\">...</span><br><span class=\"line\">Your Kubernetes control-plane has initialized successfully!</span><br><span class=\"line\"></span><br><span class=\"line\">To start using your cluster, you need to run the following as a regular user:</span><br><span class=\"line\"></span><br><span class=\"line\">  mkdir -p $HOME&#x2F;.kube</span><br><span class=\"line\">  sudo cp -i &#x2F;etc&#x2F;kubernetes&#x2F;admin.conf $HOME&#x2F;.kube&#x2F;config</span><br><span class=\"line\">  sudo chown $(id -u):$(id -g) $HOME&#x2F;.kube&#x2F;config</span><br><span class=\"line\"></span><br><span class=\"line\">You should now deploy a pod network to the cluster.</span><br><span class=\"line\">Run &quot;kubectl apply -f [podnetwork].yaml&quot; with one of the options listed at:</span><br><span class=\"line\">  https:&#x2F;&#x2F;kubernetes.io&#x2F;docs&#x2F;concepts&#x2F;cluster-administration&#x2F;addons&#x2F;</span><br><span class=\"line\"></span><br><span class=\"line\">You can now join any number of control-plane nodes by copying certificate authorities </span><br><span class=\"line\">and service account keys on each node and then running the following as root:</span><br><span class=\"line\"></span><br><span class=\"line\">  kubeadm join 192.168.9.10:6443 --token px979r.mphk9ee5ya8fgy44 \\</span><br><span class=\"line\">    --discovery-token-ca-cert-hash sha256:5e7c7cd1cc1f86c0761e54b9380de22968b6b221cb98939c14ab2942223f6f51 \\</span><br><span class=\"line\">    --control-plane \t  </span><br><span class=\"line\"></span><br><span class=\"line\">Then you can join any number of worker nodes by running the following on each as root:</span><br><span class=\"line\"></span><br><span class=\"line\">kubeadm join 192.168.9.10:6443 --token px979r.mphk9ee5ya8fgy44 \\</span><br><span class=\"line\">    --discovery-token-ca-cert-hash sha256:5e7c7cd1cc1f86c0761e54b9380de22968b6b221cb98939c14ab2942223f6f51 </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>根据提示设置<code>kubeconfig</code>，或者添加子节点</p>\n<h2 id=\"设置k8s的网络插件\"><a href=\"#设置k8s的网络插件\" class=\"headerlink\" title=\"设置k8s的网络插件\"></a>设置k8s的网络插件</h2><p>使用<code>kubectl get pods -A</code>发现<code>coredns</code>状态不是<code>running</code>，需要配置网络插件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl apply -f &quot;https:&#x2F;&#x2F;cloud.weave.works&#x2F;k8s&#x2F;net?k8s-version&#x3D;$(kubectl version | base64 | tr -d &#39;\\n&#39;)&quot;</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装helm\"><a href=\"#安装helm\" class=\"headerlink\" title=\"安装helm\"></a>安装helm</h2><h3 id=\"去除节点污点\"><a href=\"#去除节点污点\" class=\"headerlink\" title=\"去除节点污点\"></a>去除节点污点</h3><p>只有一个master节点的情况下，master节点不允许运行资源，需要去掉污点</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl get nodes</span><br><span class=\"line\">NAME       STATUS   ROLES    AGE    VERSION</span><br><span class=\"line\">linx-dev   Ready    master   138m   v1.16.3</span><br><span class=\"line\"></span><br><span class=\"line\">$ kubectl describe node linx-dev  | grep Taint</span><br><span class=\"line\">Taints:             node-role.kubernetes.io&#x2F;master:NoSchedule</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; 如果Taints是none，则不需要去除污点</span><br><span class=\"line\">kubectl taint nodes linx-dev node-role.kubernetes.io&#x2F;master:NoSchedule-</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"下载客户端\"><a href=\"#下载客户端\" class=\"headerlink\" title=\"下载客户端\"></a>下载客户端</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https:&#x2F;&#x2F;get.helm.sh&#x2F;helm-v2.16.3-linux-amd64.tar.gz</span><br></pre></td></tr></table></figure>\n<h3 id=\"解压缩并拷贝helm二进制文件\"><a href=\"#解压缩并拷贝helm二进制文件\" class=\"headerlink\" title=\"解压缩并拷贝helm二进制文件\"></a>解压缩并拷贝helm二进制文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar xf helm-v2.16.3-linux-amd64.tar.gz</span><br><span class=\"line\">cp linux-amd64&#x2F;helm &#x2F;usr&#x2F;local&#x2F;bin</span><br></pre></td></tr></table></figure>\n<h3 id=\"添加阿里云的仓库\"><a href=\"#添加阿里云的仓库\" class=\"headerlink\" title=\"添加阿里云的仓库\"></a>添加阿里云的仓库</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">helm init --client-only --stable-repo-url https:&#x2F;&#x2F;aliacs-app-catalog.oss-cn-hangzhou.aliyuncs.com&#x2F;charts&#x2F;</span><br><span class=\"line\">helm repo add incubator https:&#x2F;&#x2F;aliacs-app-catalog.oss-cn-hangzhou.aliyuncs.com&#x2F;charts-incubator&#x2F;</span><br><span class=\"line\">helm repo update</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建-Kubernetes-的服务帐号和绑定角色\"><a href=\"#创建-Kubernetes-的服务帐号和绑定角色\" class=\"headerlink\" title=\"创建 Kubernetes 的服务帐号和绑定角色\"></a>创建 Kubernetes 的服务帐号和绑定角色</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F; 创建serviceaccount</span><br><span class=\"line\">kubectl create serviceaccount --namespace kube-system tiller</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; 创建角色绑定</span><br><span class=\"line\">kubectl create clusterrolebinding tiller-cluster-rule --clusterrole&#x3D;cluster-admin --serviceaccount&#x3D;kube-system:tiller</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建服务端-使用-i指定阿里云仓库\"><a href=\"#创建服务端-使用-i指定阿里云仓库\" class=\"headerlink\" title=\"创建服务端 使用-i指定阿里云仓库\"></a>创建服务端 使用-i指定阿里云仓库</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">helm init --service-account tiller --upgrade -i registry.cn-hangzhou.aliyuncs.com&#x2F;google_containers&#x2F;tiller:v2.16.3  --stable-repo-url https:&#x2F;&#x2F;kubernetes.oss-cn-hangzhou.aliyuncs.com&#x2F;charts</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装openebs存储服务\"><a href=\"#安装openebs存储服务\" class=\"headerlink\" title=\"安装openebs存储服务\"></a>安装openebs存储服务</h2><h3 id=\"部署openebs\"><a href=\"#部署openebs\" class=\"headerlink\" title=\"部署openebs\"></a>部署openebs</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl apply -f https:&#x2F;&#x2F;openebs.github.io&#x2F;charts&#x2F;openebs-operator-1.5.0.yaml</span><br></pre></td></tr></table></figure>\n<h3 id=\"设置默认存储\"><a href=\"#设置默认存储\" class=\"headerlink\" title=\"设置默认存储\"></a>设置默认存储</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl patch storageclass openebs-hostpath -p &#39;&#123;&quot;metadata&quot;: &#123;&quot;annotations&quot;:&#123;&quot;storageclass.kubernetes.io&#x2F;is-default-class&quot;:&quot;true&quot;&#125;&#125;&#125;&#39;</span><br><span class=\"line\">storageclass.storage.k8s.io&#x2F;openebs-hostpath patched</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装kubesphere\"><a href=\"#安装kubesphere\" class=\"headerlink\" title=\"安装kubesphere\"></a>安装kubesphere</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl apply -f https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;kubesphere&#x2F;ks-installer&#x2F;master&#x2F;kubesphere-minimal.yaml</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"https://www.jianshu.com/p/2bb1dfdadee8\">Helm离线安装</a></p>\n"},{"layout":"post","title":"ruby的小技巧","date":"2020-09-13T16:00:00.000Z","excerpt":"ruby中一些常见的可以简化逻辑的用法","comments":1,"_content":"\n## &:的用法\n&:重要用于数组的方法，它可以让数组中的每一个元素都执行&:后的方法，相当于`item.fun()`，比如\n\n```\nirb(main):001:0> a = [1, 2, 3]\n=> [1, 2, 3]\nirb(main):002:0> a.map(&:to_s)\n=> [\"1\", \"2\", \"3\"]\n\n```\n等与\n```\nirb(main):004:0> a.map { |i| i.to_s  }\n=> [\"1\", \"2\", \"3\"]\n```\n\n## ruby中%的用法\n### %Q %q\n%Q用于替代双引号的字符串. 当你需要在字符串里放入很多引号时候, 可以直接用下面方法而不需要在引号前逐个添加反斜杠 (\")   \n%q用于代替单引号的字符串\n```\n2.3.0 :015 > %Q(rudy said, \"i'm not ruby\")\n => \"rudy said, \\\"i'm not ruby\\\"\"\n```\n```\n2.3.0 :031 > what_ruby = 'this is ruby'\n => \"this is ruby\"\n2.3.0 :032 > %Q!rudy said, \"#{what_ruby}\"!\n => \"rudy said, \\\"this is ruby\\\"\"\n2.3.0 :033 > %q!rudy said, \"#{what_ruby}\"!\n => \"rudy said, \\\"\\#{what_ruby}\\\"\"\n```\n(...)也可用其他非数字字母的符号或成对的符号代替, 诸如#...#,!...!, +...+,{...},[...], <...>,/.../等.\n```\n2.3.0 :016 > %Q/rudy said, \"i'm not ruby\"/\n => \"rudy said, \\\"i'm not ruby\\\"\"\n2.3.0 :017 > %Q#rudy said, \"i'm not ruby\"#\n => \"rudy said, \\\"i'm not ruby\\\"\"\n2.3.0 :018 > %Q!rudy said, \"i'm not ruby\"!\n => \"rudy said, \\\"i'm not ruby\\\"\"\n```\n\n### %W，%w\n%W语法近似于%Q, 用于表示其中元素被双引号括起的数组.\n%w语法近似于%q, 用于表示其中元素被单引号括起的数组.\n```\n2.3.0 :031 > what_ruby = 'this is ruby'\n => \"this is ruby\"\n2.3.0 :034 > %W(hello,kitty,cat,dog,what_ruby)\n => [\"hello,kitty,cat,dog,what_ruby\"]          ###不能用逗号隔开，只能用空格\n2.3.0 :035 > %W(hello kitty cat dog what_ruby)\n => [\"hello\", \"kitty\", \"cat\", \"dog\", \"what_ruby\"]\n2.3.0 :036 > %W(hello kitty cat dog #{what_ruby})\n => [\"hello\", \"kitty\", \"cat\", \"dog\", \"this is ruby\"]###双引号中可以被解析\n2.3.0 :037 > %w(hello kitty cat dog #{what_ruby})\n => [\"hello\", \"kitty\", \"cat\", \"dog\", \"\\#{what_ruby}\"]###单引号中不能被解析，被转义了。\n```\n### %x\n用于执行一段shell脚本，并返回输出内容。\n```\n2.3.0 :038 > %x(route -n)\n => \"Kernel IP routing table\\nDestination     Gateway         Genmask         Flags Metric Ref    Use Iface\\n0.0.0.0         10.6.0.1        0.0.0.0         UG    100    0        0 eth0\\n10.6.0.0        0.0.0.0         255.255.252.0   U     0      0        0 eth0\\n\"\n2.3.0 :039 > %x(echo \"hello world\")\n => \"hello world\\n\"\n```\n### %r\n语法近似于%Q, 用于正则表达式.\n```\n2.3.0 :031 > what_ruby = 'this is ruby'\n => \"this is ruby\"\n2.3.0 :041 > %r(/home/#{what_ruby})\n => /\\/home\\/this is ruby/\n```\n### %s\n用于表示symbol, 但是不会对其中表达式等内容进行转化\n```\n2.3.0 :031 > what_ruby = 'this is ruby'\n => \"this is ruby\"\n2.3.0 :042 > %s(a b c)\n => :\"a b c\"\n2.3.0 :043 > %s(abc)\n => :abc\n2.3.0 :044 > %s(what_ruby)\n => :what_ruby\n2.3.0 :045 > %s(#{what_ruby})\n => :\"\\#{what_ruby}\"\n```\n### %i\nRuby 2.0 之后引入的语法, 用于生成一个symbol数组\n```\n2.3.0 :031 > what_ruby = 'this is ruby'\n => \"this is ruby\"\n2.3.0 :046 > %i(a b c)\n => [:a, :b, :c]\n2.3.0 :047 > %i(a b c #{what_ruby})\n => [:a, :b, :c, :\"\\#{what_ruby}\"]\n```\n\n## *的用法\n*可以代表数组, 比如可以用于剩余数组的赋值\n```\nirb(main):001:0> a = [1,2,3]\n=> [1, 2, 3]\nirb(main):002:0> b,*c = a\n=> [1, 2, 3]\nirb(main):003:0> c\n=> [2, 3]\nirb(main):004:0> b\n=> 1\n```\n可以用来代替多参数的函数\n```\nirb(main):001:0> def test(a, b)\nirb(main):002:1> puts a\nirb(main):003:1> puts b\nirb(main):004:1> end\n=> :test\nirb(main):005:0> c = [1,2]\n=> [1, 2]\nirb(main):006:0> test(*c)\n1\n2\n=> nil\n```\n\n## 数组可以运算\nruby中数组可以进行`+`和`-`的操作，主要说一下`-`的作用：减去2个数组共有的元素\n```\nirb(main):001:0> a = [1,2,3]\n=> [1, 2, 3]\nirb(main):002:0> b = [2,3,4]\n=> [2, 3, 4]\nirb(main):003:0> a - b\n=> [1]\nirb(main):004:0> a + b\n=> [1, 2, 3, 2, 3, 4]\n```\n\n## json数据格式化为symbol类型\n```\nirb(main):005:0> require 'json'\n=> true\nirb(main):006:0> a = {b:1, c:2}\n=> {:b=>1, :c=>2}\nirb(main):007:0> JSON.generate(a)                       # symbol类型的key被转为字符串\n=> \"{\\\"b\\\":1,\\\"c\\\":2}\"\nirb(main):008:0> JSON.parse(JSON.generate(a))\n=> {\"b\"=>1, \"c\"=>2}\nirb(main):009:0> JSON.parse(JSON.generate(a), symbolize_names: true)\n=> {:b=>1, :c=>2}\n```\n\n## send的用法\nsend用来调用不确定的函数名\n```\nirb(main):001:0> def test(a)\nirb(main):002:1> puts a\nirb(main):003:1> end\n=> :test\nirb(main):004:0> send('test', '2')\n2\n=> nil\n```\n\n## 函数的返回值\n可以不写`return`，默认返回最后一行的值\n\n## 查看类有哪些方法\n可以用`.methods`方法\n```\nirb(main):010:0> class A\nirb(main):011:1> class << self\nirb(main):012:2> def b\nirb(main):013:3> puts 'test'\nirb(main):014:3> end\nirb(main):015:2> end\nirb(main):016:1> end\n \nirb(main):021:0> A.methods.include?(:b)\n=> true\n```\n\n## $1的用法\n表示正则匹配中`()`中匹配的内容，数字表示第几个括号\n```\nirb(main):004:0> a = 'asdf123asd'\n=> \"asdf123asd\"\nirb(main):008:0> a =~ /asdf(123)/\n=> 0\nirb(main):009:0> $1\n=> \"123\"\n```","source":"_posts/2020-09-14-ruby-rare-knowledge.md","raw":"---\nlayout: post\ntitle: \"ruby的小技巧\"\ndate: 2020-09-14\nexcerpt: \"ruby中一些常见的可以简化逻辑的用法\"\ntags: [ruby]\ncomments: true\n---\n\n## &:的用法\n&:重要用于数组的方法，它可以让数组中的每一个元素都执行&:后的方法，相当于`item.fun()`，比如\n\n```\nirb(main):001:0> a = [1, 2, 3]\n=> [1, 2, 3]\nirb(main):002:0> a.map(&:to_s)\n=> [\"1\", \"2\", \"3\"]\n\n```\n等与\n```\nirb(main):004:0> a.map { |i| i.to_s  }\n=> [\"1\", \"2\", \"3\"]\n```\n\n## ruby中%的用法\n### %Q %q\n%Q用于替代双引号的字符串. 当你需要在字符串里放入很多引号时候, 可以直接用下面方法而不需要在引号前逐个添加反斜杠 (\")   \n%q用于代替单引号的字符串\n```\n2.3.0 :015 > %Q(rudy said, \"i'm not ruby\")\n => \"rudy said, \\\"i'm not ruby\\\"\"\n```\n```\n2.3.0 :031 > what_ruby = 'this is ruby'\n => \"this is ruby\"\n2.3.0 :032 > %Q!rudy said, \"#{what_ruby}\"!\n => \"rudy said, \\\"this is ruby\\\"\"\n2.3.0 :033 > %q!rudy said, \"#{what_ruby}\"!\n => \"rudy said, \\\"\\#{what_ruby}\\\"\"\n```\n(...)也可用其他非数字字母的符号或成对的符号代替, 诸如#...#,!...!, +...+,{...},[...], <...>,/.../等.\n```\n2.3.0 :016 > %Q/rudy said, \"i'm not ruby\"/\n => \"rudy said, \\\"i'm not ruby\\\"\"\n2.3.0 :017 > %Q#rudy said, \"i'm not ruby\"#\n => \"rudy said, \\\"i'm not ruby\\\"\"\n2.3.0 :018 > %Q!rudy said, \"i'm not ruby\"!\n => \"rudy said, \\\"i'm not ruby\\\"\"\n```\n\n### %W，%w\n%W语法近似于%Q, 用于表示其中元素被双引号括起的数组.\n%w语法近似于%q, 用于表示其中元素被单引号括起的数组.\n```\n2.3.0 :031 > what_ruby = 'this is ruby'\n => \"this is ruby\"\n2.3.0 :034 > %W(hello,kitty,cat,dog,what_ruby)\n => [\"hello,kitty,cat,dog,what_ruby\"]          ###不能用逗号隔开，只能用空格\n2.3.0 :035 > %W(hello kitty cat dog what_ruby)\n => [\"hello\", \"kitty\", \"cat\", \"dog\", \"what_ruby\"]\n2.3.0 :036 > %W(hello kitty cat dog #{what_ruby})\n => [\"hello\", \"kitty\", \"cat\", \"dog\", \"this is ruby\"]###双引号中可以被解析\n2.3.0 :037 > %w(hello kitty cat dog #{what_ruby})\n => [\"hello\", \"kitty\", \"cat\", \"dog\", \"\\#{what_ruby}\"]###单引号中不能被解析，被转义了。\n```\n### %x\n用于执行一段shell脚本，并返回输出内容。\n```\n2.3.0 :038 > %x(route -n)\n => \"Kernel IP routing table\\nDestination     Gateway         Genmask         Flags Metric Ref    Use Iface\\n0.0.0.0         10.6.0.1        0.0.0.0         UG    100    0        0 eth0\\n10.6.0.0        0.0.0.0         255.255.252.0   U     0      0        0 eth0\\n\"\n2.3.0 :039 > %x(echo \"hello world\")\n => \"hello world\\n\"\n```\n### %r\n语法近似于%Q, 用于正则表达式.\n```\n2.3.0 :031 > what_ruby = 'this is ruby'\n => \"this is ruby\"\n2.3.0 :041 > %r(/home/#{what_ruby})\n => /\\/home\\/this is ruby/\n```\n### %s\n用于表示symbol, 但是不会对其中表达式等内容进行转化\n```\n2.3.0 :031 > what_ruby = 'this is ruby'\n => \"this is ruby\"\n2.3.0 :042 > %s(a b c)\n => :\"a b c\"\n2.3.0 :043 > %s(abc)\n => :abc\n2.3.0 :044 > %s(what_ruby)\n => :what_ruby\n2.3.0 :045 > %s(#{what_ruby})\n => :\"\\#{what_ruby}\"\n```\n### %i\nRuby 2.0 之后引入的语法, 用于生成一个symbol数组\n```\n2.3.0 :031 > what_ruby = 'this is ruby'\n => \"this is ruby\"\n2.3.0 :046 > %i(a b c)\n => [:a, :b, :c]\n2.3.0 :047 > %i(a b c #{what_ruby})\n => [:a, :b, :c, :\"\\#{what_ruby}\"]\n```\n\n## *的用法\n*可以代表数组, 比如可以用于剩余数组的赋值\n```\nirb(main):001:0> a = [1,2,3]\n=> [1, 2, 3]\nirb(main):002:0> b,*c = a\n=> [1, 2, 3]\nirb(main):003:0> c\n=> [2, 3]\nirb(main):004:0> b\n=> 1\n```\n可以用来代替多参数的函数\n```\nirb(main):001:0> def test(a, b)\nirb(main):002:1> puts a\nirb(main):003:1> puts b\nirb(main):004:1> end\n=> :test\nirb(main):005:0> c = [1,2]\n=> [1, 2]\nirb(main):006:0> test(*c)\n1\n2\n=> nil\n```\n\n## 数组可以运算\nruby中数组可以进行`+`和`-`的操作，主要说一下`-`的作用：减去2个数组共有的元素\n```\nirb(main):001:0> a = [1,2,3]\n=> [1, 2, 3]\nirb(main):002:0> b = [2,3,4]\n=> [2, 3, 4]\nirb(main):003:0> a - b\n=> [1]\nirb(main):004:0> a + b\n=> [1, 2, 3, 2, 3, 4]\n```\n\n## json数据格式化为symbol类型\n```\nirb(main):005:0> require 'json'\n=> true\nirb(main):006:0> a = {b:1, c:2}\n=> {:b=>1, :c=>2}\nirb(main):007:0> JSON.generate(a)                       # symbol类型的key被转为字符串\n=> \"{\\\"b\\\":1,\\\"c\\\":2}\"\nirb(main):008:0> JSON.parse(JSON.generate(a))\n=> {\"b\"=>1, \"c\"=>2}\nirb(main):009:0> JSON.parse(JSON.generate(a), symbolize_names: true)\n=> {:b=>1, :c=>2}\n```\n\n## send的用法\nsend用来调用不确定的函数名\n```\nirb(main):001:0> def test(a)\nirb(main):002:1> puts a\nirb(main):003:1> end\n=> :test\nirb(main):004:0> send('test', '2')\n2\n=> nil\n```\n\n## 函数的返回值\n可以不写`return`，默认返回最后一行的值\n\n## 查看类有哪些方法\n可以用`.methods`方法\n```\nirb(main):010:0> class A\nirb(main):011:1> class << self\nirb(main):012:2> def b\nirb(main):013:3> puts 'test'\nirb(main):014:3> end\nirb(main):015:2> end\nirb(main):016:1> end\n \nirb(main):021:0> A.methods.include?(:b)\n=> true\n```\n\n## $1的用法\n表示正则匹配中`()`中匹配的内容，数字表示第几个括号\n```\nirb(main):004:0> a = 'asdf123asd'\n=> \"asdf123asd\"\nirb(main):008:0> a =~ /asdf(123)/\n=> 0\nirb(main):009:0> $1\n=> \"123\"\n```","slug":"2020-09-14-ruby-rare-knowledge","published":1,"updated":"2020-10-22T05:21:16.454Z","photos":[],"link":"","_id":"ckgkk27ta000wkcv04wl71s17","content":"<h2 id=\"amp-的用法\"><a href=\"#amp-的用法\" class=\"headerlink\" title=\"&amp;:的用法\"></a>&amp;:的用法</h2><p>&amp;:重要用于数组的方法，它可以让数组中的每一个元素都执行&amp;:后的方法，相当于<code>item.fun()</code>，比如</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">irb(main):001:0&gt; a &#x3D; [1, 2, 3]</span><br><span class=\"line\">&#x3D;&gt; [1, 2, 3]</span><br><span class=\"line\">irb(main):002:0&gt; a.map(&amp;:to_s)</span><br><span class=\"line\">&#x3D;&gt; [&quot;1&quot;, &quot;2&quot;, &quot;3&quot;]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>等与</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">irb(main):004:0&gt; a.map &#123; |i| i.to_s  &#125;</span><br><span class=\"line\">&#x3D;&gt; [&quot;1&quot;, &quot;2&quot;, &quot;3&quot;]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"ruby中-的用法\"><a href=\"#ruby中-的用法\" class=\"headerlink\" title=\"ruby中%的用法\"></a>ruby中%的用法</h2><h3 id=\"Q-q\"><a href=\"#Q-q\" class=\"headerlink\" title=\"%Q %q\"></a>%Q %q</h3><p>%Q用于替代双引号的字符串. 当你需要在字符串里放入很多引号时候, 可以直接用下面方法而不需要在引号前逐个添加反斜杠 (“)<br>%q用于代替单引号的字符串</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2.3.0 :015 &gt; %Q(rudy said, &quot;i&#39;m not ruby&quot;)</span><br><span class=\"line\"> &#x3D;&gt; &quot;rudy said, \\&quot;i&#39;m not ruby\\&quot;&quot;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2.3.0 :031 &gt; what_ruby &#x3D; &#39;this is ruby&#39;</span><br><span class=\"line\"> &#x3D;&gt; &quot;this is ruby&quot;</span><br><span class=\"line\">2.3.0 :032 &gt; %Q!rudy said, &quot;#&#123;what_ruby&#125;&quot;!</span><br><span class=\"line\"> &#x3D;&gt; &quot;rudy said, \\&quot;this is ruby\\&quot;&quot;</span><br><span class=\"line\">2.3.0 :033 &gt; %q!rudy said, &quot;#&#123;what_ruby&#125;&quot;!</span><br><span class=\"line\"> &#x3D;&gt; &quot;rudy said, \\&quot;\\#&#123;what_ruby&#125;\\&quot;&quot;</span><br></pre></td></tr></table></figure>\n<p>(…)也可用其他非数字字母的符号或成对的符号代替, 诸如#…#,!…!, +…+,{…},[…], &lt;…&gt;,/…/等.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2.3.0 :016 &gt; %Q&#x2F;rudy said, &quot;i&#39;m not ruby&quot;&#x2F;</span><br><span class=\"line\"> &#x3D;&gt; &quot;rudy said, \\&quot;i&#39;m not ruby\\&quot;&quot;</span><br><span class=\"line\">2.3.0 :017 &gt; %Q#rudy said, &quot;i&#39;m not ruby&quot;#</span><br><span class=\"line\"> &#x3D;&gt; &quot;rudy said, \\&quot;i&#39;m not ruby\\&quot;&quot;</span><br><span class=\"line\">2.3.0 :018 &gt; %Q!rudy said, &quot;i&#39;m not ruby&quot;!</span><br><span class=\"line\"> &#x3D;&gt; &quot;rudy said, \\&quot;i&#39;m not ruby\\&quot;&quot;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"W，-w\"><a href=\"#W，-w\" class=\"headerlink\" title=\"%W，%w\"></a>%W，%w</h3><p>%W语法近似于%Q, 用于表示其中元素被双引号括起的数组.<br>%w语法近似于%q, 用于表示其中元素被单引号括起的数组.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2.3.0 :031 &gt; what_ruby &#x3D; &#39;this is ruby&#39;</span><br><span class=\"line\"> &#x3D;&gt; &quot;this is ruby&quot;</span><br><span class=\"line\">2.3.0 :034 &gt; %W(hello,kitty,cat,dog,what_ruby)</span><br><span class=\"line\"> &#x3D;&gt; [&quot;hello,kitty,cat,dog,what_ruby&quot;]          ###不能用逗号隔开，只能用空格</span><br><span class=\"line\">2.3.0 :035 &gt; %W(hello kitty cat dog what_ruby)</span><br><span class=\"line\"> &#x3D;&gt; [&quot;hello&quot;, &quot;kitty&quot;, &quot;cat&quot;, &quot;dog&quot;, &quot;what_ruby&quot;]</span><br><span class=\"line\">2.3.0 :036 &gt; %W(hello kitty cat dog #&#123;what_ruby&#125;)</span><br><span class=\"line\"> &#x3D;&gt; [&quot;hello&quot;, &quot;kitty&quot;, &quot;cat&quot;, &quot;dog&quot;, &quot;this is ruby&quot;]###双引号中可以被解析</span><br><span class=\"line\">2.3.0 :037 &gt; %w(hello kitty cat dog #&#123;what_ruby&#125;)</span><br><span class=\"line\"> &#x3D;&gt; [&quot;hello&quot;, &quot;kitty&quot;, &quot;cat&quot;, &quot;dog&quot;, &quot;\\#&#123;what_ruby&#125;&quot;]###单引号中不能被解析，被转义了。</span><br></pre></td></tr></table></figure>\n<h3 id=\"x\"><a href=\"#x\" class=\"headerlink\" title=\"%x\"></a>%x</h3><p>用于执行一段shell脚本，并返回输出内容。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2.3.0 :038 &gt; %x(route -n)</span><br><span class=\"line\"> &#x3D;&gt; &quot;Kernel IP routing table\\nDestination     Gateway         Genmask         Flags Metric Ref    Use Iface\\n0.0.0.0         10.6.0.1        0.0.0.0         UG    100    0        0 eth0\\n10.6.0.0        0.0.0.0         255.255.252.0   U     0      0        0 eth0\\n&quot;</span><br><span class=\"line\">2.3.0 :039 &gt; %x(echo &quot;hello world&quot;)</span><br><span class=\"line\"> &#x3D;&gt; &quot;hello world\\n&quot;</span><br></pre></td></tr></table></figure>\n<h3 id=\"r\"><a href=\"#r\" class=\"headerlink\" title=\"%r\"></a>%r</h3><p>语法近似于%Q, 用于正则表达式.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2.3.0 :031 &gt; what_ruby &#x3D; &#39;this is ruby&#39;</span><br><span class=\"line\"> &#x3D;&gt; &quot;this is ruby&quot;</span><br><span class=\"line\">2.3.0 :041 &gt; %r(&#x2F;home&#x2F;#&#123;what_ruby&#125;)</span><br><span class=\"line\"> &#x3D;&gt; &#x2F;\\&#x2F;home\\&#x2F;this is ruby&#x2F;</span><br></pre></td></tr></table></figure>\n<h3 id=\"s\"><a href=\"#s\" class=\"headerlink\" title=\"%s\"></a>%s</h3><p>用于表示symbol, 但是不会对其中表达式等内容进行转化</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2.3.0 :031 &gt; what_ruby &#x3D; &#39;this is ruby&#39;</span><br><span class=\"line\"> &#x3D;&gt; &quot;this is ruby&quot;</span><br><span class=\"line\">2.3.0 :042 &gt; %s(a b c)</span><br><span class=\"line\"> &#x3D;&gt; :&quot;a b c&quot;</span><br><span class=\"line\">2.3.0 :043 &gt; %s(abc)</span><br><span class=\"line\"> &#x3D;&gt; :abc</span><br><span class=\"line\">2.3.0 :044 &gt; %s(what_ruby)</span><br><span class=\"line\"> &#x3D;&gt; :what_ruby</span><br><span class=\"line\">2.3.0 :045 &gt; %s(#&#123;what_ruby&#125;)</span><br><span class=\"line\"> &#x3D;&gt; :&quot;\\#&#123;what_ruby&#125;&quot;</span><br></pre></td></tr></table></figure>\n<h3 id=\"i\"><a href=\"#i\" class=\"headerlink\" title=\"%i\"></a>%i</h3><p>Ruby 2.0 之后引入的语法, 用于生成一个symbol数组</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2.3.0 :031 &gt; what_ruby &#x3D; &#39;this is ruby&#39;</span><br><span class=\"line\"> &#x3D;&gt; &quot;this is ruby&quot;</span><br><span class=\"line\">2.3.0 :046 &gt; %i(a b c)</span><br><span class=\"line\"> &#x3D;&gt; [:a, :b, :c]</span><br><span class=\"line\">2.3.0 :047 &gt; %i(a b c #&#123;what_ruby&#125;)</span><br><span class=\"line\"> &#x3D;&gt; [:a, :b, :c, :&quot;\\#&#123;what_ruby&#125;&quot;]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"的用法\"><a href=\"#的用法\" class=\"headerlink\" title=\"*的用法\"></a>*的用法</h2><p>*可以代表数组, 比如可以用于剩余数组的赋值</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">irb(main):001:0&gt; a &#x3D; [1,2,3]</span><br><span class=\"line\">&#x3D;&gt; [1, 2, 3]</span><br><span class=\"line\">irb(main):002:0&gt; b,*c &#x3D; a</span><br><span class=\"line\">&#x3D;&gt; [1, 2, 3]</span><br><span class=\"line\">irb(main):003:0&gt; c</span><br><span class=\"line\">&#x3D;&gt; [2, 3]</span><br><span class=\"line\">irb(main):004:0&gt; b</span><br><span class=\"line\">&#x3D;&gt; 1</span><br></pre></td></tr></table></figure>\n<p>可以用来代替多参数的函数</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">irb(main):001:0&gt; def test(a, b)</span><br><span class=\"line\">irb(main):002:1&gt; puts a</span><br><span class=\"line\">irb(main):003:1&gt; puts b</span><br><span class=\"line\">irb(main):004:1&gt; end</span><br><span class=\"line\">&#x3D;&gt; :test</span><br><span class=\"line\">irb(main):005:0&gt; c &#x3D; [1,2]</span><br><span class=\"line\">&#x3D;&gt; [1, 2]</span><br><span class=\"line\">irb(main):006:0&gt; test(*c)</span><br><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">&#x3D;&gt; nil</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"数组可以运算\"><a href=\"#数组可以运算\" class=\"headerlink\" title=\"数组可以运算\"></a>数组可以运算</h2><p>ruby中数组可以进行<code>+</code>和<code>-</code>的操作，主要说一下<code>-</code>的作用：减去2个数组共有的元素</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">irb(main):001:0&gt; a &#x3D; [1,2,3]</span><br><span class=\"line\">&#x3D;&gt; [1, 2, 3]</span><br><span class=\"line\">irb(main):002:0&gt; b &#x3D; [2,3,4]</span><br><span class=\"line\">&#x3D;&gt; [2, 3, 4]</span><br><span class=\"line\">irb(main):003:0&gt; a - b</span><br><span class=\"line\">&#x3D;&gt; [1]</span><br><span class=\"line\">irb(main):004:0&gt; a + b</span><br><span class=\"line\">&#x3D;&gt; [1, 2, 3, 2, 3, 4]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"json数据格式化为symbol类型\"><a href=\"#json数据格式化为symbol类型\" class=\"headerlink\" title=\"json数据格式化为symbol类型\"></a>json数据格式化为symbol类型</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">irb(main):005:0&gt; require &#39;json&#39;</span><br><span class=\"line\">&#x3D;&gt; true</span><br><span class=\"line\">irb(main):006:0&gt; a &#x3D; &#123;b:1, c:2&#125;</span><br><span class=\"line\">&#x3D;&gt; &#123;:b&#x3D;&gt;1, :c&#x3D;&gt;2&#125;</span><br><span class=\"line\">irb(main):007:0&gt; JSON.generate(a)                       # symbol类型的key被转为字符串</span><br><span class=\"line\">&#x3D;&gt; &quot;&#123;\\&quot;b\\&quot;:1,\\&quot;c\\&quot;:2&#125;&quot;</span><br><span class=\"line\">irb(main):008:0&gt; JSON.parse(JSON.generate(a))</span><br><span class=\"line\">&#x3D;&gt; &#123;&quot;b&quot;&#x3D;&gt;1, &quot;c&quot;&#x3D;&gt;2&#125;</span><br><span class=\"line\">irb(main):009:0&gt; JSON.parse(JSON.generate(a), symbolize_names: true)</span><br><span class=\"line\">&#x3D;&gt; &#123;:b&#x3D;&gt;1, :c&#x3D;&gt;2&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"send的用法\"><a href=\"#send的用法\" class=\"headerlink\" title=\"send的用法\"></a>send的用法</h2><p>send用来调用不确定的函数名</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">irb(main):001:0&gt; def test(a)</span><br><span class=\"line\">irb(main):002:1&gt; puts a</span><br><span class=\"line\">irb(main):003:1&gt; end</span><br><span class=\"line\">&#x3D;&gt; :test</span><br><span class=\"line\">irb(main):004:0&gt; send(&#39;test&#39;, &#39;2&#39;)</span><br><span class=\"line\">2</span><br><span class=\"line\">&#x3D;&gt; nil</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"函数的返回值\"><a href=\"#函数的返回值\" class=\"headerlink\" title=\"函数的返回值\"></a>函数的返回值</h2><p>可以不写<code>return</code>，默认返回最后一行的值</p>\n<h2 id=\"查看类有哪些方法\"><a href=\"#查看类有哪些方法\" class=\"headerlink\" title=\"查看类有哪些方法\"></a>查看类有哪些方法</h2><p>可以用<code>.methods</code>方法</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">irb(main):010:0&gt; class A</span><br><span class=\"line\">irb(main):011:1&gt; class &lt;&lt; self</span><br><span class=\"line\">irb(main):012:2&gt; def b</span><br><span class=\"line\">irb(main):013:3&gt; puts &#39;test&#39;</span><br><span class=\"line\">irb(main):014:3&gt; end</span><br><span class=\"line\">irb(main):015:2&gt; end</span><br><span class=\"line\">irb(main):016:1&gt; end</span><br><span class=\"line\"> </span><br><span class=\"line\">irb(main):021:0&gt; A.methods.include?(:b)</span><br><span class=\"line\">&#x3D;&gt; true</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"1的用法\"><a href=\"#1的用法\" class=\"headerlink\" title=\"$1的用法\"></a>$1的用法</h2><p>表示正则匹配中<code>()</code>中匹配的内容，数字表示第几个括号</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">irb(main):004:0&gt; a &#x3D; &#39;asdf123asd&#39;</span><br><span class=\"line\">&#x3D;&gt; &quot;asdf123asd&quot;</span><br><span class=\"line\">irb(main):008:0&gt; a &#x3D;~ &#x2F;asdf(123)&#x2F;</span><br><span class=\"line\">&#x3D;&gt; 0</span><br><span class=\"line\">irb(main):009:0&gt; $1</span><br><span class=\"line\">&#x3D;&gt; &quot;123&quot;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"more":"<h2 id=\"amp-的用法\"><a href=\"#amp-的用法\" class=\"headerlink\" title=\"&amp;:的用法\"></a>&amp;:的用法</h2><p>&amp;:重要用于数组的方法，它可以让数组中的每一个元素都执行&amp;:后的方法，相当于<code>item.fun()</code>，比如</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">irb(main):001:0&gt; a &#x3D; [1, 2, 3]</span><br><span class=\"line\">&#x3D;&gt; [1, 2, 3]</span><br><span class=\"line\">irb(main):002:0&gt; a.map(&amp;:to_s)</span><br><span class=\"line\">&#x3D;&gt; [&quot;1&quot;, &quot;2&quot;, &quot;3&quot;]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>等与</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">irb(main):004:0&gt; a.map &#123; |i| i.to_s  &#125;</span><br><span class=\"line\">&#x3D;&gt; [&quot;1&quot;, &quot;2&quot;, &quot;3&quot;]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"ruby中-的用法\"><a href=\"#ruby中-的用法\" class=\"headerlink\" title=\"ruby中%的用法\"></a>ruby中%的用法</h2><h3 id=\"Q-q\"><a href=\"#Q-q\" class=\"headerlink\" title=\"%Q %q\"></a>%Q %q</h3><p>%Q用于替代双引号的字符串. 当你需要在字符串里放入很多引号时候, 可以直接用下面方法而不需要在引号前逐个添加反斜杠 (“)<br>%q用于代替单引号的字符串</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2.3.0 :015 &gt; %Q(rudy said, &quot;i&#39;m not ruby&quot;)</span><br><span class=\"line\"> &#x3D;&gt; &quot;rudy said, \\&quot;i&#39;m not ruby\\&quot;&quot;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2.3.0 :031 &gt; what_ruby &#x3D; &#39;this is ruby&#39;</span><br><span class=\"line\"> &#x3D;&gt; &quot;this is ruby&quot;</span><br><span class=\"line\">2.3.0 :032 &gt; %Q!rudy said, &quot;#&#123;what_ruby&#125;&quot;!</span><br><span class=\"line\"> &#x3D;&gt; &quot;rudy said, \\&quot;this is ruby\\&quot;&quot;</span><br><span class=\"line\">2.3.0 :033 &gt; %q!rudy said, &quot;#&#123;what_ruby&#125;&quot;!</span><br><span class=\"line\"> &#x3D;&gt; &quot;rudy said, \\&quot;\\#&#123;what_ruby&#125;\\&quot;&quot;</span><br></pre></td></tr></table></figure>\n<p>(…)也可用其他非数字字母的符号或成对的符号代替, 诸如#…#,!…!, +…+,{…},[…], &lt;…&gt;,/…/等.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2.3.0 :016 &gt; %Q&#x2F;rudy said, &quot;i&#39;m not ruby&quot;&#x2F;</span><br><span class=\"line\"> &#x3D;&gt; &quot;rudy said, \\&quot;i&#39;m not ruby\\&quot;&quot;</span><br><span class=\"line\">2.3.0 :017 &gt; %Q#rudy said, &quot;i&#39;m not ruby&quot;#</span><br><span class=\"line\"> &#x3D;&gt; &quot;rudy said, \\&quot;i&#39;m not ruby\\&quot;&quot;</span><br><span class=\"line\">2.3.0 :018 &gt; %Q!rudy said, &quot;i&#39;m not ruby&quot;!</span><br><span class=\"line\"> &#x3D;&gt; &quot;rudy said, \\&quot;i&#39;m not ruby\\&quot;&quot;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"W，-w\"><a href=\"#W，-w\" class=\"headerlink\" title=\"%W，%w\"></a>%W，%w</h3><p>%W语法近似于%Q, 用于表示其中元素被双引号括起的数组.<br>%w语法近似于%q, 用于表示其中元素被单引号括起的数组.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2.3.0 :031 &gt; what_ruby &#x3D; &#39;this is ruby&#39;</span><br><span class=\"line\"> &#x3D;&gt; &quot;this is ruby&quot;</span><br><span class=\"line\">2.3.0 :034 &gt; %W(hello,kitty,cat,dog,what_ruby)</span><br><span class=\"line\"> &#x3D;&gt; [&quot;hello,kitty,cat,dog,what_ruby&quot;]          ###不能用逗号隔开，只能用空格</span><br><span class=\"line\">2.3.0 :035 &gt; %W(hello kitty cat dog what_ruby)</span><br><span class=\"line\"> &#x3D;&gt; [&quot;hello&quot;, &quot;kitty&quot;, &quot;cat&quot;, &quot;dog&quot;, &quot;what_ruby&quot;]</span><br><span class=\"line\">2.3.0 :036 &gt; %W(hello kitty cat dog #&#123;what_ruby&#125;)</span><br><span class=\"line\"> &#x3D;&gt; [&quot;hello&quot;, &quot;kitty&quot;, &quot;cat&quot;, &quot;dog&quot;, &quot;this is ruby&quot;]###双引号中可以被解析</span><br><span class=\"line\">2.3.0 :037 &gt; %w(hello kitty cat dog #&#123;what_ruby&#125;)</span><br><span class=\"line\"> &#x3D;&gt; [&quot;hello&quot;, &quot;kitty&quot;, &quot;cat&quot;, &quot;dog&quot;, &quot;\\#&#123;what_ruby&#125;&quot;]###单引号中不能被解析，被转义了。</span><br></pre></td></tr></table></figure>\n<h3 id=\"x\"><a href=\"#x\" class=\"headerlink\" title=\"%x\"></a>%x</h3><p>用于执行一段shell脚本，并返回输出内容。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2.3.0 :038 &gt; %x(route -n)</span><br><span class=\"line\"> &#x3D;&gt; &quot;Kernel IP routing table\\nDestination     Gateway         Genmask         Flags Metric Ref    Use Iface\\n0.0.0.0         10.6.0.1        0.0.0.0         UG    100    0        0 eth0\\n10.6.0.0        0.0.0.0         255.255.252.0   U     0      0        0 eth0\\n&quot;</span><br><span class=\"line\">2.3.0 :039 &gt; %x(echo &quot;hello world&quot;)</span><br><span class=\"line\"> &#x3D;&gt; &quot;hello world\\n&quot;</span><br></pre></td></tr></table></figure>\n<h3 id=\"r\"><a href=\"#r\" class=\"headerlink\" title=\"%r\"></a>%r</h3><p>语法近似于%Q, 用于正则表达式.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2.3.0 :031 &gt; what_ruby &#x3D; &#39;this is ruby&#39;</span><br><span class=\"line\"> &#x3D;&gt; &quot;this is ruby&quot;</span><br><span class=\"line\">2.3.0 :041 &gt; %r(&#x2F;home&#x2F;#&#123;what_ruby&#125;)</span><br><span class=\"line\"> &#x3D;&gt; &#x2F;\\&#x2F;home\\&#x2F;this is ruby&#x2F;</span><br></pre></td></tr></table></figure>\n<h3 id=\"s\"><a href=\"#s\" class=\"headerlink\" title=\"%s\"></a>%s</h3><p>用于表示symbol, 但是不会对其中表达式等内容进行转化</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2.3.0 :031 &gt; what_ruby &#x3D; &#39;this is ruby&#39;</span><br><span class=\"line\"> &#x3D;&gt; &quot;this is ruby&quot;</span><br><span class=\"line\">2.3.0 :042 &gt; %s(a b c)</span><br><span class=\"line\"> &#x3D;&gt; :&quot;a b c&quot;</span><br><span class=\"line\">2.3.0 :043 &gt; %s(abc)</span><br><span class=\"line\"> &#x3D;&gt; :abc</span><br><span class=\"line\">2.3.0 :044 &gt; %s(what_ruby)</span><br><span class=\"line\"> &#x3D;&gt; :what_ruby</span><br><span class=\"line\">2.3.0 :045 &gt; %s(#&#123;what_ruby&#125;)</span><br><span class=\"line\"> &#x3D;&gt; :&quot;\\#&#123;what_ruby&#125;&quot;</span><br></pre></td></tr></table></figure>\n<h3 id=\"i\"><a href=\"#i\" class=\"headerlink\" title=\"%i\"></a>%i</h3><p>Ruby 2.0 之后引入的语法, 用于生成一个symbol数组</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2.3.0 :031 &gt; what_ruby &#x3D; &#39;this is ruby&#39;</span><br><span class=\"line\"> &#x3D;&gt; &quot;this is ruby&quot;</span><br><span class=\"line\">2.3.0 :046 &gt; %i(a b c)</span><br><span class=\"line\"> &#x3D;&gt; [:a, :b, :c]</span><br><span class=\"line\">2.3.0 :047 &gt; %i(a b c #&#123;what_ruby&#125;)</span><br><span class=\"line\"> &#x3D;&gt; [:a, :b, :c, :&quot;\\#&#123;what_ruby&#125;&quot;]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"的用法\"><a href=\"#的用法\" class=\"headerlink\" title=\"*的用法\"></a>*的用法</h2><p>*可以代表数组, 比如可以用于剩余数组的赋值</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">irb(main):001:0&gt; a &#x3D; [1,2,3]</span><br><span class=\"line\">&#x3D;&gt; [1, 2, 3]</span><br><span class=\"line\">irb(main):002:0&gt; b,*c &#x3D; a</span><br><span class=\"line\">&#x3D;&gt; [1, 2, 3]</span><br><span class=\"line\">irb(main):003:0&gt; c</span><br><span class=\"line\">&#x3D;&gt; [2, 3]</span><br><span class=\"line\">irb(main):004:0&gt; b</span><br><span class=\"line\">&#x3D;&gt; 1</span><br></pre></td></tr></table></figure>\n<p>可以用来代替多参数的函数</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">irb(main):001:0&gt; def test(a, b)</span><br><span class=\"line\">irb(main):002:1&gt; puts a</span><br><span class=\"line\">irb(main):003:1&gt; puts b</span><br><span class=\"line\">irb(main):004:1&gt; end</span><br><span class=\"line\">&#x3D;&gt; :test</span><br><span class=\"line\">irb(main):005:0&gt; c &#x3D; [1,2]</span><br><span class=\"line\">&#x3D;&gt; [1, 2]</span><br><span class=\"line\">irb(main):006:0&gt; test(*c)</span><br><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">&#x3D;&gt; nil</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"数组可以运算\"><a href=\"#数组可以运算\" class=\"headerlink\" title=\"数组可以运算\"></a>数组可以运算</h2><p>ruby中数组可以进行<code>+</code>和<code>-</code>的操作，主要说一下<code>-</code>的作用：减去2个数组共有的元素</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">irb(main):001:0&gt; a &#x3D; [1,2,3]</span><br><span class=\"line\">&#x3D;&gt; [1, 2, 3]</span><br><span class=\"line\">irb(main):002:0&gt; b &#x3D; [2,3,4]</span><br><span class=\"line\">&#x3D;&gt; [2, 3, 4]</span><br><span class=\"line\">irb(main):003:0&gt; a - b</span><br><span class=\"line\">&#x3D;&gt; [1]</span><br><span class=\"line\">irb(main):004:0&gt; a + b</span><br><span class=\"line\">&#x3D;&gt; [1, 2, 3, 2, 3, 4]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"json数据格式化为symbol类型\"><a href=\"#json数据格式化为symbol类型\" class=\"headerlink\" title=\"json数据格式化为symbol类型\"></a>json数据格式化为symbol类型</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">irb(main):005:0&gt; require &#39;json&#39;</span><br><span class=\"line\">&#x3D;&gt; true</span><br><span class=\"line\">irb(main):006:0&gt; a &#x3D; &#123;b:1, c:2&#125;</span><br><span class=\"line\">&#x3D;&gt; &#123;:b&#x3D;&gt;1, :c&#x3D;&gt;2&#125;</span><br><span class=\"line\">irb(main):007:0&gt; JSON.generate(a)                       # symbol类型的key被转为字符串</span><br><span class=\"line\">&#x3D;&gt; &quot;&#123;\\&quot;b\\&quot;:1,\\&quot;c\\&quot;:2&#125;&quot;</span><br><span class=\"line\">irb(main):008:0&gt; JSON.parse(JSON.generate(a))</span><br><span class=\"line\">&#x3D;&gt; &#123;&quot;b&quot;&#x3D;&gt;1, &quot;c&quot;&#x3D;&gt;2&#125;</span><br><span class=\"line\">irb(main):009:0&gt; JSON.parse(JSON.generate(a), symbolize_names: true)</span><br><span class=\"line\">&#x3D;&gt; &#123;:b&#x3D;&gt;1, :c&#x3D;&gt;2&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"send的用法\"><a href=\"#send的用法\" class=\"headerlink\" title=\"send的用法\"></a>send的用法</h2><p>send用来调用不确定的函数名</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">irb(main):001:0&gt; def test(a)</span><br><span class=\"line\">irb(main):002:1&gt; puts a</span><br><span class=\"line\">irb(main):003:1&gt; end</span><br><span class=\"line\">&#x3D;&gt; :test</span><br><span class=\"line\">irb(main):004:0&gt; send(&#39;test&#39;, &#39;2&#39;)</span><br><span class=\"line\">2</span><br><span class=\"line\">&#x3D;&gt; nil</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"函数的返回值\"><a href=\"#函数的返回值\" class=\"headerlink\" title=\"函数的返回值\"></a>函数的返回值</h2><p>可以不写<code>return</code>，默认返回最后一行的值</p>\n<h2 id=\"查看类有哪些方法\"><a href=\"#查看类有哪些方法\" class=\"headerlink\" title=\"查看类有哪些方法\"></a>查看类有哪些方法</h2><p>可以用<code>.methods</code>方法</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">irb(main):010:0&gt; class A</span><br><span class=\"line\">irb(main):011:1&gt; class &lt;&lt; self</span><br><span class=\"line\">irb(main):012:2&gt; def b</span><br><span class=\"line\">irb(main):013:3&gt; puts &#39;test&#39;</span><br><span class=\"line\">irb(main):014:3&gt; end</span><br><span class=\"line\">irb(main):015:2&gt; end</span><br><span class=\"line\">irb(main):016:1&gt; end</span><br><span class=\"line\"> </span><br><span class=\"line\">irb(main):021:0&gt; A.methods.include?(:b)</span><br><span class=\"line\">&#x3D;&gt; true</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"1的用法\"><a href=\"#1的用法\" class=\"headerlink\" title=\"$1的用法\"></a>$1的用法</h2><p>表示正则匹配中<code>()</code>中匹配的内容，数字表示第几个括号</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">irb(main):004:0&gt; a &#x3D; &#39;asdf123asd&#39;</span><br><span class=\"line\">&#x3D;&gt; &quot;asdf123asd&quot;</span><br><span class=\"line\">irb(main):008:0&gt; a &#x3D;~ &#x2F;asdf(123)&#x2F;</span><br><span class=\"line\">&#x3D;&gt; 0</span><br><span class=\"line\">irb(main):009:0&gt; $1</span><br><span class=\"line\">&#x3D;&gt; &quot;123&quot;</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"kubernetes集群中访问外部域名","date":"2020-09-16T16:00:00.000Z","excerpt":"在k8s集群中，在pod内需要访问外部域名，或者dns无法解析的域名","comments":1,"_content":"\n一般来说有三种方法可以实现添加外部域名\n* 通过hostalias在deployment里面修改hosts文件\n* 通过coredns修改hosts文件\n* 通过kube-dns添加域名服务器\n## 通过hostalias添加域名和ip\n创建nginx pod\n```\nkubectl run nginx --image nginx\npod/nginx created\n```\n查看pod\n```\n$ kubectl get pods --output=wide\nNAME     READY     STATUS    RESTARTS   AGE    IP           NODE\nnginx    1/1       Running   0          13s    10.200.0.4   worker0\n\n$ kubectl exec nginx -- cat /etc/hosts\n127.0.0.1\tlocalhost\n::1\tlocalhost ip6-localhost ip6-loopback\nfe00::0\tip6-localnet\nfe00::0\tip6-mcastprefix\nfe00::1\tip6-allnodes\nfe00::2\tip6-allrouters\n10.200.0.4\tnginx\n```\n添加额外的域名和ip\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: hostaliases-pod\nspec:\n  restartPolicy: Never\n  hostAliases:\n  - ip: \"127.0.0.1\"\n    hostnames:\n    - \"foo.local\"\n    - \"bar.local\"\n  - ip: \"10.1.2.3\"\n    hostnames:\n    - \"foo.remote\"\n    - \"bar.remote\"\n  containers:\n  - name: cat-hosts\n    image: busybox\n    command:\n    - cat\n    args:\n    - \"/etc/hosts\"\n```\n运行这个pod\n```\nkubectl apply -f https://k8s.io/examples/service/networking/hostaliases-pod.yaml\npod/hostaliases-pod created\n```\n它的hostfile\n```\n$ kubectl exec hostaliases-pod -- cat /etc/hosts\n127.0.0.1\tlocalhost\n::1\tlocalhost ip6-localhost ip6-loopback\nfe00::0\tip6-localnet\nfe00::0\tip6-mcastprefix\nfe00::1\tip6-allnodes\nfe00::2\tip6-allrouters\n10.200.0.5\thostaliases-pod\n\n# Entries added by HostAliases.\n127.0.0.1\tfoo.local\tbar.local\n10.1.2.3\tfoo.remote\tbar.remote\n```\n\n## 通过coredns修改hosts文件\n使用edit命令修改coredns configmap资源, 添加域名`193.160.57.121 harbor.com`\n```\nkubectl edit configmap coredns -n kube-system\n```\n```\n[root@node-2 test]# kubectl get configmap coredns -n kube-system -o yaml\napiVersion: v1\ndata:\n  Corefile: |\n    .:53 {\n        errors\n        health\n        ready\n        kubernetes cluster.local. in-addr.arpa ip6.arpa {\n            pods insecure\n            fallthrough in-addr.arpa ip6.arpa\n            ttl 30\n        }\n        hosts {\n           193.160.57.121 harbor.com           //添加域名\n           fallthrough\n        }\n        prometheus :9153\n        forward . /etc/resolv.conf\n        cache 30\n        loop\n        reload\n        loadbalance\n    }\nkind: ConfigMap\nmetadata:\n  creationTimestamp: \"2020-08-20T10:18:50Z\"\n  labels:\n    addonmanager.kubernetes.io/mode: EnsureExists\n  name: coredns\n  namespace: kube-system\n  resourceVersion: \"13875493\"\n  selfLink: /api/v1/namespaces/kube-system/configmaps/coredns\n  uid: 10a8e6df-d3d6-49a6-98b9-57640fdb6011\n```\n## 通过coredns添加域名服务器\n```\napiVersion: v1\ndata:\n  Corefile: |\n    .:53 {\n        errors\n        health\n        ready\n        kubernetes cluster.local. in-addr.arpa ip6.arpa {\n            pods insecure\n            fallthrough in-addr.arpa ip6.arpa\n            ttl 30\n        }\n        proxy . 10.167.129.6             //添加域名服务器\n        prometheus :9153\n        forward . /etc/resolv.conf\n        cache 30\n        loop\n        reload\n        loadbalance\n    }\nkind: ConfigMap\nmetadata:\n  creationTimestamp: \"2020-08-20T10:18:50Z\"\n  labels:\n    addonmanager.kubernetes.io/mode: EnsureExists\n  name: coredns\n  namespace: kube-system\n  resourceVersion: \"13875493\"\n  selfLink: /api/v1/namespaces/kube-system/configmaps/coredns\n  uid: 10a8e6df-d3d6-49a6-98b9-57640fdb6011\n\n```\n\n## 通过kube-dns添加域名服务器\n修改kube-dns的使用的ConfigMap。\n```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: kube-dns\n  namespace: kube-system\ndata:\n  stubDomains: |\n    {\"k8s.com\": [\"192.168.10.10\"]}\n  upstreamNameservers: |\n    [\"8.8.8.8\", \"8.8.4.4\"]\n```\n`upstreamNameservers` 即使用的外部DNS。\n\n## 参考\n[add-entries-to-pod-etc-hosts-with-host-aliases](https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/)  \n[kubernetes 集群DNS配置及容器内CoreDNS解析外部域名配置问题](https://www.cnblogs.com/lbjstill/p/13298826.html)  \n[配置Pod使用外部DNS](https://jimmysong.io/kubernetes-handbook/appendix/tricks.html)\n[]\n","source":"_posts/2020-09-17-k8s-add-new-domain-name.md","raw":"---\nlayout: post\ntitle: \"kubernetes集群中访问外部域名\"\ndate: 2020-09-17\nexcerpt: \"在k8s集群中，在pod内需要访问外部域名，或者dns无法解析的域名\"\ntags: [kubernetes]\ncomments: true\n---\n\n一般来说有三种方法可以实现添加外部域名\n* 通过hostalias在deployment里面修改hosts文件\n* 通过coredns修改hosts文件\n* 通过kube-dns添加域名服务器\n## 通过hostalias添加域名和ip\n创建nginx pod\n```\nkubectl run nginx --image nginx\npod/nginx created\n```\n查看pod\n```\n$ kubectl get pods --output=wide\nNAME     READY     STATUS    RESTARTS   AGE    IP           NODE\nnginx    1/1       Running   0          13s    10.200.0.4   worker0\n\n$ kubectl exec nginx -- cat /etc/hosts\n127.0.0.1\tlocalhost\n::1\tlocalhost ip6-localhost ip6-loopback\nfe00::0\tip6-localnet\nfe00::0\tip6-mcastprefix\nfe00::1\tip6-allnodes\nfe00::2\tip6-allrouters\n10.200.0.4\tnginx\n```\n添加额外的域名和ip\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: hostaliases-pod\nspec:\n  restartPolicy: Never\n  hostAliases:\n  - ip: \"127.0.0.1\"\n    hostnames:\n    - \"foo.local\"\n    - \"bar.local\"\n  - ip: \"10.1.2.3\"\n    hostnames:\n    - \"foo.remote\"\n    - \"bar.remote\"\n  containers:\n  - name: cat-hosts\n    image: busybox\n    command:\n    - cat\n    args:\n    - \"/etc/hosts\"\n```\n运行这个pod\n```\nkubectl apply -f https://k8s.io/examples/service/networking/hostaliases-pod.yaml\npod/hostaliases-pod created\n```\n它的hostfile\n```\n$ kubectl exec hostaliases-pod -- cat /etc/hosts\n127.0.0.1\tlocalhost\n::1\tlocalhost ip6-localhost ip6-loopback\nfe00::0\tip6-localnet\nfe00::0\tip6-mcastprefix\nfe00::1\tip6-allnodes\nfe00::2\tip6-allrouters\n10.200.0.5\thostaliases-pod\n\n# Entries added by HostAliases.\n127.0.0.1\tfoo.local\tbar.local\n10.1.2.3\tfoo.remote\tbar.remote\n```\n\n## 通过coredns修改hosts文件\n使用edit命令修改coredns configmap资源, 添加域名`193.160.57.121 harbor.com`\n```\nkubectl edit configmap coredns -n kube-system\n```\n```\n[root@node-2 test]# kubectl get configmap coredns -n kube-system -o yaml\napiVersion: v1\ndata:\n  Corefile: |\n    .:53 {\n        errors\n        health\n        ready\n        kubernetes cluster.local. in-addr.arpa ip6.arpa {\n            pods insecure\n            fallthrough in-addr.arpa ip6.arpa\n            ttl 30\n        }\n        hosts {\n           193.160.57.121 harbor.com           //添加域名\n           fallthrough\n        }\n        prometheus :9153\n        forward . /etc/resolv.conf\n        cache 30\n        loop\n        reload\n        loadbalance\n    }\nkind: ConfigMap\nmetadata:\n  creationTimestamp: \"2020-08-20T10:18:50Z\"\n  labels:\n    addonmanager.kubernetes.io/mode: EnsureExists\n  name: coredns\n  namespace: kube-system\n  resourceVersion: \"13875493\"\n  selfLink: /api/v1/namespaces/kube-system/configmaps/coredns\n  uid: 10a8e6df-d3d6-49a6-98b9-57640fdb6011\n```\n## 通过coredns添加域名服务器\n```\napiVersion: v1\ndata:\n  Corefile: |\n    .:53 {\n        errors\n        health\n        ready\n        kubernetes cluster.local. in-addr.arpa ip6.arpa {\n            pods insecure\n            fallthrough in-addr.arpa ip6.arpa\n            ttl 30\n        }\n        proxy . 10.167.129.6             //添加域名服务器\n        prometheus :9153\n        forward . /etc/resolv.conf\n        cache 30\n        loop\n        reload\n        loadbalance\n    }\nkind: ConfigMap\nmetadata:\n  creationTimestamp: \"2020-08-20T10:18:50Z\"\n  labels:\n    addonmanager.kubernetes.io/mode: EnsureExists\n  name: coredns\n  namespace: kube-system\n  resourceVersion: \"13875493\"\n  selfLink: /api/v1/namespaces/kube-system/configmaps/coredns\n  uid: 10a8e6df-d3d6-49a6-98b9-57640fdb6011\n\n```\n\n## 通过kube-dns添加域名服务器\n修改kube-dns的使用的ConfigMap。\n```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: kube-dns\n  namespace: kube-system\ndata:\n  stubDomains: |\n    {\"k8s.com\": [\"192.168.10.10\"]}\n  upstreamNameservers: |\n    [\"8.8.8.8\", \"8.8.4.4\"]\n```\n`upstreamNameservers` 即使用的外部DNS。\n\n## 参考\n[add-entries-to-pod-etc-hosts-with-host-aliases](https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/)  \n[kubernetes 集群DNS配置及容器内CoreDNS解析外部域名配置问题](https://www.cnblogs.com/lbjstill/p/13298826.html)  \n[配置Pod使用外部DNS](https://jimmysong.io/kubernetes-handbook/appendix/tricks.html)\n[]\n","slug":"2020-09-17-k8s-add-new-domain-name","published":1,"updated":"2020-10-09T02:42:43.454Z","photos":[],"link":"","_id":"ckgkk27td000zkcv05sag99nt","content":"<p>一般来说有三种方法可以实现添加外部域名</p>\n<ul>\n<li>通过hostalias在deployment里面修改hosts文件</li>\n<li>通过coredns修改hosts文件</li>\n<li>通过kube-dns添加域名服务器<h2 id=\"通过hostalias添加域名和ip\"><a href=\"#通过hostalias添加域名和ip\" class=\"headerlink\" title=\"通过hostalias添加域名和ip\"></a>通过hostalias添加域名和ip</h2>创建nginx pod<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl run nginx --image nginx</span><br><span class=\"line\">pod&#x2F;nginx created</span><br></pre></td></tr></table></figure>\n查看pod<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl get pods --output&#x3D;wide</span><br><span class=\"line\">NAME     READY     STATUS    RESTARTS   AGE    IP           NODE</span><br><span class=\"line\">nginx    1&#x2F;1       Running   0          13s    10.200.0.4   worker0</span><br><span class=\"line\"></span><br><span class=\"line\">$ kubectl exec nginx -- cat &#x2F;etc&#x2F;hosts</span><br><span class=\"line\">127.0.0.1\tlocalhost</span><br><span class=\"line\">::1\tlocalhost ip6-localhost ip6-loopback</span><br><span class=\"line\">fe00::0\tip6-localnet</span><br><span class=\"line\">fe00::0\tip6-mcastprefix</span><br><span class=\"line\">fe00::1\tip6-allnodes</span><br><span class=\"line\">fe00::2\tip6-allrouters</span><br><span class=\"line\">10.200.0.4\tnginx</span><br></pre></td></tr></table></figure>\n添加额外的域名和ip<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apiVersion: v1</span><br><span class=\"line\">kind: Pod</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: hostaliases-pod</span><br><span class=\"line\">spec:</span><br><span class=\"line\">  restartPolicy: Never</span><br><span class=\"line\">  hostAliases:</span><br><span class=\"line\">  - ip: &quot;127.0.0.1&quot;</span><br><span class=\"line\">    hostnames:</span><br><span class=\"line\">    - &quot;foo.local&quot;</span><br><span class=\"line\">    - &quot;bar.local&quot;</span><br><span class=\"line\">  - ip: &quot;10.1.2.3&quot;</span><br><span class=\"line\">    hostnames:</span><br><span class=\"line\">    - &quot;foo.remote&quot;</span><br><span class=\"line\">    - &quot;bar.remote&quot;</span><br><span class=\"line\">  containers:</span><br><span class=\"line\">  - name: cat-hosts</span><br><span class=\"line\">    image: busybox</span><br><span class=\"line\">    command:</span><br><span class=\"line\">    - cat</span><br><span class=\"line\">    args:</span><br><span class=\"line\">    - &quot;&#x2F;etc&#x2F;hosts&quot;</span><br></pre></td></tr></table></figure>\n运行这个pod<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl apply -f https:&#x2F;&#x2F;k8s.io&#x2F;examples&#x2F;service&#x2F;networking&#x2F;hostaliases-pod.yaml</span><br><span class=\"line\">pod&#x2F;hostaliases-pod created</span><br></pre></td></tr></table></figure>\n它的hostfile<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl exec hostaliases-pod -- cat &#x2F;etc&#x2F;hosts</span><br><span class=\"line\">127.0.0.1\tlocalhost</span><br><span class=\"line\">::1\tlocalhost ip6-localhost ip6-loopback</span><br><span class=\"line\">fe00::0\tip6-localnet</span><br><span class=\"line\">fe00::0\tip6-mcastprefix</span><br><span class=\"line\">fe00::1\tip6-allnodes</span><br><span class=\"line\">fe00::2\tip6-allrouters</span><br><span class=\"line\">10.200.0.5\thostaliases-pod</span><br><span class=\"line\"></span><br><span class=\"line\"># Entries added by HostAliases.</span><br><span class=\"line\">127.0.0.1\tfoo.local\tbar.local</span><br><span class=\"line\">10.1.2.3\tfoo.remote\tbar.remote</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"通过coredns修改hosts文件\"><a href=\"#通过coredns修改hosts文件\" class=\"headerlink\" title=\"通过coredns修改hosts文件\"></a>通过coredns修改hosts文件</h2><p>使用edit命令修改coredns configmap资源, 添加域名<code>193.160.57.121 harbor.com</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl edit configmap coredns -n kube-system</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@node-2 test]# kubectl get configmap coredns -n kube-system -o yaml</span><br><span class=\"line\">apiVersion: v1</span><br><span class=\"line\">data:</span><br><span class=\"line\">  Corefile: |</span><br><span class=\"line\">    .:53 &#123;</span><br><span class=\"line\">        errors</span><br><span class=\"line\">        health</span><br><span class=\"line\">        ready</span><br><span class=\"line\">        kubernetes cluster.local. in-addr.arpa ip6.arpa &#123;</span><br><span class=\"line\">            pods insecure</span><br><span class=\"line\">            fallthrough in-addr.arpa ip6.arpa</span><br><span class=\"line\">            ttl 30</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        hosts &#123;</span><br><span class=\"line\">           193.160.57.121 harbor.com           &#x2F;&#x2F;添加域名</span><br><span class=\"line\">           fallthrough</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        prometheus :9153</span><br><span class=\"line\">        forward . &#x2F;etc&#x2F;resolv.conf</span><br><span class=\"line\">        cache 30</span><br><span class=\"line\">        loop</span><br><span class=\"line\">        reload</span><br><span class=\"line\">        loadbalance</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">kind: ConfigMap</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  creationTimestamp: &quot;2020-08-20T10:18:50Z&quot;</span><br><span class=\"line\">  labels:</span><br><span class=\"line\">    addonmanager.kubernetes.io&#x2F;mode: EnsureExists</span><br><span class=\"line\">  name: coredns</span><br><span class=\"line\">  namespace: kube-system</span><br><span class=\"line\">  resourceVersion: &quot;13875493&quot;</span><br><span class=\"line\">  selfLink: &#x2F;api&#x2F;v1&#x2F;namespaces&#x2F;kube-system&#x2F;configmaps&#x2F;coredns</span><br><span class=\"line\">  uid: 10a8e6df-d3d6-49a6-98b9-57640fdb6011</span><br></pre></td></tr></table></figure>\n<h2 id=\"通过coredns添加域名服务器\"><a href=\"#通过coredns添加域名服务器\" class=\"headerlink\" title=\"通过coredns添加域名服务器\"></a>通过coredns添加域名服务器</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apiVersion: v1</span><br><span class=\"line\">data:</span><br><span class=\"line\">  Corefile: |</span><br><span class=\"line\">    .:53 &#123;</span><br><span class=\"line\">        errors</span><br><span class=\"line\">        health</span><br><span class=\"line\">        ready</span><br><span class=\"line\">        kubernetes cluster.local. in-addr.arpa ip6.arpa &#123;</span><br><span class=\"line\">            pods insecure</span><br><span class=\"line\">            fallthrough in-addr.arpa ip6.arpa</span><br><span class=\"line\">            ttl 30</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        proxy . 10.167.129.6             &#x2F;&#x2F;添加域名服务器</span><br><span class=\"line\">        prometheus :9153</span><br><span class=\"line\">        forward . &#x2F;etc&#x2F;resolv.conf</span><br><span class=\"line\">        cache 30</span><br><span class=\"line\">        loop</span><br><span class=\"line\">        reload</span><br><span class=\"line\">        loadbalance</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">kind: ConfigMap</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  creationTimestamp: &quot;2020-08-20T10:18:50Z&quot;</span><br><span class=\"line\">  labels:</span><br><span class=\"line\">    addonmanager.kubernetes.io&#x2F;mode: EnsureExists</span><br><span class=\"line\">  name: coredns</span><br><span class=\"line\">  namespace: kube-system</span><br><span class=\"line\">  resourceVersion: &quot;13875493&quot;</span><br><span class=\"line\">  selfLink: &#x2F;api&#x2F;v1&#x2F;namespaces&#x2F;kube-system&#x2F;configmaps&#x2F;coredns</span><br><span class=\"line\">  uid: 10a8e6df-d3d6-49a6-98b9-57640fdb6011</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"通过kube-dns添加域名服务器\"><a href=\"#通过kube-dns添加域名服务器\" class=\"headerlink\" title=\"通过kube-dns添加域名服务器\"></a>通过kube-dns添加域名服务器</h2><p>修改kube-dns的使用的ConfigMap。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apiVersion: v1</span><br><span class=\"line\">kind: ConfigMap</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: kube-dns</span><br><span class=\"line\">  namespace: kube-system</span><br><span class=\"line\">data:</span><br><span class=\"line\">  stubDomains: |</span><br><span class=\"line\">    &#123;&quot;k8s.com&quot;: [&quot;192.168.10.10&quot;]&#125;</span><br><span class=\"line\">  upstreamNameservers: |</span><br><span class=\"line\">    [&quot;8.8.8.8&quot;, &quot;8.8.4.4&quot;]</span><br></pre></td></tr></table></figure>\n<p><code>upstreamNameservers</code> 即使用的外部DNS。</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/\">add-entries-to-pod-etc-hosts-with-host-aliases</a><br><a href=\"https://www.cnblogs.com/lbjstill/p/13298826.html\">kubernetes 集群DNS配置及容器内CoreDNS解析外部域名配置问题</a><br><a href=\"https://jimmysong.io/kubernetes-handbook/appendix/tricks.html\">配置Pod使用外部DNS</a><br>[]</p>\n","site":{"data":{}},"more":"<p>一般来说有三种方法可以实现添加外部域名</p>\n<ul>\n<li>通过hostalias在deployment里面修改hosts文件</li>\n<li>通过coredns修改hosts文件</li>\n<li>通过kube-dns添加域名服务器<h2 id=\"通过hostalias添加域名和ip\"><a href=\"#通过hostalias添加域名和ip\" class=\"headerlink\" title=\"通过hostalias添加域名和ip\"></a>通过hostalias添加域名和ip</h2>创建nginx pod<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl run nginx --image nginx</span><br><span class=\"line\">pod&#x2F;nginx created</span><br></pre></td></tr></table></figure>\n查看pod<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl get pods --output&#x3D;wide</span><br><span class=\"line\">NAME     READY     STATUS    RESTARTS   AGE    IP           NODE</span><br><span class=\"line\">nginx    1&#x2F;1       Running   0          13s    10.200.0.4   worker0</span><br><span class=\"line\"></span><br><span class=\"line\">$ kubectl exec nginx -- cat &#x2F;etc&#x2F;hosts</span><br><span class=\"line\">127.0.0.1\tlocalhost</span><br><span class=\"line\">::1\tlocalhost ip6-localhost ip6-loopback</span><br><span class=\"line\">fe00::0\tip6-localnet</span><br><span class=\"line\">fe00::0\tip6-mcastprefix</span><br><span class=\"line\">fe00::1\tip6-allnodes</span><br><span class=\"line\">fe00::2\tip6-allrouters</span><br><span class=\"line\">10.200.0.4\tnginx</span><br></pre></td></tr></table></figure>\n添加额外的域名和ip<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apiVersion: v1</span><br><span class=\"line\">kind: Pod</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: hostaliases-pod</span><br><span class=\"line\">spec:</span><br><span class=\"line\">  restartPolicy: Never</span><br><span class=\"line\">  hostAliases:</span><br><span class=\"line\">  - ip: &quot;127.0.0.1&quot;</span><br><span class=\"line\">    hostnames:</span><br><span class=\"line\">    - &quot;foo.local&quot;</span><br><span class=\"line\">    - &quot;bar.local&quot;</span><br><span class=\"line\">  - ip: &quot;10.1.2.3&quot;</span><br><span class=\"line\">    hostnames:</span><br><span class=\"line\">    - &quot;foo.remote&quot;</span><br><span class=\"line\">    - &quot;bar.remote&quot;</span><br><span class=\"line\">  containers:</span><br><span class=\"line\">  - name: cat-hosts</span><br><span class=\"line\">    image: busybox</span><br><span class=\"line\">    command:</span><br><span class=\"line\">    - cat</span><br><span class=\"line\">    args:</span><br><span class=\"line\">    - &quot;&#x2F;etc&#x2F;hosts&quot;</span><br></pre></td></tr></table></figure>\n运行这个pod<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl apply -f https:&#x2F;&#x2F;k8s.io&#x2F;examples&#x2F;service&#x2F;networking&#x2F;hostaliases-pod.yaml</span><br><span class=\"line\">pod&#x2F;hostaliases-pod created</span><br></pre></td></tr></table></figure>\n它的hostfile<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl exec hostaliases-pod -- cat &#x2F;etc&#x2F;hosts</span><br><span class=\"line\">127.0.0.1\tlocalhost</span><br><span class=\"line\">::1\tlocalhost ip6-localhost ip6-loopback</span><br><span class=\"line\">fe00::0\tip6-localnet</span><br><span class=\"line\">fe00::0\tip6-mcastprefix</span><br><span class=\"line\">fe00::1\tip6-allnodes</span><br><span class=\"line\">fe00::2\tip6-allrouters</span><br><span class=\"line\">10.200.0.5\thostaliases-pod</span><br><span class=\"line\"></span><br><span class=\"line\"># Entries added by HostAliases.</span><br><span class=\"line\">127.0.0.1\tfoo.local\tbar.local</span><br><span class=\"line\">10.1.2.3\tfoo.remote\tbar.remote</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"通过coredns修改hosts文件\"><a href=\"#通过coredns修改hosts文件\" class=\"headerlink\" title=\"通过coredns修改hosts文件\"></a>通过coredns修改hosts文件</h2><p>使用edit命令修改coredns configmap资源, 添加域名<code>193.160.57.121 harbor.com</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl edit configmap coredns -n kube-system</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@node-2 test]# kubectl get configmap coredns -n kube-system -o yaml</span><br><span class=\"line\">apiVersion: v1</span><br><span class=\"line\">data:</span><br><span class=\"line\">  Corefile: |</span><br><span class=\"line\">    .:53 &#123;</span><br><span class=\"line\">        errors</span><br><span class=\"line\">        health</span><br><span class=\"line\">        ready</span><br><span class=\"line\">        kubernetes cluster.local. in-addr.arpa ip6.arpa &#123;</span><br><span class=\"line\">            pods insecure</span><br><span class=\"line\">            fallthrough in-addr.arpa ip6.arpa</span><br><span class=\"line\">            ttl 30</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        hosts &#123;</span><br><span class=\"line\">           193.160.57.121 harbor.com           &#x2F;&#x2F;添加域名</span><br><span class=\"line\">           fallthrough</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        prometheus :9153</span><br><span class=\"line\">        forward . &#x2F;etc&#x2F;resolv.conf</span><br><span class=\"line\">        cache 30</span><br><span class=\"line\">        loop</span><br><span class=\"line\">        reload</span><br><span class=\"line\">        loadbalance</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">kind: ConfigMap</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  creationTimestamp: &quot;2020-08-20T10:18:50Z&quot;</span><br><span class=\"line\">  labels:</span><br><span class=\"line\">    addonmanager.kubernetes.io&#x2F;mode: EnsureExists</span><br><span class=\"line\">  name: coredns</span><br><span class=\"line\">  namespace: kube-system</span><br><span class=\"line\">  resourceVersion: &quot;13875493&quot;</span><br><span class=\"line\">  selfLink: &#x2F;api&#x2F;v1&#x2F;namespaces&#x2F;kube-system&#x2F;configmaps&#x2F;coredns</span><br><span class=\"line\">  uid: 10a8e6df-d3d6-49a6-98b9-57640fdb6011</span><br></pre></td></tr></table></figure>\n<h2 id=\"通过coredns添加域名服务器\"><a href=\"#通过coredns添加域名服务器\" class=\"headerlink\" title=\"通过coredns添加域名服务器\"></a>通过coredns添加域名服务器</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apiVersion: v1</span><br><span class=\"line\">data:</span><br><span class=\"line\">  Corefile: |</span><br><span class=\"line\">    .:53 &#123;</span><br><span class=\"line\">        errors</span><br><span class=\"line\">        health</span><br><span class=\"line\">        ready</span><br><span class=\"line\">        kubernetes cluster.local. in-addr.arpa ip6.arpa &#123;</span><br><span class=\"line\">            pods insecure</span><br><span class=\"line\">            fallthrough in-addr.arpa ip6.arpa</span><br><span class=\"line\">            ttl 30</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        proxy . 10.167.129.6             &#x2F;&#x2F;添加域名服务器</span><br><span class=\"line\">        prometheus :9153</span><br><span class=\"line\">        forward . &#x2F;etc&#x2F;resolv.conf</span><br><span class=\"line\">        cache 30</span><br><span class=\"line\">        loop</span><br><span class=\"line\">        reload</span><br><span class=\"line\">        loadbalance</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">kind: ConfigMap</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  creationTimestamp: &quot;2020-08-20T10:18:50Z&quot;</span><br><span class=\"line\">  labels:</span><br><span class=\"line\">    addonmanager.kubernetes.io&#x2F;mode: EnsureExists</span><br><span class=\"line\">  name: coredns</span><br><span class=\"line\">  namespace: kube-system</span><br><span class=\"line\">  resourceVersion: &quot;13875493&quot;</span><br><span class=\"line\">  selfLink: &#x2F;api&#x2F;v1&#x2F;namespaces&#x2F;kube-system&#x2F;configmaps&#x2F;coredns</span><br><span class=\"line\">  uid: 10a8e6df-d3d6-49a6-98b9-57640fdb6011</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"通过kube-dns添加域名服务器\"><a href=\"#通过kube-dns添加域名服务器\" class=\"headerlink\" title=\"通过kube-dns添加域名服务器\"></a>通过kube-dns添加域名服务器</h2><p>修改kube-dns的使用的ConfigMap。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apiVersion: v1</span><br><span class=\"line\">kind: ConfigMap</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: kube-dns</span><br><span class=\"line\">  namespace: kube-system</span><br><span class=\"line\">data:</span><br><span class=\"line\">  stubDomains: |</span><br><span class=\"line\">    &#123;&quot;k8s.com&quot;: [&quot;192.168.10.10&quot;]&#125;</span><br><span class=\"line\">  upstreamNameservers: |</span><br><span class=\"line\">    [&quot;8.8.8.8&quot;, &quot;8.8.4.4&quot;]</span><br></pre></td></tr></table></figure>\n<p><code>upstreamNameservers</code> 即使用的外部DNS。</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/\">add-entries-to-pod-etc-hosts-with-host-aliases</a><br><a href=\"https://www.cnblogs.com/lbjstill/p/13298826.html\">kubernetes 集群DNS配置及容器内CoreDNS解析外部域名配置问题</a><br><a href=\"https://jimmysong.io/kubernetes-handbook/appendix/tricks.html\">配置Pod使用外部DNS</a><br>[]</p>\n"},{"layout":"post","title":"apt命令的一些使用方法","date":"2020-09-26T16:00:00.000Z","excerpt":"debian系列（ubuntu）的apt命令","comments":1,"_content":"\n```\napt-cache madison xxx             // 查看软件包可以安装的版本\napt download xxx                  // 只下载deb包，不安装\n```\n\n## apt-cache madison\n\n```\n$ apt-cache madison kubelet | head -n 5\n   kubelet |  1.18.8-00 | http://apt.kubernetes.io kubernetes-xenial/main amd64 Packages\n   kubelet |  1.18.6-00 | http://apt.kubernetes.io kubernetes-xenial/main amd64 Packages\n   kubelet |  1.18.5-00 | http://apt.kubernetes.io kubernetes-xenial/main amd64 Packages\n   kubelet |  1.18.4-01 | http://apt.kubernetes.io kubernetes-xenial/main amd64 Packages\n   kubelet |  1.18.4-00 | http://apt.kubernetes.io kubernetes-xenial/main amd64 Packages\n\n$ apt install kubelet=1.18.8-00\n```\n\n## apt download\n\n```\n$ apt-get download libssl1.1\n获取:1 http://mirrors.163.com/debian stretch/main amd64 libssl1.1 amd64 1.1.0l-1~deb9u1 [1,358 kB]\n已下载 1,358 kB，耗时 0秒 (2,830 kB/s)\n\n```","source":"_posts/2020-09-27-debian-install-command.md","raw":"---\nlayout: post\ntitle: \"apt命令的一些使用方法\"\ndate: 2020-09-27\nexcerpt: \"debian系列（ubuntu）的apt命令\"\ntags: [linux, debian, ubuntu]\ncomments: true\n---\n\n```\napt-cache madison xxx             // 查看软件包可以安装的版本\napt download xxx                  // 只下载deb包，不安装\n```\n\n## apt-cache madison\n\n```\n$ apt-cache madison kubelet | head -n 5\n   kubelet |  1.18.8-00 | http://apt.kubernetes.io kubernetes-xenial/main amd64 Packages\n   kubelet |  1.18.6-00 | http://apt.kubernetes.io kubernetes-xenial/main amd64 Packages\n   kubelet |  1.18.5-00 | http://apt.kubernetes.io kubernetes-xenial/main amd64 Packages\n   kubelet |  1.18.4-01 | http://apt.kubernetes.io kubernetes-xenial/main amd64 Packages\n   kubelet |  1.18.4-00 | http://apt.kubernetes.io kubernetes-xenial/main amd64 Packages\n\n$ apt install kubelet=1.18.8-00\n```\n\n## apt download\n\n```\n$ apt-get download libssl1.1\n获取:1 http://mirrors.163.com/debian stretch/main amd64 libssl1.1 amd64 1.1.0l-1~deb9u1 [1,358 kB]\n已下载 1,358 kB，耗时 0秒 (2,830 kB/s)\n\n```","slug":"2020-09-27-debian-install-command","published":1,"updated":"2020-10-09T02:58:23.932Z","photos":[],"link":"","_id":"ckgkk27te0011kcv0abeaffzp","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-cache madison xxx             &#x2F;&#x2F; 查看软件包可以安装的版本</span><br><span class=\"line\">apt download xxx                  &#x2F;&#x2F; 只下载deb包，不安装</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"apt-cache-madison\"><a href=\"#apt-cache-madison\" class=\"headerlink\" title=\"apt-cache madison\"></a>apt-cache madison</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ apt-cache madison kubelet | head -n 5</span><br><span class=\"line\">   kubelet |  1.18.8-00 | http:&#x2F;&#x2F;apt.kubernetes.io kubernetes-xenial&#x2F;main amd64 Packages</span><br><span class=\"line\">   kubelet |  1.18.6-00 | http:&#x2F;&#x2F;apt.kubernetes.io kubernetes-xenial&#x2F;main amd64 Packages</span><br><span class=\"line\">   kubelet |  1.18.5-00 | http:&#x2F;&#x2F;apt.kubernetes.io kubernetes-xenial&#x2F;main amd64 Packages</span><br><span class=\"line\">   kubelet |  1.18.4-01 | http:&#x2F;&#x2F;apt.kubernetes.io kubernetes-xenial&#x2F;main amd64 Packages</span><br><span class=\"line\">   kubelet |  1.18.4-00 | http:&#x2F;&#x2F;apt.kubernetes.io kubernetes-xenial&#x2F;main amd64 Packages</span><br><span class=\"line\"></span><br><span class=\"line\">$ apt install kubelet&#x3D;1.18.8-00</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"apt-download\"><a href=\"#apt-download\" class=\"headerlink\" title=\"apt download\"></a>apt download</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ apt-get download libssl1.1</span><br><span class=\"line\">获取:1 http:&#x2F;&#x2F;mirrors.163.com&#x2F;debian stretch&#x2F;main amd64 libssl1.1 amd64 1.1.0l-1~deb9u1 [1,358 kB]</span><br><span class=\"line\">已下载 1,358 kB，耗时 0秒 (2,830 kB&#x2F;s)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","site":{"data":{}},"more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-cache madison xxx             &#x2F;&#x2F; 查看软件包可以安装的版本</span><br><span class=\"line\">apt download xxx                  &#x2F;&#x2F; 只下载deb包，不安装</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"apt-cache-madison\"><a href=\"#apt-cache-madison\" class=\"headerlink\" title=\"apt-cache madison\"></a>apt-cache madison</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ apt-cache madison kubelet | head -n 5</span><br><span class=\"line\">   kubelet |  1.18.8-00 | http:&#x2F;&#x2F;apt.kubernetes.io kubernetes-xenial&#x2F;main amd64 Packages</span><br><span class=\"line\">   kubelet |  1.18.6-00 | http:&#x2F;&#x2F;apt.kubernetes.io kubernetes-xenial&#x2F;main amd64 Packages</span><br><span class=\"line\">   kubelet |  1.18.5-00 | http:&#x2F;&#x2F;apt.kubernetes.io kubernetes-xenial&#x2F;main amd64 Packages</span><br><span class=\"line\">   kubelet |  1.18.4-01 | http:&#x2F;&#x2F;apt.kubernetes.io kubernetes-xenial&#x2F;main amd64 Packages</span><br><span class=\"line\">   kubelet |  1.18.4-00 | http:&#x2F;&#x2F;apt.kubernetes.io kubernetes-xenial&#x2F;main amd64 Packages</span><br><span class=\"line\"></span><br><span class=\"line\">$ apt install kubelet&#x3D;1.18.8-00</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"apt-download\"><a href=\"#apt-download\" class=\"headerlink\" title=\"apt download\"></a>apt download</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ apt-get download libssl1.1</span><br><span class=\"line\">获取:1 http:&#x2F;&#x2F;mirrors.163.com&#x2F;debian stretch&#x2F;main amd64 libssl1.1 amd64 1.1.0l-1~deb9u1 [1,358 kB]</span><br><span class=\"line\">已下载 1,358 kB，耗时 0秒 (2,830 kB&#x2F;s)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"在debian上离线使用kubeadm搭建 v1.16.3版本Kubernetes集群","date":"2020-09-26T16:00:00.000Z","excerpt":"在debian上离线所有k8s资源，不需要网络安装kubernetes环境","comments":1,"_content":"\n# 环境准备\ndebian 9 机器一台，作为master节点和node节点\n\n## 首先安装docker\n[离线安装docker](https://www.cnblogs.com/luoSteel/p/10038954.html)  \n[docker 安装包下载地址](https://download.docker.com/linux/static/stable/x86_64/)\n\n## 关闭swap、selinux、防火墙\n```\nswapoff -a\n\nsystemctl stop firewalld\n```\n\n## 添加k8s官方源\n需要科学上网\n```\nsudo curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add\nsudo cat <<EOF >/etc/apt/sources.list.d/kubernetes.list\ndeb http://apt.kubernetes.io/ kubernetes-xenial main\nEOF\nsudo apt-get update\nsudo apt-get install -y kubelet kubeadm kubectl kubernetes-cni\n```\n\n## 配置离线包\n```\n$ apt-get download kubeadm=1.16.3-00 \n$ apt-get download kubelet=1.16.3-00 kubectl=1.16.3-00 kubernetes-cni\n$ apt-get download socat ebtables conntrack\n$ apt-get download cri-tools\n$ apt-get download libnetfilter-conntrack3\n$ apt-get download libssl1.1\n\n$ dpkg -i xxxx.deb\n```\n\n## 导出docker 离线包\n列出所有镜像\n```\n$ kubeadm config images list --image-repository registry.aliyuncs.com/google_containers --kubernetes-version v1.16.3\nregistry.aliyuncs.com/google_containers/kube-apiserver:v1.16.3\nregistry.aliyuncs.com/google_containers/kube-controller-manager:v1.16.3\nregistry.aliyuncs.com/google_containers/kube-scheduler:v1.16.3\nregistry.aliyuncs.com/google_containers/kube-proxy:v1.16.3\nregistry.aliyuncs.com/google_containers/pause:3.1\nregistry.aliyuncs.com/google_containers/etcd:3.3.15-0\nregistry.aliyuncs.com/google_containers/coredns:1.6.2\n\n$ docker save xxx xxx xxx > k8s.tar\n$ docker load < k8s.tar\n```\n\n# 使用kubeadm部署k8s\n## 初始化环境\n```\n$ kubeadm init \\\n    --image-repository registry.aliyuncs.com/google_containers \\\n    --kubernetes-version v1.16.3 \\\n    --pod-network-cidr=10.244.0.0/16\n...\nYour Kubernetes control-plane has initialized successfully!\n\nTo start using your cluster, you need to run the following as a regular user:\n\n  mkdir -p $HOME/.kube\n  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n  sudo chown $(id -u):$(id -g) $HOME/.kube/config\n\nYou should now deploy a pod network to the cluster.\nRun \"kubectl apply -f [podnetwork].yaml\" with one of the options listed at:\n  https://kubernetes.io/docs/concepts/cluster-administration/addons/\n\nYou can now join any number of control-plane nodes by copying certificate authorities \nand service account keys on each node and then running the following as root:\n\n  kubeadm join 192.168.9.10:6443 --token px979r.mphk9ee5ya8fgy44 \\\n    --discovery-token-ca-cert-hash sha256:5e7c7cd1cc1f86c0761e54b9380de22968b6b221cb98939c14ab2942223f6f51 \\\n    --control-plane \t  \n\nThen you can join any number of worker nodes by running the following on each as root:\n\nkubeadm join 192.168.9.10:6443 --token px979r.mphk9ee5ya8fgy44 \\\n    --discovery-token-ca-cert-hash sha256:5e7c7cd1cc1f86c0761e54b9380de22968b6b221cb98939c14ab2942223f6f51 \n\n```\n根据提示设置`kubeconfig`，或者添加子节点\n## 设置k8s的网络插件\n```\n$ kubectl apply -f \"https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\\n')\"\n```\n\n```\n$ docker save weaveworks/weave-npc:2.7.0 weaveworks/weave-kube:2.7.0 > weave.tar\n$ docker load < weave.tar\n```\n## 安装helm\n\n### 去除节点污点\n只有一个master节点的情况下，master节点不允许运行资源，需要去掉污点\n```\n$ kubectl get nodes\nNAME       STATUS   ROLES    AGE    VERSION\nlinx-dev   Ready    master   138m   v1.16.3\n\n$ kubectl describe node linx-dev  | grep Taint\nTaints:             node-role.kubernetes.io/master:NoSchedule\n\n// 如果Taints是none，则不需要去除污点\nkubectl taint nodes linx-dev node-role.kubernetes.io/master:NoSchedule-\n```\n\n### 下载客户端\n```\nwget https://get.helm.sh/helm-v2.16.3-linux-amd64.tar.gz\n```\n### 解压缩并拷贝helm二进制文件\n```\ntar xf helm-v2.16.3-linux-amd64.tar.gz\ncp linux-amd64/helm /usr/local/bin\n```\n### 导出tiller镜像\n```\ndocker save registry.cn-hangzhou.aliyuncs.com/google_containers/tiller:v2.16.3 > helm.tar\ndocker load < helm.tar\n```\n\n### 初始化helm，部署tiller\n```\n$ kubectl -n kube-system create serviceaccount tiller\n$ kubectl create clusterrolebinding tiller --clusterrole cluster-admin –serviceaccount=kube-system:tiller\n```\n`--stable-repo-url http://10.16.48.44/`需要起一个http 服务，apache或者node都可以，这儿下面放了一个文件index.yaml文件，可以从这儿下载到https://kubernetes.oss-cn-hangzhou.aliyuncs.com/charts/index.yaml\n```\n$ helm init --service-account tiller --tiller-image=registry.cn-hangzhou.aliyuncs.com/google_containers/tiller:v2.16.3 --upgrade --stable-repo-url http://193.160.57.100\nCreating /root/.helm/repository/repositories.yaml \nAdding stable repo with URL: http://193.160.57.100 \nAdding local repo with URL: http://127.0.0.1:8879/charts \n$HELM_HOME has been configured at /root/.helm.\n\nTiller (the Helm server-side component) has been installed into your Kubernetes Cluster.\n\nPlease note: by default, Tiller is deployed with an insecure 'allow unauthenticated users' policy.\nTo prevent this, run `helm init` with the --tiller-tls-verify flag.\nFor more information on securing your installation see: https://docs.helm.sh/using_helm/#securing-your-helm-installation\n\n```\n\n## 安装openebs存储服务\n\n### yaml文件\n将其中的`imagePullPolicy`改为`IfNotPresent`，这样可以优先选择本地镜像，而不会去请求网络\n```\nhttps://openebs.github.io/charts/openebs-operator-1.5.0.yaml\n```\n### 导出所有openebs镜像\n```\n$ docker save quay.io/openebs/m-apiserver:1.5.0 quay.io/openebs/openebs-k8s-provisioner:1.5.0 quay.io/openebs/snapshot-controller:1.5.0 quay.io/openebs/snapshot-provisioner:1.5.0 quay.io/openebs/node-disk-manager-amd64:v0.4.5 quay.io/openebs/node-disk-operator-amd64:v0.4.5 quay.io/openebs/admission-server:1.5.0 quay.io/openebs/provisioner-localpv:1.5.0 quay.io/openebs/linux-utils:1.5.0 > openebs.tar\n\n$ docker load < openebs.tar\n```\n```\nkubectl apply -f openebs-operator-1.5.0.yaml\n```\n### 设置默认存储\n```\n$ kubectl patch storageclass openebs-hostpath -p '{\"metadata\": {\"annotations\":{\"storageclass.kubernetes.io/is-default-class\":\"true\"}}}'\nstorageclass.storage.k8s.io/openebs-hostpath patched\n```\n## 安装kubesphere\n\n### 导入最小化镜像\n```\ndocker load < ks_minimal_images.tar\n```\n\n### 安装kubesphere\n```\nkubectl apply -f kubesphere-minimal.yaml\n```\n\n## 参考\n[Helm离线安装](https://www.jianshu.com/p/2bb1dfdadee8)","source":"_posts/2020-09-27-debian-install-k8s-offline.md","raw":"---\nlayout: post\ntitle: \"在debian上离线使用kubeadm搭建 v1.16.3版本Kubernetes集群\"\ndate: 2020-09-27\nexcerpt: \"在debian上离线所有k8s资源，不需要网络安装kubernetes环境\"\ntags: [linux, kubernetes, debian]\ncomments: true\n---\n\n# 环境准备\ndebian 9 机器一台，作为master节点和node节点\n\n## 首先安装docker\n[离线安装docker](https://www.cnblogs.com/luoSteel/p/10038954.html)  \n[docker 安装包下载地址](https://download.docker.com/linux/static/stable/x86_64/)\n\n## 关闭swap、selinux、防火墙\n```\nswapoff -a\n\nsystemctl stop firewalld\n```\n\n## 添加k8s官方源\n需要科学上网\n```\nsudo curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add\nsudo cat <<EOF >/etc/apt/sources.list.d/kubernetes.list\ndeb http://apt.kubernetes.io/ kubernetes-xenial main\nEOF\nsudo apt-get update\nsudo apt-get install -y kubelet kubeadm kubectl kubernetes-cni\n```\n\n## 配置离线包\n```\n$ apt-get download kubeadm=1.16.3-00 \n$ apt-get download kubelet=1.16.3-00 kubectl=1.16.3-00 kubernetes-cni\n$ apt-get download socat ebtables conntrack\n$ apt-get download cri-tools\n$ apt-get download libnetfilter-conntrack3\n$ apt-get download libssl1.1\n\n$ dpkg -i xxxx.deb\n```\n\n## 导出docker 离线包\n列出所有镜像\n```\n$ kubeadm config images list --image-repository registry.aliyuncs.com/google_containers --kubernetes-version v1.16.3\nregistry.aliyuncs.com/google_containers/kube-apiserver:v1.16.3\nregistry.aliyuncs.com/google_containers/kube-controller-manager:v1.16.3\nregistry.aliyuncs.com/google_containers/kube-scheduler:v1.16.3\nregistry.aliyuncs.com/google_containers/kube-proxy:v1.16.3\nregistry.aliyuncs.com/google_containers/pause:3.1\nregistry.aliyuncs.com/google_containers/etcd:3.3.15-0\nregistry.aliyuncs.com/google_containers/coredns:1.6.2\n\n$ docker save xxx xxx xxx > k8s.tar\n$ docker load < k8s.tar\n```\n\n# 使用kubeadm部署k8s\n## 初始化环境\n```\n$ kubeadm init \\\n    --image-repository registry.aliyuncs.com/google_containers \\\n    --kubernetes-version v1.16.3 \\\n    --pod-network-cidr=10.244.0.0/16\n...\nYour Kubernetes control-plane has initialized successfully!\n\nTo start using your cluster, you need to run the following as a regular user:\n\n  mkdir -p $HOME/.kube\n  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n  sudo chown $(id -u):$(id -g) $HOME/.kube/config\n\nYou should now deploy a pod network to the cluster.\nRun \"kubectl apply -f [podnetwork].yaml\" with one of the options listed at:\n  https://kubernetes.io/docs/concepts/cluster-administration/addons/\n\nYou can now join any number of control-plane nodes by copying certificate authorities \nand service account keys on each node and then running the following as root:\n\n  kubeadm join 192.168.9.10:6443 --token px979r.mphk9ee5ya8fgy44 \\\n    --discovery-token-ca-cert-hash sha256:5e7c7cd1cc1f86c0761e54b9380de22968b6b221cb98939c14ab2942223f6f51 \\\n    --control-plane \t  \n\nThen you can join any number of worker nodes by running the following on each as root:\n\nkubeadm join 192.168.9.10:6443 --token px979r.mphk9ee5ya8fgy44 \\\n    --discovery-token-ca-cert-hash sha256:5e7c7cd1cc1f86c0761e54b9380de22968b6b221cb98939c14ab2942223f6f51 \n\n```\n根据提示设置`kubeconfig`，或者添加子节点\n## 设置k8s的网络插件\n```\n$ kubectl apply -f \"https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\\n')\"\n```\n\n```\n$ docker save weaveworks/weave-npc:2.7.0 weaveworks/weave-kube:2.7.0 > weave.tar\n$ docker load < weave.tar\n```\n## 安装helm\n\n### 去除节点污点\n只有一个master节点的情况下，master节点不允许运行资源，需要去掉污点\n```\n$ kubectl get nodes\nNAME       STATUS   ROLES    AGE    VERSION\nlinx-dev   Ready    master   138m   v1.16.3\n\n$ kubectl describe node linx-dev  | grep Taint\nTaints:             node-role.kubernetes.io/master:NoSchedule\n\n// 如果Taints是none，则不需要去除污点\nkubectl taint nodes linx-dev node-role.kubernetes.io/master:NoSchedule-\n```\n\n### 下载客户端\n```\nwget https://get.helm.sh/helm-v2.16.3-linux-amd64.tar.gz\n```\n### 解压缩并拷贝helm二进制文件\n```\ntar xf helm-v2.16.3-linux-amd64.tar.gz\ncp linux-amd64/helm /usr/local/bin\n```\n### 导出tiller镜像\n```\ndocker save registry.cn-hangzhou.aliyuncs.com/google_containers/tiller:v2.16.3 > helm.tar\ndocker load < helm.tar\n```\n\n### 初始化helm，部署tiller\n```\n$ kubectl -n kube-system create serviceaccount tiller\n$ kubectl create clusterrolebinding tiller --clusterrole cluster-admin –serviceaccount=kube-system:tiller\n```\n`--stable-repo-url http://10.16.48.44/`需要起一个http 服务，apache或者node都可以，这儿下面放了一个文件index.yaml文件，可以从这儿下载到https://kubernetes.oss-cn-hangzhou.aliyuncs.com/charts/index.yaml\n```\n$ helm init --service-account tiller --tiller-image=registry.cn-hangzhou.aliyuncs.com/google_containers/tiller:v2.16.3 --upgrade --stable-repo-url http://193.160.57.100\nCreating /root/.helm/repository/repositories.yaml \nAdding stable repo with URL: http://193.160.57.100 \nAdding local repo with URL: http://127.0.0.1:8879/charts \n$HELM_HOME has been configured at /root/.helm.\n\nTiller (the Helm server-side component) has been installed into your Kubernetes Cluster.\n\nPlease note: by default, Tiller is deployed with an insecure 'allow unauthenticated users' policy.\nTo prevent this, run `helm init` with the --tiller-tls-verify flag.\nFor more information on securing your installation see: https://docs.helm.sh/using_helm/#securing-your-helm-installation\n\n```\n\n## 安装openebs存储服务\n\n### yaml文件\n将其中的`imagePullPolicy`改为`IfNotPresent`，这样可以优先选择本地镜像，而不会去请求网络\n```\nhttps://openebs.github.io/charts/openebs-operator-1.5.0.yaml\n```\n### 导出所有openebs镜像\n```\n$ docker save quay.io/openebs/m-apiserver:1.5.0 quay.io/openebs/openebs-k8s-provisioner:1.5.0 quay.io/openebs/snapshot-controller:1.5.0 quay.io/openebs/snapshot-provisioner:1.5.0 quay.io/openebs/node-disk-manager-amd64:v0.4.5 quay.io/openebs/node-disk-operator-amd64:v0.4.5 quay.io/openebs/admission-server:1.5.0 quay.io/openebs/provisioner-localpv:1.5.0 quay.io/openebs/linux-utils:1.5.0 > openebs.tar\n\n$ docker load < openebs.tar\n```\n```\nkubectl apply -f openebs-operator-1.5.0.yaml\n```\n### 设置默认存储\n```\n$ kubectl patch storageclass openebs-hostpath -p '{\"metadata\": {\"annotations\":{\"storageclass.kubernetes.io/is-default-class\":\"true\"}}}'\nstorageclass.storage.k8s.io/openebs-hostpath patched\n```\n## 安装kubesphere\n\n### 导入最小化镜像\n```\ndocker load < ks_minimal_images.tar\n```\n\n### 安装kubesphere\n```\nkubectl apply -f kubesphere-minimal.yaml\n```\n\n## 参考\n[Helm离线安装](https://www.jianshu.com/p/2bb1dfdadee8)","slug":"2020-09-27-debian-install-k8s-offline","published":1,"updated":"2020-10-09T02:57:43.372Z","photos":[],"link":"","_id":"ckgkk27tj0014kcv0dtiz3het","content":"<h1 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h1><p>debian 9 机器一台，作为master节点和node节点</p>\n<h2 id=\"首先安装docker\"><a href=\"#首先安装docker\" class=\"headerlink\" title=\"首先安装docker\"></a>首先安装docker</h2><p><a href=\"https://www.cnblogs.com/luoSteel/p/10038954.html\">离线安装docker</a><br><a href=\"https://download.docker.com/linux/static/stable/x86_64/\">docker 安装包下载地址</a></p>\n<h2 id=\"关闭swap、selinux、防火墙\"><a href=\"#关闭swap、selinux、防火墙\" class=\"headerlink\" title=\"关闭swap、selinux、防火墙\"></a>关闭swap、selinux、防火墙</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">swapoff -a</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl stop firewalld</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"添加k8s官方源\"><a href=\"#添加k8s官方源\" class=\"headerlink\" title=\"添加k8s官方源\"></a>添加k8s官方源</h2><p>需要科学上网</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo curl -s https:&#x2F;&#x2F;packages.cloud.google.com&#x2F;apt&#x2F;doc&#x2F;apt-key.gpg | sudo apt-key add</span><br><span class=\"line\">sudo cat &lt;&lt;EOF &gt;&#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;kubernetes.list</span><br><span class=\"line\">deb http:&#x2F;&#x2F;apt.kubernetes.io&#x2F; kubernetes-xenial main</span><br><span class=\"line\">EOF</span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get install -y kubelet kubeadm kubectl kubernetes-cni</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"配置离线包\"><a href=\"#配置离线包\" class=\"headerlink\" title=\"配置离线包\"></a>配置离线包</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ apt-get download kubeadm&#x3D;1.16.3-00 </span><br><span class=\"line\">$ apt-get download kubelet&#x3D;1.16.3-00 kubectl&#x3D;1.16.3-00 kubernetes-cni</span><br><span class=\"line\">$ apt-get download socat ebtables conntrack</span><br><span class=\"line\">$ apt-get download cri-tools</span><br><span class=\"line\">$ apt-get download libnetfilter-conntrack3</span><br><span class=\"line\">$ apt-get download libssl1.1</span><br><span class=\"line\"></span><br><span class=\"line\">$ dpkg -i xxxx.deb</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"导出docker-离线包\"><a href=\"#导出docker-离线包\" class=\"headerlink\" title=\"导出docker 离线包\"></a>导出docker 离线包</h2><p>列出所有镜像</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubeadm config images list --image-repository registry.aliyuncs.com&#x2F;google_containers --kubernetes-version v1.16.3</span><br><span class=\"line\">registry.aliyuncs.com&#x2F;google_containers&#x2F;kube-apiserver:v1.16.3</span><br><span class=\"line\">registry.aliyuncs.com&#x2F;google_containers&#x2F;kube-controller-manager:v1.16.3</span><br><span class=\"line\">registry.aliyuncs.com&#x2F;google_containers&#x2F;kube-scheduler:v1.16.3</span><br><span class=\"line\">registry.aliyuncs.com&#x2F;google_containers&#x2F;kube-proxy:v1.16.3</span><br><span class=\"line\">registry.aliyuncs.com&#x2F;google_containers&#x2F;pause:3.1</span><br><span class=\"line\">registry.aliyuncs.com&#x2F;google_containers&#x2F;etcd:3.3.15-0</span><br><span class=\"line\">registry.aliyuncs.com&#x2F;google_containers&#x2F;coredns:1.6.2</span><br><span class=\"line\"></span><br><span class=\"line\">$ docker save xxx xxx xxx &gt; k8s.tar</span><br><span class=\"line\">$ docker load &lt; k8s.tar</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"使用kubeadm部署k8s\"><a href=\"#使用kubeadm部署k8s\" class=\"headerlink\" title=\"使用kubeadm部署k8s\"></a>使用kubeadm部署k8s</h1><h2 id=\"初始化环境\"><a href=\"#初始化环境\" class=\"headerlink\" title=\"初始化环境\"></a>初始化环境</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubeadm init \\</span><br><span class=\"line\">    --image-repository registry.aliyuncs.com&#x2F;google_containers \\</span><br><span class=\"line\">    --kubernetes-version v1.16.3 \\</span><br><span class=\"line\">    --pod-network-cidr&#x3D;10.244.0.0&#x2F;16</span><br><span class=\"line\">...</span><br><span class=\"line\">Your Kubernetes control-plane has initialized successfully!</span><br><span class=\"line\"></span><br><span class=\"line\">To start using your cluster, you need to run the following as a regular user:</span><br><span class=\"line\"></span><br><span class=\"line\">  mkdir -p $HOME&#x2F;.kube</span><br><span class=\"line\">  sudo cp -i &#x2F;etc&#x2F;kubernetes&#x2F;admin.conf $HOME&#x2F;.kube&#x2F;config</span><br><span class=\"line\">  sudo chown $(id -u):$(id -g) $HOME&#x2F;.kube&#x2F;config</span><br><span class=\"line\"></span><br><span class=\"line\">You should now deploy a pod network to the cluster.</span><br><span class=\"line\">Run &quot;kubectl apply -f [podnetwork].yaml&quot; with one of the options listed at:</span><br><span class=\"line\">  https:&#x2F;&#x2F;kubernetes.io&#x2F;docs&#x2F;concepts&#x2F;cluster-administration&#x2F;addons&#x2F;</span><br><span class=\"line\"></span><br><span class=\"line\">You can now join any number of control-plane nodes by copying certificate authorities </span><br><span class=\"line\">and service account keys on each node and then running the following as root:</span><br><span class=\"line\"></span><br><span class=\"line\">  kubeadm join 192.168.9.10:6443 --token px979r.mphk9ee5ya8fgy44 \\</span><br><span class=\"line\">    --discovery-token-ca-cert-hash sha256:5e7c7cd1cc1f86c0761e54b9380de22968b6b221cb98939c14ab2942223f6f51 \\</span><br><span class=\"line\">    --control-plane \t  </span><br><span class=\"line\"></span><br><span class=\"line\">Then you can join any number of worker nodes by running the following on each as root:</span><br><span class=\"line\"></span><br><span class=\"line\">kubeadm join 192.168.9.10:6443 --token px979r.mphk9ee5ya8fgy44 \\</span><br><span class=\"line\">    --discovery-token-ca-cert-hash sha256:5e7c7cd1cc1f86c0761e54b9380de22968b6b221cb98939c14ab2942223f6f51 </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>根据提示设置<code>kubeconfig</code>，或者添加子节点</p>\n<h2 id=\"设置k8s的网络插件\"><a href=\"#设置k8s的网络插件\" class=\"headerlink\" title=\"设置k8s的网络插件\"></a>设置k8s的网络插件</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl apply -f &quot;https:&#x2F;&#x2F;cloud.weave.works&#x2F;k8s&#x2F;net?k8s-version&#x3D;$(kubectl version | base64 | tr -d &#39;\\n&#39;)&quot;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker save weaveworks&#x2F;weave-npc:2.7.0 weaveworks&#x2F;weave-kube:2.7.0 &gt; weave.tar</span><br><span class=\"line\">$ docker load &lt; weave.tar</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装helm\"><a href=\"#安装helm\" class=\"headerlink\" title=\"安装helm\"></a>安装helm</h2><h3 id=\"去除节点污点\"><a href=\"#去除节点污点\" class=\"headerlink\" title=\"去除节点污点\"></a>去除节点污点</h3><p>只有一个master节点的情况下，master节点不允许运行资源，需要去掉污点</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl get nodes</span><br><span class=\"line\">NAME       STATUS   ROLES    AGE    VERSION</span><br><span class=\"line\">linx-dev   Ready    master   138m   v1.16.3</span><br><span class=\"line\"></span><br><span class=\"line\">$ kubectl describe node linx-dev  | grep Taint</span><br><span class=\"line\">Taints:             node-role.kubernetes.io&#x2F;master:NoSchedule</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; 如果Taints是none，则不需要去除污点</span><br><span class=\"line\">kubectl taint nodes linx-dev node-role.kubernetes.io&#x2F;master:NoSchedule-</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"下载客户端\"><a href=\"#下载客户端\" class=\"headerlink\" title=\"下载客户端\"></a>下载客户端</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https:&#x2F;&#x2F;get.helm.sh&#x2F;helm-v2.16.3-linux-amd64.tar.gz</span><br></pre></td></tr></table></figure>\n<h3 id=\"解压缩并拷贝helm二进制文件\"><a href=\"#解压缩并拷贝helm二进制文件\" class=\"headerlink\" title=\"解压缩并拷贝helm二进制文件\"></a>解压缩并拷贝helm二进制文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar xf helm-v2.16.3-linux-amd64.tar.gz</span><br><span class=\"line\">cp linux-amd64&#x2F;helm &#x2F;usr&#x2F;local&#x2F;bin</span><br></pre></td></tr></table></figure>\n<h3 id=\"导出tiller镜像\"><a href=\"#导出tiller镜像\" class=\"headerlink\" title=\"导出tiller镜像\"></a>导出tiller镜像</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker save registry.cn-hangzhou.aliyuncs.com&#x2F;google_containers&#x2F;tiller:v2.16.3 &gt; helm.tar</span><br><span class=\"line\">docker load &lt; helm.tar</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"初始化helm，部署tiller\"><a href=\"#初始化helm，部署tiller\" class=\"headerlink\" title=\"初始化helm，部署tiller\"></a>初始化helm，部署tiller</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl -n kube-system create serviceaccount tiller</span><br><span class=\"line\">$ kubectl create clusterrolebinding tiller --clusterrole cluster-admin –serviceaccount&#x3D;kube-system:tiller</span><br></pre></td></tr></table></figure>\n<p><code>--stable-repo-url http://10.16.48.44/</code>需要起一个http 服务，apache或者node都可以，这儿下面放了一个文件index.yaml文件，可以从这儿下载到<a href=\"https://kubernetes.oss-cn-hangzhou.aliyuncs.com/charts/index.yaml\">https://kubernetes.oss-cn-hangzhou.aliyuncs.com/charts/index.yaml</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ helm init --service-account tiller --tiller-image&#x3D;registry.cn-hangzhou.aliyuncs.com&#x2F;google_containers&#x2F;tiller:v2.16.3 --upgrade --stable-repo-url http:&#x2F;&#x2F;193.160.57.100</span><br><span class=\"line\">Creating &#x2F;root&#x2F;.helm&#x2F;repository&#x2F;repositories.yaml </span><br><span class=\"line\">Adding stable repo with URL: http:&#x2F;&#x2F;193.160.57.100 </span><br><span class=\"line\">Adding local repo with URL: http:&#x2F;&#x2F;127.0.0.1:8879&#x2F;charts </span><br><span class=\"line\">$HELM_HOME has been configured at &#x2F;root&#x2F;.helm.</span><br><span class=\"line\"></span><br><span class=\"line\">Tiller (the Helm server-side component) has been installed into your Kubernetes Cluster.</span><br><span class=\"line\"></span><br><span class=\"line\">Please note: by default, Tiller is deployed with an insecure &#39;allow unauthenticated users&#39; policy.</span><br><span class=\"line\">To prevent this, run &#96;helm init&#96; with the --tiller-tls-verify flag.</span><br><span class=\"line\">For more information on securing your installation see: https:&#x2F;&#x2F;docs.helm.sh&#x2F;using_helm&#x2F;#securing-your-helm-installation</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装openebs存储服务\"><a href=\"#安装openebs存储服务\" class=\"headerlink\" title=\"安装openebs存储服务\"></a>安装openebs存储服务</h2><h3 id=\"yaml文件\"><a href=\"#yaml文件\" class=\"headerlink\" title=\"yaml文件\"></a>yaml文件</h3><p>将其中的<code>imagePullPolicy</code>改为<code>IfNotPresent</code>，这样可以优先选择本地镜像，而不会去请求网络</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https:&#x2F;&#x2F;openebs.github.io&#x2F;charts&#x2F;openebs-operator-1.5.0.yaml</span><br></pre></td></tr></table></figure>\n<h3 id=\"导出所有openebs镜像\"><a href=\"#导出所有openebs镜像\" class=\"headerlink\" title=\"导出所有openebs镜像\"></a>导出所有openebs镜像</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker save quay.io&#x2F;openebs&#x2F;m-apiserver:1.5.0 quay.io&#x2F;openebs&#x2F;openebs-k8s-provisioner:1.5.0 quay.io&#x2F;openebs&#x2F;snapshot-controller:1.5.0 quay.io&#x2F;openebs&#x2F;snapshot-provisioner:1.5.0 quay.io&#x2F;openebs&#x2F;node-disk-manager-amd64:v0.4.5 quay.io&#x2F;openebs&#x2F;node-disk-operator-amd64:v0.4.5 quay.io&#x2F;openebs&#x2F;admission-server:1.5.0 quay.io&#x2F;openebs&#x2F;provisioner-localpv:1.5.0 quay.io&#x2F;openebs&#x2F;linux-utils:1.5.0 &gt; openebs.tar</span><br><span class=\"line\"></span><br><span class=\"line\">$ docker load &lt; openebs.tar</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl apply -f openebs-operator-1.5.0.yaml</span><br></pre></td></tr></table></figure>\n<h3 id=\"设置默认存储\"><a href=\"#设置默认存储\" class=\"headerlink\" title=\"设置默认存储\"></a>设置默认存储</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl patch storageclass openebs-hostpath -p &#39;&#123;&quot;metadata&quot;: &#123;&quot;annotations&quot;:&#123;&quot;storageclass.kubernetes.io&#x2F;is-default-class&quot;:&quot;true&quot;&#125;&#125;&#125;&#39;</span><br><span class=\"line\">storageclass.storage.k8s.io&#x2F;openebs-hostpath patched</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装kubesphere\"><a href=\"#安装kubesphere\" class=\"headerlink\" title=\"安装kubesphere\"></a>安装kubesphere</h2><h3 id=\"导入最小化镜像\"><a href=\"#导入最小化镜像\" class=\"headerlink\" title=\"导入最小化镜像\"></a>导入最小化镜像</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker load &lt; ks_minimal_images.tar</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"安装kubesphere-1\"><a href=\"#安装kubesphere-1\" class=\"headerlink\" title=\"安装kubesphere\"></a>安装kubesphere</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl apply -f kubesphere-minimal.yaml</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"https://www.jianshu.com/p/2bb1dfdadee8\">Helm离线安装</a></p>\n","site":{"data":{}},"more":"<h1 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h1><p>debian 9 机器一台，作为master节点和node节点</p>\n<h2 id=\"首先安装docker\"><a href=\"#首先安装docker\" class=\"headerlink\" title=\"首先安装docker\"></a>首先安装docker</h2><p><a href=\"https://www.cnblogs.com/luoSteel/p/10038954.html\">离线安装docker</a><br><a href=\"https://download.docker.com/linux/static/stable/x86_64/\">docker 安装包下载地址</a></p>\n<h2 id=\"关闭swap、selinux、防火墙\"><a href=\"#关闭swap、selinux、防火墙\" class=\"headerlink\" title=\"关闭swap、selinux、防火墙\"></a>关闭swap、selinux、防火墙</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">swapoff -a</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl stop firewalld</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"添加k8s官方源\"><a href=\"#添加k8s官方源\" class=\"headerlink\" title=\"添加k8s官方源\"></a>添加k8s官方源</h2><p>需要科学上网</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo curl -s https:&#x2F;&#x2F;packages.cloud.google.com&#x2F;apt&#x2F;doc&#x2F;apt-key.gpg | sudo apt-key add</span><br><span class=\"line\">sudo cat &lt;&lt;EOF &gt;&#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;kubernetes.list</span><br><span class=\"line\">deb http:&#x2F;&#x2F;apt.kubernetes.io&#x2F; kubernetes-xenial main</span><br><span class=\"line\">EOF</span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get install -y kubelet kubeadm kubectl kubernetes-cni</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"配置离线包\"><a href=\"#配置离线包\" class=\"headerlink\" title=\"配置离线包\"></a>配置离线包</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ apt-get download kubeadm&#x3D;1.16.3-00 </span><br><span class=\"line\">$ apt-get download kubelet&#x3D;1.16.3-00 kubectl&#x3D;1.16.3-00 kubernetes-cni</span><br><span class=\"line\">$ apt-get download socat ebtables conntrack</span><br><span class=\"line\">$ apt-get download cri-tools</span><br><span class=\"line\">$ apt-get download libnetfilter-conntrack3</span><br><span class=\"line\">$ apt-get download libssl1.1</span><br><span class=\"line\"></span><br><span class=\"line\">$ dpkg -i xxxx.deb</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"导出docker-离线包\"><a href=\"#导出docker-离线包\" class=\"headerlink\" title=\"导出docker 离线包\"></a>导出docker 离线包</h2><p>列出所有镜像</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubeadm config images list --image-repository registry.aliyuncs.com&#x2F;google_containers --kubernetes-version v1.16.3</span><br><span class=\"line\">registry.aliyuncs.com&#x2F;google_containers&#x2F;kube-apiserver:v1.16.3</span><br><span class=\"line\">registry.aliyuncs.com&#x2F;google_containers&#x2F;kube-controller-manager:v1.16.3</span><br><span class=\"line\">registry.aliyuncs.com&#x2F;google_containers&#x2F;kube-scheduler:v1.16.3</span><br><span class=\"line\">registry.aliyuncs.com&#x2F;google_containers&#x2F;kube-proxy:v1.16.3</span><br><span class=\"line\">registry.aliyuncs.com&#x2F;google_containers&#x2F;pause:3.1</span><br><span class=\"line\">registry.aliyuncs.com&#x2F;google_containers&#x2F;etcd:3.3.15-0</span><br><span class=\"line\">registry.aliyuncs.com&#x2F;google_containers&#x2F;coredns:1.6.2</span><br><span class=\"line\"></span><br><span class=\"line\">$ docker save xxx xxx xxx &gt; k8s.tar</span><br><span class=\"line\">$ docker load &lt; k8s.tar</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"使用kubeadm部署k8s\"><a href=\"#使用kubeadm部署k8s\" class=\"headerlink\" title=\"使用kubeadm部署k8s\"></a>使用kubeadm部署k8s</h1><h2 id=\"初始化环境\"><a href=\"#初始化环境\" class=\"headerlink\" title=\"初始化环境\"></a>初始化环境</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubeadm init \\</span><br><span class=\"line\">    --image-repository registry.aliyuncs.com&#x2F;google_containers \\</span><br><span class=\"line\">    --kubernetes-version v1.16.3 \\</span><br><span class=\"line\">    --pod-network-cidr&#x3D;10.244.0.0&#x2F;16</span><br><span class=\"line\">...</span><br><span class=\"line\">Your Kubernetes control-plane has initialized successfully!</span><br><span class=\"line\"></span><br><span class=\"line\">To start using your cluster, you need to run the following as a regular user:</span><br><span class=\"line\"></span><br><span class=\"line\">  mkdir -p $HOME&#x2F;.kube</span><br><span class=\"line\">  sudo cp -i &#x2F;etc&#x2F;kubernetes&#x2F;admin.conf $HOME&#x2F;.kube&#x2F;config</span><br><span class=\"line\">  sudo chown $(id -u):$(id -g) $HOME&#x2F;.kube&#x2F;config</span><br><span class=\"line\"></span><br><span class=\"line\">You should now deploy a pod network to the cluster.</span><br><span class=\"line\">Run &quot;kubectl apply -f [podnetwork].yaml&quot; with one of the options listed at:</span><br><span class=\"line\">  https:&#x2F;&#x2F;kubernetes.io&#x2F;docs&#x2F;concepts&#x2F;cluster-administration&#x2F;addons&#x2F;</span><br><span class=\"line\"></span><br><span class=\"line\">You can now join any number of control-plane nodes by copying certificate authorities </span><br><span class=\"line\">and service account keys on each node and then running the following as root:</span><br><span class=\"line\"></span><br><span class=\"line\">  kubeadm join 192.168.9.10:6443 --token px979r.mphk9ee5ya8fgy44 \\</span><br><span class=\"line\">    --discovery-token-ca-cert-hash sha256:5e7c7cd1cc1f86c0761e54b9380de22968b6b221cb98939c14ab2942223f6f51 \\</span><br><span class=\"line\">    --control-plane \t  </span><br><span class=\"line\"></span><br><span class=\"line\">Then you can join any number of worker nodes by running the following on each as root:</span><br><span class=\"line\"></span><br><span class=\"line\">kubeadm join 192.168.9.10:6443 --token px979r.mphk9ee5ya8fgy44 \\</span><br><span class=\"line\">    --discovery-token-ca-cert-hash sha256:5e7c7cd1cc1f86c0761e54b9380de22968b6b221cb98939c14ab2942223f6f51 </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>根据提示设置<code>kubeconfig</code>，或者添加子节点</p>\n<h2 id=\"设置k8s的网络插件\"><a href=\"#设置k8s的网络插件\" class=\"headerlink\" title=\"设置k8s的网络插件\"></a>设置k8s的网络插件</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl apply -f &quot;https:&#x2F;&#x2F;cloud.weave.works&#x2F;k8s&#x2F;net?k8s-version&#x3D;$(kubectl version | base64 | tr -d &#39;\\n&#39;)&quot;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker save weaveworks&#x2F;weave-npc:2.7.0 weaveworks&#x2F;weave-kube:2.7.0 &gt; weave.tar</span><br><span class=\"line\">$ docker load &lt; weave.tar</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装helm\"><a href=\"#安装helm\" class=\"headerlink\" title=\"安装helm\"></a>安装helm</h2><h3 id=\"去除节点污点\"><a href=\"#去除节点污点\" class=\"headerlink\" title=\"去除节点污点\"></a>去除节点污点</h3><p>只有一个master节点的情况下，master节点不允许运行资源，需要去掉污点</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl get nodes</span><br><span class=\"line\">NAME       STATUS   ROLES    AGE    VERSION</span><br><span class=\"line\">linx-dev   Ready    master   138m   v1.16.3</span><br><span class=\"line\"></span><br><span class=\"line\">$ kubectl describe node linx-dev  | grep Taint</span><br><span class=\"line\">Taints:             node-role.kubernetes.io&#x2F;master:NoSchedule</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; 如果Taints是none，则不需要去除污点</span><br><span class=\"line\">kubectl taint nodes linx-dev node-role.kubernetes.io&#x2F;master:NoSchedule-</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"下载客户端\"><a href=\"#下载客户端\" class=\"headerlink\" title=\"下载客户端\"></a>下载客户端</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https:&#x2F;&#x2F;get.helm.sh&#x2F;helm-v2.16.3-linux-amd64.tar.gz</span><br></pre></td></tr></table></figure>\n<h3 id=\"解压缩并拷贝helm二进制文件\"><a href=\"#解压缩并拷贝helm二进制文件\" class=\"headerlink\" title=\"解压缩并拷贝helm二进制文件\"></a>解压缩并拷贝helm二进制文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar xf helm-v2.16.3-linux-amd64.tar.gz</span><br><span class=\"line\">cp linux-amd64&#x2F;helm &#x2F;usr&#x2F;local&#x2F;bin</span><br></pre></td></tr></table></figure>\n<h3 id=\"导出tiller镜像\"><a href=\"#导出tiller镜像\" class=\"headerlink\" title=\"导出tiller镜像\"></a>导出tiller镜像</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker save registry.cn-hangzhou.aliyuncs.com&#x2F;google_containers&#x2F;tiller:v2.16.3 &gt; helm.tar</span><br><span class=\"line\">docker load &lt; helm.tar</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"初始化helm，部署tiller\"><a href=\"#初始化helm，部署tiller\" class=\"headerlink\" title=\"初始化helm，部署tiller\"></a>初始化helm，部署tiller</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl -n kube-system create serviceaccount tiller</span><br><span class=\"line\">$ kubectl create clusterrolebinding tiller --clusterrole cluster-admin –serviceaccount&#x3D;kube-system:tiller</span><br></pre></td></tr></table></figure>\n<p><code>--stable-repo-url http://10.16.48.44/</code>需要起一个http 服务，apache或者node都可以，这儿下面放了一个文件index.yaml文件，可以从这儿下载到<a href=\"https://kubernetes.oss-cn-hangzhou.aliyuncs.com/charts/index.yaml\">https://kubernetes.oss-cn-hangzhou.aliyuncs.com/charts/index.yaml</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ helm init --service-account tiller --tiller-image&#x3D;registry.cn-hangzhou.aliyuncs.com&#x2F;google_containers&#x2F;tiller:v2.16.3 --upgrade --stable-repo-url http:&#x2F;&#x2F;193.160.57.100</span><br><span class=\"line\">Creating &#x2F;root&#x2F;.helm&#x2F;repository&#x2F;repositories.yaml </span><br><span class=\"line\">Adding stable repo with URL: http:&#x2F;&#x2F;193.160.57.100 </span><br><span class=\"line\">Adding local repo with URL: http:&#x2F;&#x2F;127.0.0.1:8879&#x2F;charts </span><br><span class=\"line\">$HELM_HOME has been configured at &#x2F;root&#x2F;.helm.</span><br><span class=\"line\"></span><br><span class=\"line\">Tiller (the Helm server-side component) has been installed into your Kubernetes Cluster.</span><br><span class=\"line\"></span><br><span class=\"line\">Please note: by default, Tiller is deployed with an insecure &#39;allow unauthenticated users&#39; policy.</span><br><span class=\"line\">To prevent this, run &#96;helm init&#96; with the --tiller-tls-verify flag.</span><br><span class=\"line\">For more information on securing your installation see: https:&#x2F;&#x2F;docs.helm.sh&#x2F;using_helm&#x2F;#securing-your-helm-installation</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装openebs存储服务\"><a href=\"#安装openebs存储服务\" class=\"headerlink\" title=\"安装openebs存储服务\"></a>安装openebs存储服务</h2><h3 id=\"yaml文件\"><a href=\"#yaml文件\" class=\"headerlink\" title=\"yaml文件\"></a>yaml文件</h3><p>将其中的<code>imagePullPolicy</code>改为<code>IfNotPresent</code>，这样可以优先选择本地镜像，而不会去请求网络</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https:&#x2F;&#x2F;openebs.github.io&#x2F;charts&#x2F;openebs-operator-1.5.0.yaml</span><br></pre></td></tr></table></figure>\n<h3 id=\"导出所有openebs镜像\"><a href=\"#导出所有openebs镜像\" class=\"headerlink\" title=\"导出所有openebs镜像\"></a>导出所有openebs镜像</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker save quay.io&#x2F;openebs&#x2F;m-apiserver:1.5.0 quay.io&#x2F;openebs&#x2F;openebs-k8s-provisioner:1.5.0 quay.io&#x2F;openebs&#x2F;snapshot-controller:1.5.0 quay.io&#x2F;openebs&#x2F;snapshot-provisioner:1.5.0 quay.io&#x2F;openebs&#x2F;node-disk-manager-amd64:v0.4.5 quay.io&#x2F;openebs&#x2F;node-disk-operator-amd64:v0.4.5 quay.io&#x2F;openebs&#x2F;admission-server:1.5.0 quay.io&#x2F;openebs&#x2F;provisioner-localpv:1.5.0 quay.io&#x2F;openebs&#x2F;linux-utils:1.5.0 &gt; openebs.tar</span><br><span class=\"line\"></span><br><span class=\"line\">$ docker load &lt; openebs.tar</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl apply -f openebs-operator-1.5.0.yaml</span><br></pre></td></tr></table></figure>\n<h3 id=\"设置默认存储\"><a href=\"#设置默认存储\" class=\"headerlink\" title=\"设置默认存储\"></a>设置默认存储</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl patch storageclass openebs-hostpath -p &#39;&#123;&quot;metadata&quot;: &#123;&quot;annotations&quot;:&#123;&quot;storageclass.kubernetes.io&#x2F;is-default-class&quot;:&quot;true&quot;&#125;&#125;&#125;&#39;</span><br><span class=\"line\">storageclass.storage.k8s.io&#x2F;openebs-hostpath patched</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装kubesphere\"><a href=\"#安装kubesphere\" class=\"headerlink\" title=\"安装kubesphere\"></a>安装kubesphere</h2><h3 id=\"导入最小化镜像\"><a href=\"#导入最小化镜像\" class=\"headerlink\" title=\"导入最小化镜像\"></a>导入最小化镜像</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker load &lt; ks_minimal_images.tar</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"安装kubesphere-1\"><a href=\"#安装kubesphere-1\" class=\"headerlink\" title=\"安装kubesphere\"></a>安装kubesphere</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl apply -f kubesphere-minimal.yaml</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"https://www.jianshu.com/p/2bb1dfdadee8\">Helm离线安装</a></p>\n"},{"layout":"post","title":"linux下离线安装docker","date":"2020-09-26T16:00:00.000Z","excerpt":"使用docker下载的安装包，安装docker","comments":1,"_content":"\n## 环境准备\n1、操作系统：CentOS 7.3\n2、Docker版本：18.06.1 [官方下载地址（打不开可能需要科学上网](https://download.docker.com/linux/static/stable/x86_64/)\n3、官方参考文档：https://docs.docker.com/install/linux/docker-ce/binaries/#install-static-binaries\n\n## Docker安装\n1、解压\n```\ntar -xvf docker-18.06.1-ce.tgz\n```\n2、将解压出来的docker文件内容移动到 /usr/bin/ 目录下\n```\ncp docker/* /usr/bin/\n```\n3、将docker注册为service\n```\nvim /etc/systemd/system/docker.service\n```\n将下列配置复制到docker.service中并保存\n```\n[Unit]\n\nDescription=Docker Application Container Engine\n\nDocumentation=https://docs.docker.com\n\nAfter=network-online.target firewalld.service\n\nWants=network-online.target\n\n[Service]\n\nType=notify\n\n# the default is not to use systemd for cgroups because the delegate issues still\n\n# exists and systemd currently does not support the cgroup feature set required\n\n# for containers run by docker\n\nExecStart=/usr/bin/dockerd\n\nExecReload=/bin/kill -s HUP $MAINPID\n\n# Having non-zero Limit*s causes performance problems due to accounting overhead\n\n# in the kernel. We recommend using cgroups to do container-local accounting.\n\nLimitNOFILE=infinity\n\nLimitNPROC=infinity\n\nLimitCORE=infinity\n\n# Uncomment TasksMax if your systemd version supports it.\n\n# Only systemd 226 and above support this version.\n\n#TasksMax=infinity\n\nTimeoutStartSec=0\n\n# set delegate yes so that systemd does not reset the cgroups of docker containers\n\nDelegate=yes\n\n# kill only the docker process, not all processes in the cgroup\n\nKillMode=process\n\n# restart the docker process if it exits prematurely\n\nRestart=on-failure\n\nStartLimitBurst=3\n\nStartLimitInterval=60s\n\n \n\n[Install]\n\nWantedBy=multi-user.target\n```\n4、启动\n```\nchmod +x /etc/systemd/system/docker.service             #添加文件权限并启动docker\nsystemctl daemon-reload                                 #重载unit配置文件\nsystemctl start docker                                  #启动Docker\nsystemctl enable docker.service                         #设置开机自启\n```\n5、验证\n```\nsystemctl status docker                                 #查看Docker状态\ndocker -v                                               #查看Docker版本\n```\n## 参考\n[Linux下离线安装Docker](https://www.cnblogs.com/luoSteel/p/10038954.html)","source":"_posts/2020-09-27-docker-install-offline.md","raw":"---\nlayout: post\ntitle: \"linux下离线安装docker\"\ndate: 2020-09-27\nexcerpt: \"使用docker下载的安装包，安装docker\"\ntags: [linux, docker]\ncomments: true\n---\n\n## 环境准备\n1、操作系统：CentOS 7.3\n2、Docker版本：18.06.1 [官方下载地址（打不开可能需要科学上网](https://download.docker.com/linux/static/stable/x86_64/)\n3、官方参考文档：https://docs.docker.com/install/linux/docker-ce/binaries/#install-static-binaries\n\n## Docker安装\n1、解压\n```\ntar -xvf docker-18.06.1-ce.tgz\n```\n2、将解压出来的docker文件内容移动到 /usr/bin/ 目录下\n```\ncp docker/* /usr/bin/\n```\n3、将docker注册为service\n```\nvim /etc/systemd/system/docker.service\n```\n将下列配置复制到docker.service中并保存\n```\n[Unit]\n\nDescription=Docker Application Container Engine\n\nDocumentation=https://docs.docker.com\n\nAfter=network-online.target firewalld.service\n\nWants=network-online.target\n\n[Service]\n\nType=notify\n\n# the default is not to use systemd for cgroups because the delegate issues still\n\n# exists and systemd currently does not support the cgroup feature set required\n\n# for containers run by docker\n\nExecStart=/usr/bin/dockerd\n\nExecReload=/bin/kill -s HUP $MAINPID\n\n# Having non-zero Limit*s causes performance problems due to accounting overhead\n\n# in the kernel. We recommend using cgroups to do container-local accounting.\n\nLimitNOFILE=infinity\n\nLimitNPROC=infinity\n\nLimitCORE=infinity\n\n# Uncomment TasksMax if your systemd version supports it.\n\n# Only systemd 226 and above support this version.\n\n#TasksMax=infinity\n\nTimeoutStartSec=0\n\n# set delegate yes so that systemd does not reset the cgroups of docker containers\n\nDelegate=yes\n\n# kill only the docker process, not all processes in the cgroup\n\nKillMode=process\n\n# restart the docker process if it exits prematurely\n\nRestart=on-failure\n\nStartLimitBurst=3\n\nStartLimitInterval=60s\n\n \n\n[Install]\n\nWantedBy=multi-user.target\n```\n4、启动\n```\nchmod +x /etc/systemd/system/docker.service             #添加文件权限并启动docker\nsystemctl daemon-reload                                 #重载unit配置文件\nsystemctl start docker                                  #启动Docker\nsystemctl enable docker.service                         #设置开机自启\n```\n5、验证\n```\nsystemctl status docker                                 #查看Docker状态\ndocker -v                                               #查看Docker版本\n```\n## 参考\n[Linux下离线安装Docker](https://www.cnblogs.com/luoSteel/p/10038954.html)","slug":"2020-09-27-docker-install-offline","published":1,"updated":"2020-10-09T02:56:46.111Z","photos":[],"link":"","_id":"ckgkk27tl0016kcv0gd4r1nyt","content":"<h2 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h2><p>1、操作系统：CentOS 7.3<br>2、Docker版本：18.06.1 <a href=\"https://download.docker.com/linux/static/stable/x86_64/\">官方下载地址（打不开可能需要科学上网</a><br>3、官方参考文档：<a href=\"https://docs.docker.com/install/linux/docker-ce/binaries/#install-static-binaries\">https://docs.docker.com/install/linux/docker-ce/binaries/#install-static-binaries</a></p>\n<h2 id=\"Docker安装\"><a href=\"#Docker安装\" class=\"headerlink\" title=\"Docker安装\"></a>Docker安装</h2><p>1、解压</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -xvf docker-18.06.1-ce.tgz</span><br></pre></td></tr></table></figure>\n<p>2、将解压出来的docker文件内容移动到 /usr/bin/ 目录下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp docker&#x2F;* &#x2F;usr&#x2F;bin&#x2F;</span><br></pre></td></tr></table></figure>\n<p>3、将docker注册为service</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;docker.service</span><br></pre></td></tr></table></figure>\n<p>将下列配置复制到docker.service中并保存</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Unit]</span><br><span class=\"line\"></span><br><span class=\"line\">Description&#x3D;Docker Application Container Engine</span><br><span class=\"line\"></span><br><span class=\"line\">Documentation&#x3D;https:&#x2F;&#x2F;docs.docker.com</span><br><span class=\"line\"></span><br><span class=\"line\">After&#x3D;network-online.target firewalld.service</span><br><span class=\"line\"></span><br><span class=\"line\">Wants&#x3D;network-online.target</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\"></span><br><span class=\"line\">Type&#x3D;notify</span><br><span class=\"line\"></span><br><span class=\"line\"># the default is not to use systemd for cgroups because the delegate issues still</span><br><span class=\"line\"></span><br><span class=\"line\"># exists and systemd currently does not support the cgroup feature set required</span><br><span class=\"line\"></span><br><span class=\"line\"># for containers run by docker</span><br><span class=\"line\"></span><br><span class=\"line\">ExecStart&#x3D;&#x2F;usr&#x2F;bin&#x2F;dockerd</span><br><span class=\"line\"></span><br><span class=\"line\">ExecReload&#x3D;&#x2F;bin&#x2F;kill -s HUP $MAINPID</span><br><span class=\"line\"></span><br><span class=\"line\"># Having non-zero Limit*s causes performance problems due to accounting overhead</span><br><span class=\"line\"></span><br><span class=\"line\"># in the kernel. We recommend using cgroups to do container-local accounting.</span><br><span class=\"line\"></span><br><span class=\"line\">LimitNOFILE&#x3D;infinity</span><br><span class=\"line\"></span><br><span class=\"line\">LimitNPROC&#x3D;infinity</span><br><span class=\"line\"></span><br><span class=\"line\">LimitCORE&#x3D;infinity</span><br><span class=\"line\"></span><br><span class=\"line\"># Uncomment TasksMax if your systemd version supports it.</span><br><span class=\"line\"></span><br><span class=\"line\"># Only systemd 226 and above support this version.</span><br><span class=\"line\"></span><br><span class=\"line\">#TasksMax&#x3D;infinity</span><br><span class=\"line\"></span><br><span class=\"line\">TimeoutStartSec&#x3D;0</span><br><span class=\"line\"></span><br><span class=\"line\"># set delegate yes so that systemd does not reset the cgroups of docker containers</span><br><span class=\"line\"></span><br><span class=\"line\">Delegate&#x3D;yes</span><br><span class=\"line\"></span><br><span class=\"line\"># kill only the docker process, not all processes in the cgroup</span><br><span class=\"line\"></span><br><span class=\"line\">KillMode&#x3D;process</span><br><span class=\"line\"></span><br><span class=\"line\"># restart the docker process if it exits prematurely</span><br><span class=\"line\"></span><br><span class=\"line\">Restart&#x3D;on-failure</span><br><span class=\"line\"></span><br><span class=\"line\">StartLimitBurst&#x3D;3</span><br><span class=\"line\"></span><br><span class=\"line\">StartLimitInterval&#x3D;60s</span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\"></span><br><span class=\"line\">WantedBy&#x3D;multi-user.target</span><br></pre></td></tr></table></figure>\n<p>4、启动</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod +x &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;docker.service             #添加文件权限并启动docker</span><br><span class=\"line\">systemctl daemon-reload                                 #重载unit配置文件</span><br><span class=\"line\">systemctl start docker                                  #启动Docker</span><br><span class=\"line\">systemctl enable docker.service                         #设置开机自启</span><br></pre></td></tr></table></figure>\n<p>5、验证</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl status docker                                 #查看Docker状态</span><br><span class=\"line\">docker -v                                               #查看Docker版本</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"https://www.cnblogs.com/luoSteel/p/10038954.html\">Linux下离线安装Docker</a></p>\n","site":{"data":{}},"more":"<h2 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h2><p>1、操作系统：CentOS 7.3<br>2、Docker版本：18.06.1 <a href=\"https://download.docker.com/linux/static/stable/x86_64/\">官方下载地址（打不开可能需要科学上网</a><br>3、官方参考文档：<a href=\"https://docs.docker.com/install/linux/docker-ce/binaries/#install-static-binaries\">https://docs.docker.com/install/linux/docker-ce/binaries/#install-static-binaries</a></p>\n<h2 id=\"Docker安装\"><a href=\"#Docker安装\" class=\"headerlink\" title=\"Docker安装\"></a>Docker安装</h2><p>1、解压</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -xvf docker-18.06.1-ce.tgz</span><br></pre></td></tr></table></figure>\n<p>2、将解压出来的docker文件内容移动到 /usr/bin/ 目录下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp docker&#x2F;* &#x2F;usr&#x2F;bin&#x2F;</span><br></pre></td></tr></table></figure>\n<p>3、将docker注册为service</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;docker.service</span><br></pre></td></tr></table></figure>\n<p>将下列配置复制到docker.service中并保存</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Unit]</span><br><span class=\"line\"></span><br><span class=\"line\">Description&#x3D;Docker Application Container Engine</span><br><span class=\"line\"></span><br><span class=\"line\">Documentation&#x3D;https:&#x2F;&#x2F;docs.docker.com</span><br><span class=\"line\"></span><br><span class=\"line\">After&#x3D;network-online.target firewalld.service</span><br><span class=\"line\"></span><br><span class=\"line\">Wants&#x3D;network-online.target</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\"></span><br><span class=\"line\">Type&#x3D;notify</span><br><span class=\"line\"></span><br><span class=\"line\"># the default is not to use systemd for cgroups because the delegate issues still</span><br><span class=\"line\"></span><br><span class=\"line\"># exists and systemd currently does not support the cgroup feature set required</span><br><span class=\"line\"></span><br><span class=\"line\"># for containers run by docker</span><br><span class=\"line\"></span><br><span class=\"line\">ExecStart&#x3D;&#x2F;usr&#x2F;bin&#x2F;dockerd</span><br><span class=\"line\"></span><br><span class=\"line\">ExecReload&#x3D;&#x2F;bin&#x2F;kill -s HUP $MAINPID</span><br><span class=\"line\"></span><br><span class=\"line\"># Having non-zero Limit*s causes performance problems due to accounting overhead</span><br><span class=\"line\"></span><br><span class=\"line\"># in the kernel. We recommend using cgroups to do container-local accounting.</span><br><span class=\"line\"></span><br><span class=\"line\">LimitNOFILE&#x3D;infinity</span><br><span class=\"line\"></span><br><span class=\"line\">LimitNPROC&#x3D;infinity</span><br><span class=\"line\"></span><br><span class=\"line\">LimitCORE&#x3D;infinity</span><br><span class=\"line\"></span><br><span class=\"line\"># Uncomment TasksMax if your systemd version supports it.</span><br><span class=\"line\"></span><br><span class=\"line\"># Only systemd 226 and above support this version.</span><br><span class=\"line\"></span><br><span class=\"line\">#TasksMax&#x3D;infinity</span><br><span class=\"line\"></span><br><span class=\"line\">TimeoutStartSec&#x3D;0</span><br><span class=\"line\"></span><br><span class=\"line\"># set delegate yes so that systemd does not reset the cgroups of docker containers</span><br><span class=\"line\"></span><br><span class=\"line\">Delegate&#x3D;yes</span><br><span class=\"line\"></span><br><span class=\"line\"># kill only the docker process, not all processes in the cgroup</span><br><span class=\"line\"></span><br><span class=\"line\">KillMode&#x3D;process</span><br><span class=\"line\"></span><br><span class=\"line\"># restart the docker process if it exits prematurely</span><br><span class=\"line\"></span><br><span class=\"line\">Restart&#x3D;on-failure</span><br><span class=\"line\"></span><br><span class=\"line\">StartLimitBurst&#x3D;3</span><br><span class=\"line\"></span><br><span class=\"line\">StartLimitInterval&#x3D;60s</span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\"></span><br><span class=\"line\">WantedBy&#x3D;multi-user.target</span><br></pre></td></tr></table></figure>\n<p>4、启动</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod +x &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;docker.service             #添加文件权限并启动docker</span><br><span class=\"line\">systemctl daemon-reload                                 #重载unit配置文件</span><br><span class=\"line\">systemctl start docker                                  #启动Docker</span><br><span class=\"line\">systemctl enable docker.service                         #设置开机自启</span><br></pre></td></tr></table></figure>\n<p>5、验证</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl status docker                                 #查看Docker状态</span><br><span class=\"line\">docker -v                                               #查看Docker版本</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"https://www.cnblogs.com/luoSteel/p/10038954.html\">Linux下离线安装Docker</a></p>\n"},{"layout":"post","title":"使用node快速起一个http服务器","date":"2020-09-26T16:00:00.000Z","excerpt":"主要用于访问文件，测试api等，只需要一个命令就可以快速启动服务器","comments":1,"_content":"\n需要node环境\n```\n$ npm install http-server -g\n\n//默认为8080\n$ http-server -p 3000\n```","source":"_posts/2020-09-27-node-http-server.md","raw":"---\nlayout: post\ntitle: \"使用node快速起一个http服务器\"\ndate: 2020-09-27\nexcerpt: \"主要用于访问文件，测试api等，只需要一个命令就可以快速启动服务器\"\ntags: [linux, nodejs, web]\ncomments: true\n---\n\n需要node环境\n```\n$ npm install http-server -g\n\n//默认为8080\n$ http-server -p 3000\n```","slug":"2020-09-27-node-http-server","published":1,"updated":"2020-10-11T12:34:14.625Z","photos":[],"link":"","_id":"ckgkk27to0019kcv03hw34lyy","content":"<p>需要node环境</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install http-server -g</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;默认为8080</span><br><span class=\"line\">$ http-server -p 3000</span><br></pre></td></tr></table></figure>","site":{"data":{}},"more":"<p>需要node环境</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install http-server -g</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;默认为8080</span><br><span class=\"line\">$ http-server -p 3000</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"hexo 添加文章导航","date":"2020-09-29T16:00:00.000Z","excerpt":"利用hexo 原生api添加文章目录","comments":1,"_content":"\n在Hexo官网 文档>自定义>辅助函数>最下面，可以找到[toc](https://hexo.io/zh-cn/docs/helpers#toc)这个函数，看其介绍能知道它就是来实现文章目录的。  \n\n使用toc函数，不显示标题前数字，item为页面中传过去的参数post\n\n```html\ntoc.ejs\n<% if (item) { %>\n  <div id=\"toc\" class=\"toc-article\">\n    <%- toc(item.content, {list_number: false}) %>\n  </div>\n<% } %>\n```\n在左侧栏插入代码\n```\nleft-col.ejs\n<nav>\n  <%- partial('_partial/post/toc', {item: page}) %>\n</nav>\n```\n修改layout代码\n```\n<%- partial('_partial/left-col', null, {cache: !config.relative_link, post: page}) %>\n\n<%- partial('_partial/left-col', {cache: !config.relative_link, post: page}) %>\n```\n","source":"_posts/2020-09-30-hexo-add-article-nav.md","raw":"---\nlayout: post\ntitle: \"hexo 添加文章导航\"\ndate: 2020-09-30\nexcerpt: \"利用hexo 原生api添加文章目录\"\ntags: [web, hexo]\ncomments: true\n---\n\n在Hexo官网 文档>自定义>辅助函数>最下面，可以找到[toc](https://hexo.io/zh-cn/docs/helpers#toc)这个函数，看其介绍能知道它就是来实现文章目录的。  \n\n使用toc函数，不显示标题前数字，item为页面中传过去的参数post\n\n```html\ntoc.ejs\n<% if (item) { %>\n  <div id=\"toc\" class=\"toc-article\">\n    <%- toc(item.content, {list_number: false}) %>\n  </div>\n<% } %>\n```\n在左侧栏插入代码\n```\nleft-col.ejs\n<nav>\n  <%- partial('_partial/post/toc', {item: page}) %>\n</nav>\n```\n修改layout代码\n```\n<%- partial('_partial/left-col', null, {cache: !config.relative_link, post: page}) %>\n\n<%- partial('_partial/left-col', {cache: !config.relative_link, post: page}) %>\n```\n","slug":"2020-09-30-hexo-add-article-nav","published":1,"updated":"2020-10-09T02:55:47.338Z","photos":[],"link":"","_id":"ckgkk27tq001akcv0fc6w59fw","content":"<p>在Hexo官网 文档&gt;自定义&gt;辅助函数&gt;最下面，可以找到<a href=\"https://hexo.io/zh-cn/docs/helpers#toc\">toc</a>这个函数，看其介绍能知道它就是来实现文章目录的。  </p>\n<p>使用toc函数，不显示标题前数字，item为页面中传过去的参数post</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">toc.ejs</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">if</span> (<span class=\"attr\">item</span>) &#123; %&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;toc&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;toc-article&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">toc</span>(<span class=\"attr\">item.content</span>, &#123;<span class=\"attr\">list_number:</span> <span class=\"attr\">false</span>&#125;) %&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%</span> &#125; %&gt;</span></span><br></pre></td></tr></table></figure>\n<p>在左侧栏插入代码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">left-col.ejs</span><br><span class=\"line\">&lt;nav&gt;</span><br><span class=\"line\">  &lt;%- partial(&#39;_partial&#x2F;post&#x2F;toc&#39;, &#123;item: page&#125;) %&gt;</span><br><span class=\"line\">&lt;&#x2F;nav&gt;</span><br></pre></td></tr></table></figure>\n<p>修改layout代码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%- partial(&#39;_partial&#x2F;left-col&#39;, null, &#123;cache: !config.relative_link, post: page&#125;) %&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- partial(&#39;_partial&#x2F;left-col&#39;, &#123;cache: !config.relative_link, post: page&#125;) %&gt;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"more":"<p>在Hexo官网 文档&gt;自定义&gt;辅助函数&gt;最下面，可以找到<a href=\"https://hexo.io/zh-cn/docs/helpers#toc\">toc</a>这个函数，看其介绍能知道它就是来实现文章目录的。  </p>\n<p>使用toc函数，不显示标题前数字，item为页面中传过去的参数post</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">toc.ejs</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">if</span> (<span class=\"attr\">item</span>) &#123; %&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;toc&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;toc-article&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">toc</span>(<span class=\"attr\">item.content</span>, &#123;<span class=\"attr\">list_number:</span> <span class=\"attr\">false</span>&#125;) %&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%</span> &#125; %&gt;</span></span><br></pre></td></tr></table></figure>\n<p>在左侧栏插入代码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">left-col.ejs</span><br><span class=\"line\">&lt;nav&gt;</span><br><span class=\"line\">  &lt;%- partial(&#39;_partial&#x2F;post&#x2F;toc&#39;, &#123;item: page&#125;) %&gt;</span><br><span class=\"line\">&lt;&#x2F;nav&gt;</span><br></pre></td></tr></table></figure>\n<p>修改layout代码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%- partial(&#39;_partial&#x2F;left-col&#39;, null, &#123;cache: !config.relative_link, post: page&#125;) %&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- partial(&#39;_partial&#x2F;left-col&#39;, &#123;cache: !config.relative_link, post: page&#125;) %&gt;</span><br></pre></td></tr></table></figure>\n"},{"title":"使用hexo在github上搭建博客","date":"2020-10-06T16:00:00.000Z","excerpt":"hexo搭建博客流程，开发过程介绍.","_content":"\n## 环境准备\n* npm >= 6.14.8\n* hexo >= 4.2.0\n* hexo主题[yilia](https://github.com/luckyship/myblog.git)\n\n## 部署应用\n创建目录`hexo`，进入目录，执行命令\n```\n$ hexo init\n$ ls\n_config.yml  node_modules/  package-lock.json  scaffolds/  themes/\ndb.json      package.json   public/            source/\n```\n修改`_config.yml`，将其中的`theme`字段修改为`lucky`\n```\n$ cat _config.yml\ntheme: lucky\n```\n进入`themes`目录，克隆hexo主题仓库（注意名字为theme字段的修改值）\n```\ngit clone https://github.com/luckyship/myblog.git ./lucky\n```\n退回hexo主目录，执行\n```\nhexo generate\nhexo sever\n```\n即可看到web服务已经启动，端口默认为4000，访问`localhost:4000`即可\n\n## 开发应用\n### 修改主题代码\n例如`css,js,html`等，需要重新打包主题代码\n```\n$ npm run dev\n```\n再清除hexo缓存，重新打包到hexo上\n```\n$ hexo c // 清除所有缓存\n$ hexo g // 打包格式化md文件\n$ hexo s // 本地环境\n```\n### 添加md文件\n添加的文件可以实时显现到web上\n```\n$ hexo s -g --debug\n```\n### 上传至github\n安装包\n```\nnpm install hexo-deployer-git --save\n```\n在`_config.yml`中添加\n```\ndeploy:\n  type: git\n  repo: git@github.com:luckyship/luckyship.github.io.git\n  branch: main\n  message: 'collect new post'\n```\n执行命令，`deploy`上传的每次`generate`过后的文件，所以上传之前需要`generate`\n```\n$ hexo g\n$ hexo deploy\n```","source":"_posts/2020-10-07-deploy-hexo.md","raw":"---\ntitle: \"使用hexo在github上搭建博客\"\ndate: 2020-10-07\nexcerpt: \"hexo搭建博客流程，开发过程介绍.\"\ntags: [hexo, web]\n---\n\n## 环境准备\n* npm >= 6.14.8\n* hexo >= 4.2.0\n* hexo主题[yilia](https://github.com/luckyship/myblog.git)\n\n## 部署应用\n创建目录`hexo`，进入目录，执行命令\n```\n$ hexo init\n$ ls\n_config.yml  node_modules/  package-lock.json  scaffolds/  themes/\ndb.json      package.json   public/            source/\n```\n修改`_config.yml`，将其中的`theme`字段修改为`lucky`\n```\n$ cat _config.yml\ntheme: lucky\n```\n进入`themes`目录，克隆hexo主题仓库（注意名字为theme字段的修改值）\n```\ngit clone https://github.com/luckyship/myblog.git ./lucky\n```\n退回hexo主目录，执行\n```\nhexo generate\nhexo sever\n```\n即可看到web服务已经启动，端口默认为4000，访问`localhost:4000`即可\n\n## 开发应用\n### 修改主题代码\n例如`css,js,html`等，需要重新打包主题代码\n```\n$ npm run dev\n```\n再清除hexo缓存，重新打包到hexo上\n```\n$ hexo c // 清除所有缓存\n$ hexo g // 打包格式化md文件\n$ hexo s // 本地环境\n```\n### 添加md文件\n添加的文件可以实时显现到web上\n```\n$ hexo s -g --debug\n```\n### 上传至github\n安装包\n```\nnpm install hexo-deployer-git --save\n```\n在`_config.yml`中添加\n```\ndeploy:\n  type: git\n  repo: git@github.com:luckyship/luckyship.github.io.git\n  branch: main\n  message: 'collect new post'\n```\n执行命令，`deploy`上传的每次`generate`过后的文件，所以上传之前需要`generate`\n```\n$ hexo g\n$ hexo deploy\n```","slug":"2020-10-07-deploy-hexo","published":1,"updated":"2020-10-09T09:26:04.660Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckgkk27ty001ckcv0g6c24i95","content":"<h2 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h2><ul>\n<li>npm &gt;= 6.14.8</li>\n<li>hexo &gt;= 4.2.0</li>\n<li>hexo主题<a href=\"https://github.com/luckyship/myblog.git\">yilia</a></li>\n</ul>\n<h2 id=\"部署应用\"><a href=\"#部署应用\" class=\"headerlink\" title=\"部署应用\"></a>部署应用</h2><p>创建目录<code>hexo</code>，进入目录，执行命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo init</span><br><span class=\"line\">$ ls</span><br><span class=\"line\">_config.yml  node_modules&#x2F;  package-lock.json  scaffolds&#x2F;  themes&#x2F;</span><br><span class=\"line\">db.json      package.json   public&#x2F;            source&#x2F;</span><br></pre></td></tr></table></figure>\n<p>修改<code>_config.yml</code>，将其中的<code>theme</code>字段修改为<code>lucky</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cat _config.yml</span><br><span class=\"line\">theme: lucky</span><br></pre></td></tr></table></figure>\n<p>进入<code>themes</code>目录，克隆hexo主题仓库（注意名字为theme字段的修改值）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https:&#x2F;&#x2F;github.com&#x2F;luckyship&#x2F;myblog.git .&#x2F;lucky</span><br></pre></td></tr></table></figure>\n<p>退回hexo主目录，执行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo generate</span><br><span class=\"line\">hexo sever</span><br></pre></td></tr></table></figure>\n<p>即可看到web服务已经启动，端口默认为4000，访问<code>localhost:4000</code>即可</p>\n<h2 id=\"开发应用\"><a href=\"#开发应用\" class=\"headerlink\" title=\"开发应用\"></a>开发应用</h2><h3 id=\"修改主题代码\"><a href=\"#修改主题代码\" class=\"headerlink\" title=\"修改主题代码\"></a>修改主题代码</h3><p>例如<code>css,js,html</code>等，需要重新打包主题代码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm run dev</span><br></pre></td></tr></table></figure>\n<p>再清除hexo缓存，重新打包到hexo上</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo c &#x2F;&#x2F; 清除所有缓存</span><br><span class=\"line\">$ hexo g &#x2F;&#x2F; 打包格式化md文件</span><br><span class=\"line\">$ hexo s &#x2F;&#x2F; 本地环境</span><br></pre></td></tr></table></figure>\n<h3 id=\"添加md文件\"><a href=\"#添加md文件\" class=\"headerlink\" title=\"添加md文件\"></a>添加md文件</h3><p>添加的文件可以实时显现到web上</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo s -g --debug</span><br></pre></td></tr></table></figure>\n<h3 id=\"上传至github\"><a href=\"#上传至github\" class=\"headerlink\" title=\"上传至github\"></a>上传至github</h3><p>安装包</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<p>在<code>_config.yml</code>中添加</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: git@github.com:luckyship&#x2F;luckyship.github.io.git</span><br><span class=\"line\">  branch: main</span><br><span class=\"line\">  message: &#39;collect new post&#39;</span><br></pre></td></tr></table></figure>\n<p>执行命令，<code>deploy</code>上传的每次<code>generate</code>过后的文件，所以上传之前需要<code>generate</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo g</span><br><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>","site":{"data":{}},"more":"<h2 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h2><ul>\n<li>npm &gt;= 6.14.8</li>\n<li>hexo &gt;= 4.2.0</li>\n<li>hexo主题<a href=\"https://github.com/luckyship/myblog.git\">yilia</a></li>\n</ul>\n<h2 id=\"部署应用\"><a href=\"#部署应用\" class=\"headerlink\" title=\"部署应用\"></a>部署应用</h2><p>创建目录<code>hexo</code>，进入目录，执行命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo init</span><br><span class=\"line\">$ ls</span><br><span class=\"line\">_config.yml  node_modules&#x2F;  package-lock.json  scaffolds&#x2F;  themes&#x2F;</span><br><span class=\"line\">db.json      package.json   public&#x2F;            source&#x2F;</span><br></pre></td></tr></table></figure>\n<p>修改<code>_config.yml</code>，将其中的<code>theme</code>字段修改为<code>lucky</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cat _config.yml</span><br><span class=\"line\">theme: lucky</span><br></pre></td></tr></table></figure>\n<p>进入<code>themes</code>目录，克隆hexo主题仓库（注意名字为theme字段的修改值）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https:&#x2F;&#x2F;github.com&#x2F;luckyship&#x2F;myblog.git .&#x2F;lucky</span><br></pre></td></tr></table></figure>\n<p>退回hexo主目录，执行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo generate</span><br><span class=\"line\">hexo sever</span><br></pre></td></tr></table></figure>\n<p>即可看到web服务已经启动，端口默认为4000，访问<code>localhost:4000</code>即可</p>\n<h2 id=\"开发应用\"><a href=\"#开发应用\" class=\"headerlink\" title=\"开发应用\"></a>开发应用</h2><h3 id=\"修改主题代码\"><a href=\"#修改主题代码\" class=\"headerlink\" title=\"修改主题代码\"></a>修改主题代码</h3><p>例如<code>css,js,html</code>等，需要重新打包主题代码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm run dev</span><br></pre></td></tr></table></figure>\n<p>再清除hexo缓存，重新打包到hexo上</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo c &#x2F;&#x2F; 清除所有缓存</span><br><span class=\"line\">$ hexo g &#x2F;&#x2F; 打包格式化md文件</span><br><span class=\"line\">$ hexo s &#x2F;&#x2F; 本地环境</span><br></pre></td></tr></table></figure>\n<h3 id=\"添加md文件\"><a href=\"#添加md文件\" class=\"headerlink\" title=\"添加md文件\"></a>添加md文件</h3><p>添加的文件可以实时显现到web上</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo s -g --debug</span><br></pre></td></tr></table></figure>\n<h3 id=\"上传至github\"><a href=\"#上传至github\" class=\"headerlink\" title=\"上传至github\"></a>上传至github</h3><p>安装包</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<p>在<code>_config.yml</code>中添加</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: git@github.com:luckyship&#x2F;luckyship.github.io.git</span><br><span class=\"line\">  branch: main</span><br><span class=\"line\">  message: &#39;collect new post&#39;</span><br></pre></td></tr></table></figure>\n<p>执行命令，<code>deploy</code>上传的每次<code>generate</code>过后的文件，所以上传之前需要<code>generate</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo g</span><br><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>"},{"title":"gitee pages 自动更新","date":"2020-10-10T16:00:00.000Z","excerpt":"gitee个人版目前不提供pages自动更新服务，只有付费才能自动更新，创建一个可以自动更新page的脚本","_content":"\n## 环境准备\n* node >= 14.13.1\n* npm >= 6.14.8\n安装`puppeteer`\n```\nnpm install puppeteer --save\n```\n`puppeteer`是谷歌提供的一个无界面的浏览器程序，相当于用代码实现浏览器的功能\n\n## 自动化脚本\n需要填入gitee账号和pages的地址\n```\n// npm >= 10.18\nconst puppeteer = require('puppeteer');\nconst username = 'luckyship';                                            // 账号\nconst giteePageUrl = 'https://gitee.com/luckyship/luckyship/pages';      // gitee page地址\n\nasync function giteeUpdate(username, giteePageUrl, passwd) {\n    const browser = await puppeteer.launch({\n        // 此处可以使用 false 有头模式进行调试, 调试完注释即可\n          headless: false,\n    });\n    const page = await browser.newPage();\n    await page.goto('https://gitee.com/login');\n    // 1. 选中账号控件\n    let accountElements = await page.$x('//*[@id=\"user_login\"]') // 此处使用 xpath 寻找控件，下同\n    // 2. 填入账号\n    await accountElements[0].type(username)\n    // 3. 选中密码控件\n    let pwdElements = await page.$x('//*[@id=\"user_password\"]')\n    // 4. 填入密码\n    await pwdElements[0].type(passwd)\n    // 5. 点击登录\n    let loginButtons = await page.$x('//*[@id=\"new_user\"]/div[2]/div/div/div[4]/input')\n    await loginButtons[0].click()\n    // 6. 等待登录成功\n    await page.waitFor(1000)\n    await page.goto(giteePageUrl); // 比如： https://gitee.com/yang0033/hexo-blog/pages\n    // 7.1. 监听步骤 7 中触发的确认弹框，并点击确认\n    await page.on('dialog', async dialog => {\n        console.log('确认更新')\n        dialog.accept();\n    })\n    // 7. 点击更新按钮，并弹出确认弹窗\n    let updateButtons = await page.$x('//*[@id=\"pages-branch\"]/div[7]')\n    await updateButtons[0].click()\n    // 8. 轮询并确认是否更新完毕\n    while (true) {\n        await page.waitFor(2000)\n        try {\n            // 8.1 获取更新状态标签\n            deploying = await page.$x('//*[@id=\"pages_deploying\"]')\n            if (deploying.length > 0) {\n                console.log('更新中...')\n            } else {\n                console.log('更新完毕')\n                break;\n            }\n        } catch (error) {\n            break;\n        }\n    }\n    await page.waitFor(500);\n    // 10.更新完毕，关闭浏览器\n    browser.close();\n}\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf-8');\nprocess.stdout.write(`请输入${username}密码:`);\nprocess.stdin.on('data', function (data) {\n    var str = data.slice(0, -2);\n    process.stdin.emit('end');\n   \n    giteeUpdate(username, giteePageUrl, str);\n});\nprocess.stdin.on('end', function () {\n     process.stdin.pause();\n});\n\n```","source":"_posts/2020-10-11-gitee-update-pages-auto.md","raw":"---\ntitle: \"gitee pages 自动更新\"\ndate: 2020-10-11\nexcerpt: \"gitee个人版目前不提供pages自动更新服务，只有付费才能自动更新，创建一个可以自动更新page的脚本\"\ntags: [hexo]\n---\n\n## 环境准备\n* node >= 14.13.1\n* npm >= 6.14.8\n安装`puppeteer`\n```\nnpm install puppeteer --save\n```\n`puppeteer`是谷歌提供的一个无界面的浏览器程序，相当于用代码实现浏览器的功能\n\n## 自动化脚本\n需要填入gitee账号和pages的地址\n```\n// npm >= 10.18\nconst puppeteer = require('puppeteer');\nconst username = 'luckyship';                                            // 账号\nconst giteePageUrl = 'https://gitee.com/luckyship/luckyship/pages';      // gitee page地址\n\nasync function giteeUpdate(username, giteePageUrl, passwd) {\n    const browser = await puppeteer.launch({\n        // 此处可以使用 false 有头模式进行调试, 调试完注释即可\n          headless: false,\n    });\n    const page = await browser.newPage();\n    await page.goto('https://gitee.com/login');\n    // 1. 选中账号控件\n    let accountElements = await page.$x('//*[@id=\"user_login\"]') // 此处使用 xpath 寻找控件，下同\n    // 2. 填入账号\n    await accountElements[0].type(username)\n    // 3. 选中密码控件\n    let pwdElements = await page.$x('//*[@id=\"user_password\"]')\n    // 4. 填入密码\n    await pwdElements[0].type(passwd)\n    // 5. 点击登录\n    let loginButtons = await page.$x('//*[@id=\"new_user\"]/div[2]/div/div/div[4]/input')\n    await loginButtons[0].click()\n    // 6. 等待登录成功\n    await page.waitFor(1000)\n    await page.goto(giteePageUrl); // 比如： https://gitee.com/yang0033/hexo-blog/pages\n    // 7.1. 监听步骤 7 中触发的确认弹框，并点击确认\n    await page.on('dialog', async dialog => {\n        console.log('确认更新')\n        dialog.accept();\n    })\n    // 7. 点击更新按钮，并弹出确认弹窗\n    let updateButtons = await page.$x('//*[@id=\"pages-branch\"]/div[7]')\n    await updateButtons[0].click()\n    // 8. 轮询并确认是否更新完毕\n    while (true) {\n        await page.waitFor(2000)\n        try {\n            // 8.1 获取更新状态标签\n            deploying = await page.$x('//*[@id=\"pages_deploying\"]')\n            if (deploying.length > 0) {\n                console.log('更新中...')\n            } else {\n                console.log('更新完毕')\n                break;\n            }\n        } catch (error) {\n            break;\n        }\n    }\n    await page.waitFor(500);\n    // 10.更新完毕，关闭浏览器\n    browser.close();\n}\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf-8');\nprocess.stdout.write(`请输入${username}密码:`);\nprocess.stdin.on('data', function (data) {\n    var str = data.slice(0, -2);\n    process.stdin.emit('end');\n   \n    giteeUpdate(username, giteePageUrl, str);\n});\nprocess.stdin.on('end', function () {\n     process.stdin.pause();\n});\n\n```","slug":"2020-10-11-gitee-update-pages-auto","published":1,"updated":"2020-10-11T12:34:10.343Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckgkk27u0001ekcv0fi8s1w3g","content":"<h2 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h2><ul>\n<li>node &gt;= 14.13.1</li>\n<li>npm &gt;= 6.14.8<br>安装<code>puppeteer</code><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install puppeteer --save</span><br></pre></td></tr></table></figure>\n<code>puppeteer</code>是谷歌提供的一个无界面的浏览器程序，相当于用代码实现浏览器的功能</li>\n</ul>\n<h2 id=\"自动化脚本\"><a href=\"#自动化脚本\" class=\"headerlink\" title=\"自动化脚本\"></a>自动化脚本</h2><p>需要填入gitee账号和pages的地址</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F; npm &gt;&#x3D; 10.18</span><br><span class=\"line\">const puppeteer &#x3D; require(&#39;puppeteer&#39;);</span><br><span class=\"line\">const username &#x3D; &#39;luckyship&#39;;                                            &#x2F;&#x2F; 账号</span><br><span class=\"line\">const giteePageUrl &#x3D; &#39;https:&#x2F;&#x2F;gitee.com&#x2F;luckyship&#x2F;luckyship&#x2F;pages&#39;;      &#x2F;&#x2F; gitee page地址</span><br><span class=\"line\"></span><br><span class=\"line\">async function giteeUpdate(username, giteePageUrl, passwd) &#123;</span><br><span class=\"line\">    const browser &#x3D; await puppeteer.launch(&#123;</span><br><span class=\"line\">        &#x2F;&#x2F; 此处可以使用 false 有头模式进行调试, 调试完注释即可</span><br><span class=\"line\">          headless: false,</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    const page &#x3D; await browser.newPage();</span><br><span class=\"line\">    await page.goto(&#39;https:&#x2F;&#x2F;gitee.com&#x2F;login&#39;);</span><br><span class=\"line\">    &#x2F;&#x2F; 1. 选中账号控件</span><br><span class=\"line\">    let accountElements &#x3D; await page.$x(&#39;&#x2F;&#x2F;*[@id&#x3D;&quot;user_login&quot;]&#39;) &#x2F;&#x2F; 此处使用 xpath 寻找控件，下同</span><br><span class=\"line\">    &#x2F;&#x2F; 2. 填入账号</span><br><span class=\"line\">    await accountElements[0].type(username)</span><br><span class=\"line\">    &#x2F;&#x2F; 3. 选中密码控件</span><br><span class=\"line\">    let pwdElements &#x3D; await page.$x(&#39;&#x2F;&#x2F;*[@id&#x3D;&quot;user_password&quot;]&#39;)</span><br><span class=\"line\">    &#x2F;&#x2F; 4. 填入密码</span><br><span class=\"line\">    await pwdElements[0].type(passwd)</span><br><span class=\"line\">    &#x2F;&#x2F; 5. 点击登录</span><br><span class=\"line\">    let loginButtons &#x3D; await page.$x(&#39;&#x2F;&#x2F;*[@id&#x3D;&quot;new_user&quot;]&#x2F;div[2]&#x2F;div&#x2F;div&#x2F;div[4]&#x2F;input&#39;)</span><br><span class=\"line\">    await loginButtons[0].click()</span><br><span class=\"line\">    &#x2F;&#x2F; 6. 等待登录成功</span><br><span class=\"line\">    await page.waitFor(1000)</span><br><span class=\"line\">    await page.goto(giteePageUrl); &#x2F;&#x2F; 比如： https:&#x2F;&#x2F;gitee.com&#x2F;yang0033&#x2F;hexo-blog&#x2F;pages</span><br><span class=\"line\">    &#x2F;&#x2F; 7.1. 监听步骤 7 中触发的确认弹框，并点击确认</span><br><span class=\"line\">    await page.on(&#39;dialog&#39;, async dialog &#x3D;&gt; &#123;</span><br><span class=\"line\">        console.log(&#39;确认更新&#39;)</span><br><span class=\"line\">        dialog.accept();</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    &#x2F;&#x2F; 7. 点击更新按钮，并弹出确认弹窗</span><br><span class=\"line\">    let updateButtons &#x3D; await page.$x(&#39;&#x2F;&#x2F;*[@id&#x3D;&quot;pages-branch&quot;]&#x2F;div[7]&#39;)</span><br><span class=\"line\">    await updateButtons[0].click()</span><br><span class=\"line\">    &#x2F;&#x2F; 8. 轮询并确认是否更新完毕</span><br><span class=\"line\">    while (true) &#123;</span><br><span class=\"line\">        await page.waitFor(2000)</span><br><span class=\"line\">        try &#123;</span><br><span class=\"line\">            &#x2F;&#x2F; 8.1 获取更新状态标签</span><br><span class=\"line\">            deploying &#x3D; await page.$x(&#39;&#x2F;&#x2F;*[@id&#x3D;&quot;pages_deploying&quot;]&#39;)</span><br><span class=\"line\">            if (deploying.length &gt; 0) &#123;</span><br><span class=\"line\">                console.log(&#39;更新中...&#39;)</span><br><span class=\"line\">            &#125; else &#123;</span><br><span class=\"line\">                console.log(&#39;更新完毕&#39;)</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; catch (error) &#123;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    await page.waitFor(500);</span><br><span class=\"line\">    &#x2F;&#x2F; 10.更新完毕，关闭浏览器</span><br><span class=\"line\">    browser.close();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">process.stdin.resume();</span><br><span class=\"line\">process.stdin.setEncoding(&#39;utf-8&#39;);</span><br><span class=\"line\">process.stdout.write(&#96;请输入$&#123;username&#125;密码:&#96;);</span><br><span class=\"line\">process.stdin.on(&#39;data&#39;, function (data) &#123;</span><br><span class=\"line\">    var str &#x3D; data.slice(0, -2);</span><br><span class=\"line\">    process.stdin.emit(&#39;end&#39;);</span><br><span class=\"line\">   </span><br><span class=\"line\">    giteeUpdate(username, giteePageUrl, str);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">process.stdin.on(&#39;end&#39;, function () &#123;</span><br><span class=\"line\">     process.stdin.pause();</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","site":{"data":{}},"more":"<h2 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h2><ul>\n<li>node &gt;= 14.13.1</li>\n<li>npm &gt;= 6.14.8<br>安装<code>puppeteer</code><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install puppeteer --save</span><br></pre></td></tr></table></figure>\n<code>puppeteer</code>是谷歌提供的一个无界面的浏览器程序，相当于用代码实现浏览器的功能</li>\n</ul>\n<h2 id=\"自动化脚本\"><a href=\"#自动化脚本\" class=\"headerlink\" title=\"自动化脚本\"></a>自动化脚本</h2><p>需要填入gitee账号和pages的地址</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F; npm &gt;&#x3D; 10.18</span><br><span class=\"line\">const puppeteer &#x3D; require(&#39;puppeteer&#39;);</span><br><span class=\"line\">const username &#x3D; &#39;luckyship&#39;;                                            &#x2F;&#x2F; 账号</span><br><span class=\"line\">const giteePageUrl &#x3D; &#39;https:&#x2F;&#x2F;gitee.com&#x2F;luckyship&#x2F;luckyship&#x2F;pages&#39;;      &#x2F;&#x2F; gitee page地址</span><br><span class=\"line\"></span><br><span class=\"line\">async function giteeUpdate(username, giteePageUrl, passwd) &#123;</span><br><span class=\"line\">    const browser &#x3D; await puppeteer.launch(&#123;</span><br><span class=\"line\">        &#x2F;&#x2F; 此处可以使用 false 有头模式进行调试, 调试完注释即可</span><br><span class=\"line\">          headless: false,</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    const page &#x3D; await browser.newPage();</span><br><span class=\"line\">    await page.goto(&#39;https:&#x2F;&#x2F;gitee.com&#x2F;login&#39;);</span><br><span class=\"line\">    &#x2F;&#x2F; 1. 选中账号控件</span><br><span class=\"line\">    let accountElements &#x3D; await page.$x(&#39;&#x2F;&#x2F;*[@id&#x3D;&quot;user_login&quot;]&#39;) &#x2F;&#x2F; 此处使用 xpath 寻找控件，下同</span><br><span class=\"line\">    &#x2F;&#x2F; 2. 填入账号</span><br><span class=\"line\">    await accountElements[0].type(username)</span><br><span class=\"line\">    &#x2F;&#x2F; 3. 选中密码控件</span><br><span class=\"line\">    let pwdElements &#x3D; await page.$x(&#39;&#x2F;&#x2F;*[@id&#x3D;&quot;user_password&quot;]&#39;)</span><br><span class=\"line\">    &#x2F;&#x2F; 4. 填入密码</span><br><span class=\"line\">    await pwdElements[0].type(passwd)</span><br><span class=\"line\">    &#x2F;&#x2F; 5. 点击登录</span><br><span class=\"line\">    let loginButtons &#x3D; await page.$x(&#39;&#x2F;&#x2F;*[@id&#x3D;&quot;new_user&quot;]&#x2F;div[2]&#x2F;div&#x2F;div&#x2F;div[4]&#x2F;input&#39;)</span><br><span class=\"line\">    await loginButtons[0].click()</span><br><span class=\"line\">    &#x2F;&#x2F; 6. 等待登录成功</span><br><span class=\"line\">    await page.waitFor(1000)</span><br><span class=\"line\">    await page.goto(giteePageUrl); &#x2F;&#x2F; 比如： https:&#x2F;&#x2F;gitee.com&#x2F;yang0033&#x2F;hexo-blog&#x2F;pages</span><br><span class=\"line\">    &#x2F;&#x2F; 7.1. 监听步骤 7 中触发的确认弹框，并点击确认</span><br><span class=\"line\">    await page.on(&#39;dialog&#39;, async dialog &#x3D;&gt; &#123;</span><br><span class=\"line\">        console.log(&#39;确认更新&#39;)</span><br><span class=\"line\">        dialog.accept();</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    &#x2F;&#x2F; 7. 点击更新按钮，并弹出确认弹窗</span><br><span class=\"line\">    let updateButtons &#x3D; await page.$x(&#39;&#x2F;&#x2F;*[@id&#x3D;&quot;pages-branch&quot;]&#x2F;div[7]&#39;)</span><br><span class=\"line\">    await updateButtons[0].click()</span><br><span class=\"line\">    &#x2F;&#x2F; 8. 轮询并确认是否更新完毕</span><br><span class=\"line\">    while (true) &#123;</span><br><span class=\"line\">        await page.waitFor(2000)</span><br><span class=\"line\">        try &#123;</span><br><span class=\"line\">            &#x2F;&#x2F; 8.1 获取更新状态标签</span><br><span class=\"line\">            deploying &#x3D; await page.$x(&#39;&#x2F;&#x2F;*[@id&#x3D;&quot;pages_deploying&quot;]&#39;)</span><br><span class=\"line\">            if (deploying.length &gt; 0) &#123;</span><br><span class=\"line\">                console.log(&#39;更新中...&#39;)</span><br><span class=\"line\">            &#125; else &#123;</span><br><span class=\"line\">                console.log(&#39;更新完毕&#39;)</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; catch (error) &#123;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    await page.waitFor(500);</span><br><span class=\"line\">    &#x2F;&#x2F; 10.更新完毕，关闭浏览器</span><br><span class=\"line\">    browser.close();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">process.stdin.resume();</span><br><span class=\"line\">process.stdin.setEncoding(&#39;utf-8&#39;);</span><br><span class=\"line\">process.stdout.write(&#96;请输入$&#123;username&#125;密码:&#96;);</span><br><span class=\"line\">process.stdin.on(&#39;data&#39;, function (data) &#123;</span><br><span class=\"line\">    var str &#x3D; data.slice(0, -2);</span><br><span class=\"line\">    process.stdin.emit(&#39;end&#39;);</span><br><span class=\"line\">   </span><br><span class=\"line\">    giteeUpdate(username, giteePageUrl, str);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">process.stdin.on(&#39;end&#39;, function () &#123;</span><br><span class=\"line\">     process.stdin.pause();</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"hexo新建页面","excerpt":"在hexo上新建一个页面，该页面形式上和post差不多，内容有区别","comments":1,"date":"2020-10-11T13:06:47.000Z","_content":"\n使用`hexo new page 命令`\n```\n$ hexo new page comment\n```\n在`source`文件夹下就有了一个新的文件夹\n```\n$ ls source\ncomment _post\n```\n当使用`hexo g`时，会在`public`文件夹下生成新的文件夹`comment`，这样我们在网页上就可以通过`url + comment/`的方式访问该页面\n","source":"_posts/2020-10-11-hexo-new-page.md","raw":"---\nlayout: post\ntitle: 'hexo新建页面'\nexcerpt: '在hexo上新建一个页面，该页面形式上和post差不多，内容有区别'\ntags: [hexo]\ncomments: true\ndate: 2020-10-11 21:06:47\n---\n\n使用`hexo new page 命令`\n```\n$ hexo new page comment\n```\n在`source`文件夹下就有了一个新的文件夹\n```\n$ ls source\ncomment _post\n```\n当使用`hexo g`时，会在`public`文件夹下生成新的文件夹`comment`，这样我们在网页上就可以通过`url + comment/`的方式访问该页面\n","slug":"2020-10-11-hexo-new-page","published":1,"updated":"2020-10-11T13:10:59.376Z","photos":[],"link":"","_id":"ckgkk27u2001hkcv08e8bhzp4","content":"<p>使用<code>hexo new page 命令</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new page comment</span><br></pre></td></tr></table></figure>\n<p>在<code>source</code>文件夹下就有了一个新的文件夹</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ls source</span><br><span class=\"line\">comment _post</span><br></pre></td></tr></table></figure>\n<p>当使用<code>hexo g</code>时，会在<code>public</code>文件夹下生成新的文件夹<code>comment</code>，这样我们在网页上就可以通过<code>url + comment/</code>的方式访问该页面</p>\n","site":{"data":{}},"more":"<p>使用<code>hexo new page 命令</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new page comment</span><br></pre></td></tr></table></figure>\n<p>在<code>source</code>文件夹下就有了一个新的文件夹</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ls source</span><br><span class=\"line\">comment _post</span><br></pre></td></tr></table></figure>\n<p>当使用<code>hexo g</code>时，会在<code>public</code>文件夹下生成新的文件夹<code>comment</code>，这样我们在网页上就可以通过<code>url + comment/</code>的方式访问该页面</p>\n"},{"layout":"post","title":"各种js、jquery浏览器高度、宽度","excerpt":"各种js、jquery浏览器高度、宽度","comments":1,"date":"2020-10-21T09:29:48.000Z","_content":"\n## Javascript\n```\nIE中：\ndocument.body.clientWidth ==> BODY对象宽度  \ndocument.body.clientHeight ==> BODY对象高度  \ndocument.documentElement.clientWidth ==> 可见区域宽度  \ndocument.documentElement.clientHeight ==> 可见区域高度  \nFireFox中： \ndocument.body.clientWidth ==> BODY对象宽度  \ndocument.body.clientHeight ==> BODY对象高度  \ndocument.documentElement.clientWidth ==> 可见区域宽度  \ndocument.documentElement.clientHeight ==> 可见区域高度  \nOpera中：  \ndocument.body.clientWidth ==> 可见区域宽度  \ndocument.body.clientHeight ==> 可见区域高度  \ndocument.documentElement.clientWidth ==> 页面对象宽度（即BODY对象宽度加上Margin宽）  \ndocument.documentElement.clientHeight ==> 页面对象高度（即BODY对象高度加上Margin高）  \n\n\nalert(document.body.clientWidth);        //网页可见区域宽(body)\nalert(document.body.clientHeight);       //网页可见区域高(body)\nalert(document.body.offsetWidth);       //网页可见区域宽(body)，包括border、margin等\nalert(document.body.offsetHeight);      //网页可见区域宽(body)，包括border、margin等\nalert(document.body.scrollWidth);        //网页正文全文宽，包括有滚动条时的未见区域\nalert(document.body.scrollHeight);       //网页正文全文高，包括有滚动条时的未见区域\nalert(document.body.scrollTop);           //网页被卷去的Top(滚动条)\nalert(document.body.scrollLeft);           //网页被卷去的Left(滚动条)\nalert(window.screenTop);                     //浏览器距离Top\nalert(window.screenLeft);                     //浏览器距离Left\nalert(window.screen.height);                //屏幕分辨率的高\nalert(window.screen.width);                 //屏幕分辨率的宽\nalert(window.screen.availHeight);          //屏幕可用工作区的高\nalert(window.screen.availWidth);           //屏幕可用工作区的宽\n```\n\n## jquery\n```\nalert($(window).height());                           //浏览器当前窗口可视区域高度\nalert($(document).height());                        //浏览器当前窗口文档的高度\nalert($(document.body).height());                //浏览器当前窗口文档body的高度\nalert($(document.body).outerHeight(true));  //浏览器当前窗口文档body的总高度 包括border padding margin\nalert($(window).width());                            //浏览器当前窗口可视区域宽度\nalert($(document).width());                        //浏览器当前窗口文档对象宽度\nalert($(document.body).width());                //浏览器当前窗口文档body的宽度\nalert($(document.body).outerWidth(true));  //浏览器当前窗口文档body的总宽度 包括border padding margin\n```\n\n## 转载\n[Javascript、Jquery获取浏览器和屏幕各种高度宽度](https://www.cnblogs.com/EricaMIN1987_IT/p/3593431.html)","source":"_posts/2020-10-21-browser-window-size.md","raw":"---\nlayout: post\ntitle: 各种js、jquery浏览器高度、宽度\nexcerpt: '各种js、jquery浏览器高度、宽度'\ntags: []\ncomments: true\ndate: 2020-10-21 17:29:48\n---\n\n## Javascript\n```\nIE中：\ndocument.body.clientWidth ==> BODY对象宽度  \ndocument.body.clientHeight ==> BODY对象高度  \ndocument.documentElement.clientWidth ==> 可见区域宽度  \ndocument.documentElement.clientHeight ==> 可见区域高度  \nFireFox中： \ndocument.body.clientWidth ==> BODY对象宽度  \ndocument.body.clientHeight ==> BODY对象高度  \ndocument.documentElement.clientWidth ==> 可见区域宽度  \ndocument.documentElement.clientHeight ==> 可见区域高度  \nOpera中：  \ndocument.body.clientWidth ==> 可见区域宽度  \ndocument.body.clientHeight ==> 可见区域高度  \ndocument.documentElement.clientWidth ==> 页面对象宽度（即BODY对象宽度加上Margin宽）  \ndocument.documentElement.clientHeight ==> 页面对象高度（即BODY对象高度加上Margin高）  \n\n\nalert(document.body.clientWidth);        //网页可见区域宽(body)\nalert(document.body.clientHeight);       //网页可见区域高(body)\nalert(document.body.offsetWidth);       //网页可见区域宽(body)，包括border、margin等\nalert(document.body.offsetHeight);      //网页可见区域宽(body)，包括border、margin等\nalert(document.body.scrollWidth);        //网页正文全文宽，包括有滚动条时的未见区域\nalert(document.body.scrollHeight);       //网页正文全文高，包括有滚动条时的未见区域\nalert(document.body.scrollTop);           //网页被卷去的Top(滚动条)\nalert(document.body.scrollLeft);           //网页被卷去的Left(滚动条)\nalert(window.screenTop);                     //浏览器距离Top\nalert(window.screenLeft);                     //浏览器距离Left\nalert(window.screen.height);                //屏幕分辨率的高\nalert(window.screen.width);                 //屏幕分辨率的宽\nalert(window.screen.availHeight);          //屏幕可用工作区的高\nalert(window.screen.availWidth);           //屏幕可用工作区的宽\n```\n\n## jquery\n```\nalert($(window).height());                           //浏览器当前窗口可视区域高度\nalert($(document).height());                        //浏览器当前窗口文档的高度\nalert($(document.body).height());                //浏览器当前窗口文档body的高度\nalert($(document.body).outerHeight(true));  //浏览器当前窗口文档body的总高度 包括border padding margin\nalert($(window).width());                            //浏览器当前窗口可视区域宽度\nalert($(document).width());                        //浏览器当前窗口文档对象宽度\nalert($(document.body).width());                //浏览器当前窗口文档body的宽度\nalert($(document.body).outerWidth(true));  //浏览器当前窗口文档body的总宽度 包括border padding margin\n```\n\n## 转载\n[Javascript、Jquery获取浏览器和屏幕各种高度宽度](https://www.cnblogs.com/EricaMIN1987_IT/p/3593431.html)","slug":"2020-10-21-browser-window-size","published":1,"updated":"2020-10-21T09:55:50.555Z","photos":[],"link":"","_id":"ckgkk27u4001ikcv019i0euxk","content":"<h2 id=\"Javascript\"><a href=\"#Javascript\" class=\"headerlink\" title=\"Javascript\"></a>Javascript</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">IE中：</span><br><span class=\"line\">document.body.clientWidth &#x3D;&#x3D;&gt; BODY对象宽度  </span><br><span class=\"line\">document.body.clientHeight &#x3D;&#x3D;&gt; BODY对象高度  </span><br><span class=\"line\">document.documentElement.clientWidth &#x3D;&#x3D;&gt; 可见区域宽度  </span><br><span class=\"line\">document.documentElement.clientHeight &#x3D;&#x3D;&gt; 可见区域高度  </span><br><span class=\"line\">FireFox中： </span><br><span class=\"line\">document.body.clientWidth &#x3D;&#x3D;&gt; BODY对象宽度  </span><br><span class=\"line\">document.body.clientHeight &#x3D;&#x3D;&gt; BODY对象高度  </span><br><span class=\"line\">document.documentElement.clientWidth &#x3D;&#x3D;&gt; 可见区域宽度  </span><br><span class=\"line\">document.documentElement.clientHeight &#x3D;&#x3D;&gt; 可见区域高度  </span><br><span class=\"line\">Opera中：  </span><br><span class=\"line\">document.body.clientWidth &#x3D;&#x3D;&gt; 可见区域宽度  </span><br><span class=\"line\">document.body.clientHeight &#x3D;&#x3D;&gt; 可见区域高度  </span><br><span class=\"line\">document.documentElement.clientWidth &#x3D;&#x3D;&gt; 页面对象宽度（即BODY对象宽度加上Margin宽）  </span><br><span class=\"line\">document.documentElement.clientHeight &#x3D;&#x3D;&gt; 页面对象高度（即BODY对象高度加上Margin高）  </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">alert(document.body.clientWidth);        &#x2F;&#x2F;网页可见区域宽(body)</span><br><span class=\"line\">alert(document.body.clientHeight);       &#x2F;&#x2F;网页可见区域高(body)</span><br><span class=\"line\">alert(document.body.offsetWidth);       &#x2F;&#x2F;网页可见区域宽(body)，包括border、margin等</span><br><span class=\"line\">alert(document.body.offsetHeight);      &#x2F;&#x2F;网页可见区域宽(body)，包括border、margin等</span><br><span class=\"line\">alert(document.body.scrollWidth);        &#x2F;&#x2F;网页正文全文宽，包括有滚动条时的未见区域</span><br><span class=\"line\">alert(document.body.scrollHeight);       &#x2F;&#x2F;网页正文全文高，包括有滚动条时的未见区域</span><br><span class=\"line\">alert(document.body.scrollTop);           &#x2F;&#x2F;网页被卷去的Top(滚动条)</span><br><span class=\"line\">alert(document.body.scrollLeft);           &#x2F;&#x2F;网页被卷去的Left(滚动条)</span><br><span class=\"line\">alert(window.screenTop);                     &#x2F;&#x2F;浏览器距离Top</span><br><span class=\"line\">alert(window.screenLeft);                     &#x2F;&#x2F;浏览器距离Left</span><br><span class=\"line\">alert(window.screen.height);                &#x2F;&#x2F;屏幕分辨率的高</span><br><span class=\"line\">alert(window.screen.width);                 &#x2F;&#x2F;屏幕分辨率的宽</span><br><span class=\"line\">alert(window.screen.availHeight);          &#x2F;&#x2F;屏幕可用工作区的高</span><br><span class=\"line\">alert(window.screen.availWidth);           &#x2F;&#x2F;屏幕可用工作区的宽</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"jquery\"><a href=\"#jquery\" class=\"headerlink\" title=\"jquery\"></a>jquery</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alert($(window).height());                           &#x2F;&#x2F;浏览器当前窗口可视区域高度</span><br><span class=\"line\">alert($(document).height());                        &#x2F;&#x2F;浏览器当前窗口文档的高度</span><br><span class=\"line\">alert($(document.body).height());                &#x2F;&#x2F;浏览器当前窗口文档body的高度</span><br><span class=\"line\">alert($(document.body).outerHeight(true));  &#x2F;&#x2F;浏览器当前窗口文档body的总高度 包括border padding margin</span><br><span class=\"line\">alert($(window).width());                            &#x2F;&#x2F;浏览器当前窗口可视区域宽度</span><br><span class=\"line\">alert($(document).width());                        &#x2F;&#x2F;浏览器当前窗口文档对象宽度</span><br><span class=\"line\">alert($(document.body).width());                &#x2F;&#x2F;浏览器当前窗口文档body的宽度</span><br><span class=\"line\">alert($(document.body).outerWidth(true));  &#x2F;&#x2F;浏览器当前窗口文档body的总宽度 包括border padding margin</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"转载\"><a href=\"#转载\" class=\"headerlink\" title=\"转载\"></a>转载</h2><p><a href=\"https://www.cnblogs.com/EricaMIN1987_IT/p/3593431.html\">Javascript、Jquery获取浏览器和屏幕各种高度宽度</a></p>\n","site":{"data":{}},"more":"<h2 id=\"Javascript\"><a href=\"#Javascript\" class=\"headerlink\" title=\"Javascript\"></a>Javascript</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">IE中：</span><br><span class=\"line\">document.body.clientWidth &#x3D;&#x3D;&gt; BODY对象宽度  </span><br><span class=\"line\">document.body.clientHeight &#x3D;&#x3D;&gt; BODY对象高度  </span><br><span class=\"line\">document.documentElement.clientWidth &#x3D;&#x3D;&gt; 可见区域宽度  </span><br><span class=\"line\">document.documentElement.clientHeight &#x3D;&#x3D;&gt; 可见区域高度  </span><br><span class=\"line\">FireFox中： </span><br><span class=\"line\">document.body.clientWidth &#x3D;&#x3D;&gt; BODY对象宽度  </span><br><span class=\"line\">document.body.clientHeight &#x3D;&#x3D;&gt; BODY对象高度  </span><br><span class=\"line\">document.documentElement.clientWidth &#x3D;&#x3D;&gt; 可见区域宽度  </span><br><span class=\"line\">document.documentElement.clientHeight &#x3D;&#x3D;&gt; 可见区域高度  </span><br><span class=\"line\">Opera中：  </span><br><span class=\"line\">document.body.clientWidth &#x3D;&#x3D;&gt; 可见区域宽度  </span><br><span class=\"line\">document.body.clientHeight &#x3D;&#x3D;&gt; 可见区域高度  </span><br><span class=\"line\">document.documentElement.clientWidth &#x3D;&#x3D;&gt; 页面对象宽度（即BODY对象宽度加上Margin宽）  </span><br><span class=\"line\">document.documentElement.clientHeight &#x3D;&#x3D;&gt; 页面对象高度（即BODY对象高度加上Margin高）  </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">alert(document.body.clientWidth);        &#x2F;&#x2F;网页可见区域宽(body)</span><br><span class=\"line\">alert(document.body.clientHeight);       &#x2F;&#x2F;网页可见区域高(body)</span><br><span class=\"line\">alert(document.body.offsetWidth);       &#x2F;&#x2F;网页可见区域宽(body)，包括border、margin等</span><br><span class=\"line\">alert(document.body.offsetHeight);      &#x2F;&#x2F;网页可见区域宽(body)，包括border、margin等</span><br><span class=\"line\">alert(document.body.scrollWidth);        &#x2F;&#x2F;网页正文全文宽，包括有滚动条时的未见区域</span><br><span class=\"line\">alert(document.body.scrollHeight);       &#x2F;&#x2F;网页正文全文高，包括有滚动条时的未见区域</span><br><span class=\"line\">alert(document.body.scrollTop);           &#x2F;&#x2F;网页被卷去的Top(滚动条)</span><br><span class=\"line\">alert(document.body.scrollLeft);           &#x2F;&#x2F;网页被卷去的Left(滚动条)</span><br><span class=\"line\">alert(window.screenTop);                     &#x2F;&#x2F;浏览器距离Top</span><br><span class=\"line\">alert(window.screenLeft);                     &#x2F;&#x2F;浏览器距离Left</span><br><span class=\"line\">alert(window.screen.height);                &#x2F;&#x2F;屏幕分辨率的高</span><br><span class=\"line\">alert(window.screen.width);                 &#x2F;&#x2F;屏幕分辨率的宽</span><br><span class=\"line\">alert(window.screen.availHeight);          &#x2F;&#x2F;屏幕可用工作区的高</span><br><span class=\"line\">alert(window.screen.availWidth);           &#x2F;&#x2F;屏幕可用工作区的宽</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"jquery\"><a href=\"#jquery\" class=\"headerlink\" title=\"jquery\"></a>jquery</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alert($(window).height());                           &#x2F;&#x2F;浏览器当前窗口可视区域高度</span><br><span class=\"line\">alert($(document).height());                        &#x2F;&#x2F;浏览器当前窗口文档的高度</span><br><span class=\"line\">alert($(document.body).height());                &#x2F;&#x2F;浏览器当前窗口文档body的高度</span><br><span class=\"line\">alert($(document.body).outerHeight(true));  &#x2F;&#x2F;浏览器当前窗口文档body的总高度 包括border padding margin</span><br><span class=\"line\">alert($(window).width());                            &#x2F;&#x2F;浏览器当前窗口可视区域宽度</span><br><span class=\"line\">alert($(document).width());                        &#x2F;&#x2F;浏览器当前窗口文档对象宽度</span><br><span class=\"line\">alert($(document.body).width());                &#x2F;&#x2F;浏览器当前窗口文档body的宽度</span><br><span class=\"line\">alert($(document.body).outerWidth(true));  &#x2F;&#x2F;浏览器当前窗口文档body的总宽度 包括border padding margin</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"转载\"><a href=\"#转载\" class=\"headerlink\" title=\"转载\"></a>转载</h2><p><a href=\"https://www.cnblogs.com/EricaMIN1987_IT/p/3593431.html\">Javascript、Jquery获取浏览器和屏幕各种高度宽度</a></p>\n"},{"layout":"post","title":"es6异步的写法","excerpt":"由于有些业务逻辑的有序性，代码需要按顺序执行，这就需要用到异步的操作，es6中提供多种异步操作的方法，例如：promise函数，Generator函数，async函数","comments":1,"date":"2020-10-22T07:21:00.000Z","_content":"\n## Promise\n\n新界`promise`对象，在其中写入需要异步的代码\n\n```\nvar p1 = new Promise(function(resolve, reject){\n\t//做一些异步操作\n\tsetTimeout(function(){\n\t\tconsole.log('执行完成Promise');\n\t\tresolve('要返回的数据可以任何数据例如接口返回数据');\n\t}, 2000);\n});\np1.then(function(data){console.log(data)});\n\n\n执行完成Promise\n要返回的数据可以任何数据例如接口返回数据\n```\n\n### 注意\n```\nnew Promise((resolve, reject) => {\n  resolve(1);\n  console.log(2);\n}).then(r => {\n  console.log(r);\n});\n// 2\n// 1\n```\n上面代码中，调用`resolve(1)`以后，后面的`console.log(2)`还是会执行，并且会首先打印出来。这是因为立即`resolved`的`Promise`是在本轮事件循环的末尾执行，总是晚于本轮循环的同步任务。  \n一般来说，调用`resolve`或`reject`以后，`Promise`的使命就完成了，后继操作应该放到`then`方法里面，而不应该直接写在`resolve`或`reject`的后面。所以，最好在它们前面加上`return`语句，这样就不会有意外。\n```\nnew Promise((resolve, reject) => {\n  return resolve(1);\n  // 后面的语句不会执行\n  console.log(2);\n})\n```\n\n## Generator函数\nGenerator 函数是 ES6 提供的一种异步编程解决方案，语法行为与传统函数完全不同\n```\nfunction* helloWorldGenerator() {\n  yield 'hello';\n  yield 'world';\n  return 'ending';\n}\n```\n\n上面代码定义了一个 Generator 函数helloWorldGenerator，它内部有两个yield表达式（hello和world），即该函数有三个状态：hello，world 和 return 语句（结束执行）。\n\n然后，Generator 函数的调用方法与普通函数一样，也是在函数名后面加上一对圆括号。不同的是，调用 Generator 函数后，该函数并不执行，返回的也不是函数运行结果，而是一个指向内部状态的指针对象，也就是上一章介绍的遍历器对象（Iterator Object）。\n\n下一步，必须调用遍历器对象的next方法，使得指针移向下一个状态。也就是说，每次调用next方法，内部指针就从函数头部或上一次停下来的地方开始执行，直到遇到下一个yield表达式（或return语句）为止。换言之，Generator 函数是分段执行的，yield表达式是暂停执行的标记，而next方法可以恢复执行。\n\n\n```\nhw.next()\n// { value: 'hello', done: false }\n\nhw.next()\n// { value: 'world', done: false }\n\nhw.next()\n// { value: 'ending', done: true }\n\nhw.next()\n// { value: undefined, done: true }\n```\n上面代码一共调用了四次next方法。\n\n第一次调用，`Generator` 函数开始执行，直到遇到第一个`yield`表达式为止。`next`方法返回一个对象，它的`value`属性就是当前`yield`表达式的值`hello`，`done`属性的值`false`，表示遍历还没有结束。\n\n第二次调用，`Generator` 函数从上次`yield`表达式停下的地方，一直执行到下一个`yield`表达式。`next`方法返回的对象的`value`属性就是当前`yield`表达式的值`world`，`done`属性的值`false`，表示遍历还没有结束。\n\n第三次调用，`Generator` 函数从上次`yield`表达式停下的地方，一直执行到`return`语句（如果没有`return`语句，就执行到函数结束）。`next`方法返回的对象的`value`属性，就是紧跟在`return`语句后面的表达式的值（如果没有`return`语句，则`value`属性的值为`undefined`），`done`属性的值`true`，表示遍历已经结束。\n\n第四次调用，此时 `Generator` 函数已经运行完毕，`next`方法返回对象的`value`属性为`undefined`，`done`属性为`true`。以后再调用`next`方法，返回的都是这个值。\n\n总结一下，调用` Generator `函数，返回一个遍历器对象，代表 `Generator `函数的内部指针。以后，每次调用遍历器对象的`next`方法，就会返回一个有着`value`和`done`两个属性的对象。`value`属性表示当前的内部状态的值，是`yield`表达式后面那个表达式的值；`done`属性是一个布尔值，表示是否遍历结束。\n\n\n## async函数\n\nasync 函数是什么？一句话，它就是 Generator 函数的语法糖。\n\n```\nconst fs = require('fs');\n\nconst readFile = function (fileName) {\n  return new Promise(function (resolve, reject) {\n    fs.readFile(fileName, function(error, data) {\n      if (error) return reject(error);\n      resolve(data);\n    });\n  });\n};\n\nconst gen = function* () {\n  const f1 = yield readFile('/etc/fstab');\n  const f2 = yield readFile('/etc/shells');\n  console.log(f1.toString());\n  console.log(f2.toString());\n};\n\n```\n\n上面代码的函数`gen`可以写成`async`函数，就是下面这样。\n```\nconst asyncReadFile = async function () {\n  const f1 = await readFile('/etc/fstab');\n  const f2 = await readFile('/etc/shells');\n  console.log(f1.toString());\n  console.log(f2.toString());\n};\n```\n一比较就会发现，`async`函数就是将`Generator`函数的星号`（*）`替换成`async`，将`yield`替换成`await`，仅此而已。  \n`async`函数对`Generator`函数的改进，体现在以下四点。  \n### （1）内置执行器。  \nGenerator 函数的执行必须靠执行器，所以才有了co模块，而async函数自带执行器。也就是说，async函数的执行，与普通函数一模一样，只要一行。\n```\nasyncReadFile();\n```\n上面的代码调用了`asyncReadFile`函数，然后它就会自动执行，输出最后结果。这完全不像` Generator `函数，需要调用`next`方法，或者用`co`模块，才能真正执行，得到最后结果。\n\n### （2）更好的语义。\n\n`async`和`await`，比起星号和`yield`，语义更清楚了。`async`表示函数里有异步操作，`await`表示紧跟在后面的表达式需要等待结果。\n\n### （3）更广的适用性。\n\n`co`模块约定，`yield`命令后面只能是 `Thunk `函数或 `Promise`对象，而`async`函数的`await`命令后面，可以是 `Promise `对象和原始类型的值（数值、字符串和布尔值，但这时会自动转成立即 `resolved `的` Promise` 对象）。\n\n### （4）返回值是 Promise。\n\n`async`函数的返回值是` Promise` 对象，这比` Generator` 函数的返回值是` Iterator `对象方便多了。你可以用`then`方法指定下一步的操作。\n\n进一步说，`async`函数完全可以看作多个异步操作，包装成的一个 `Promise `对象，而`await`命令就是内部then命令的语法糖。\n\n下面是一个例子。\n\n```\nasync function getStockPriceByName(name) {\n  const symbol = await getStockSymbol(name);\n  const stockPrice = await getStockPrice(symbol);\n  return stockPrice;\n}\n\ngetStockPriceByName('goog').then(function (result) {\n  console.log(result);\n});\n```\n### Promise对象的状态变化 \n`async`函数返回的 `Promise `对象，必须等到内部所有`await`命令后面的 `Promise` 对象执行完，才会发生状态改变，除非遇到`return`语句或者抛出错误。也就是说，只有`async`函数内部的异步操作执行完，才会执行`then`方法指定的回调函数。\n\n下面是一个例子。\n\n```\nasync function getTitle(url) {\n  let response = await fetch(url);\n  let html = await response.text();\n  return html.match(/<title>([\\s\\S]+)<\\/title>/i)[1];\n}\ngetTitle('https://tc39.github.io/ecma262/').then(console.log)\n// \"ECMAScript 2017 Language Specification\"\n\n```\n\n上面代码中，函数`getTitle`内部有三个操作：抓取网页、取出文本、匹配页面标题。只有这三个操作全部完成，才会执行`then`方法里面的`console.log`。\n\n### await 命令\n正常情况下，`await`命令后面是一个 `Promise `对象，返回该对象的结果。如果不是 `Promise `对象，就直接返回对应的值。\n```\nasync function f() {\n  // 等同于\n  // return 123;\n  return await 123;\n}\n\nf().then(v => console.log(v))\n// 123\n```\n上面代码中，`await`命令的参数是数值`123`，这时等同于`return 123`。\n\n另一种情况是，`await`命令后面是一个`thenable`对象（即定义了`then`方法的对象），那么`await`会将其等同于 `Promise` 对象。\n```\nclass Sleep {\n  constructor(timeout) {\n    this.timeout = timeout;\n  }\n  then(resolve, reject) {\n    const startTime = Date.now();\n    setTimeout(\n      () => resolve(Date.now() - startTime),\n      this.timeout\n    );\n  }\n}\n\n(async () => {\n  const sleepTime = await new Sleep(1000);\n  console.log(sleepTime);\n})();\n// 1000\n\n```\n上面代码中，`await`命令后面是一个`Sleep`对象的实例。这个实例不是 `Promise` 对象，但是因为定义了`then`方法，`await`会将其视为`Promise`处理。\n\n\n## 参考\n[Promise 对象](https://es6.ruanyifeng.com/#docs/promise)\n[Generator 函数的语法](https://es6.ruanyifeng.com/#docs/generator)\n[async函数](https://es6.ruanyifeng.com/#docs/async)","source":"_posts/2020-10-22-es6-async-methods.md","raw":"---\nlayout: post\ntitle: es6异步的写法\nexcerpt: '由于有些业务逻辑的有序性，代码需要按顺序执行，这就需要用到异步的操作，es6中提供多种异步操作的方法，例如：promise函数，Generator函数，async函数'\ntags: []\ncomments: true\ndate: 2020-10-22 15:21:00\n---\n\n## Promise\n\n新界`promise`对象，在其中写入需要异步的代码\n\n```\nvar p1 = new Promise(function(resolve, reject){\n\t//做一些异步操作\n\tsetTimeout(function(){\n\t\tconsole.log('执行完成Promise');\n\t\tresolve('要返回的数据可以任何数据例如接口返回数据');\n\t}, 2000);\n});\np1.then(function(data){console.log(data)});\n\n\n执行完成Promise\n要返回的数据可以任何数据例如接口返回数据\n```\n\n### 注意\n```\nnew Promise((resolve, reject) => {\n  resolve(1);\n  console.log(2);\n}).then(r => {\n  console.log(r);\n});\n// 2\n// 1\n```\n上面代码中，调用`resolve(1)`以后，后面的`console.log(2)`还是会执行，并且会首先打印出来。这是因为立即`resolved`的`Promise`是在本轮事件循环的末尾执行，总是晚于本轮循环的同步任务。  \n一般来说，调用`resolve`或`reject`以后，`Promise`的使命就完成了，后继操作应该放到`then`方法里面，而不应该直接写在`resolve`或`reject`的后面。所以，最好在它们前面加上`return`语句，这样就不会有意外。\n```\nnew Promise((resolve, reject) => {\n  return resolve(1);\n  // 后面的语句不会执行\n  console.log(2);\n})\n```\n\n## Generator函数\nGenerator 函数是 ES6 提供的一种异步编程解决方案，语法行为与传统函数完全不同\n```\nfunction* helloWorldGenerator() {\n  yield 'hello';\n  yield 'world';\n  return 'ending';\n}\n```\n\n上面代码定义了一个 Generator 函数helloWorldGenerator，它内部有两个yield表达式（hello和world），即该函数有三个状态：hello，world 和 return 语句（结束执行）。\n\n然后，Generator 函数的调用方法与普通函数一样，也是在函数名后面加上一对圆括号。不同的是，调用 Generator 函数后，该函数并不执行，返回的也不是函数运行结果，而是一个指向内部状态的指针对象，也就是上一章介绍的遍历器对象（Iterator Object）。\n\n下一步，必须调用遍历器对象的next方法，使得指针移向下一个状态。也就是说，每次调用next方法，内部指针就从函数头部或上一次停下来的地方开始执行，直到遇到下一个yield表达式（或return语句）为止。换言之，Generator 函数是分段执行的，yield表达式是暂停执行的标记，而next方法可以恢复执行。\n\n\n```\nhw.next()\n// { value: 'hello', done: false }\n\nhw.next()\n// { value: 'world', done: false }\n\nhw.next()\n// { value: 'ending', done: true }\n\nhw.next()\n// { value: undefined, done: true }\n```\n上面代码一共调用了四次next方法。\n\n第一次调用，`Generator` 函数开始执行，直到遇到第一个`yield`表达式为止。`next`方法返回一个对象，它的`value`属性就是当前`yield`表达式的值`hello`，`done`属性的值`false`，表示遍历还没有结束。\n\n第二次调用，`Generator` 函数从上次`yield`表达式停下的地方，一直执行到下一个`yield`表达式。`next`方法返回的对象的`value`属性就是当前`yield`表达式的值`world`，`done`属性的值`false`，表示遍历还没有结束。\n\n第三次调用，`Generator` 函数从上次`yield`表达式停下的地方，一直执行到`return`语句（如果没有`return`语句，就执行到函数结束）。`next`方法返回的对象的`value`属性，就是紧跟在`return`语句后面的表达式的值（如果没有`return`语句，则`value`属性的值为`undefined`），`done`属性的值`true`，表示遍历已经结束。\n\n第四次调用，此时 `Generator` 函数已经运行完毕，`next`方法返回对象的`value`属性为`undefined`，`done`属性为`true`。以后再调用`next`方法，返回的都是这个值。\n\n总结一下，调用` Generator `函数，返回一个遍历器对象，代表 `Generator `函数的内部指针。以后，每次调用遍历器对象的`next`方法，就会返回一个有着`value`和`done`两个属性的对象。`value`属性表示当前的内部状态的值，是`yield`表达式后面那个表达式的值；`done`属性是一个布尔值，表示是否遍历结束。\n\n\n## async函数\n\nasync 函数是什么？一句话，它就是 Generator 函数的语法糖。\n\n```\nconst fs = require('fs');\n\nconst readFile = function (fileName) {\n  return new Promise(function (resolve, reject) {\n    fs.readFile(fileName, function(error, data) {\n      if (error) return reject(error);\n      resolve(data);\n    });\n  });\n};\n\nconst gen = function* () {\n  const f1 = yield readFile('/etc/fstab');\n  const f2 = yield readFile('/etc/shells');\n  console.log(f1.toString());\n  console.log(f2.toString());\n};\n\n```\n\n上面代码的函数`gen`可以写成`async`函数，就是下面这样。\n```\nconst asyncReadFile = async function () {\n  const f1 = await readFile('/etc/fstab');\n  const f2 = await readFile('/etc/shells');\n  console.log(f1.toString());\n  console.log(f2.toString());\n};\n```\n一比较就会发现，`async`函数就是将`Generator`函数的星号`（*）`替换成`async`，将`yield`替换成`await`，仅此而已。  \n`async`函数对`Generator`函数的改进，体现在以下四点。  \n### （1）内置执行器。  \nGenerator 函数的执行必须靠执行器，所以才有了co模块，而async函数自带执行器。也就是说，async函数的执行，与普通函数一模一样，只要一行。\n```\nasyncReadFile();\n```\n上面的代码调用了`asyncReadFile`函数，然后它就会自动执行，输出最后结果。这完全不像` Generator `函数，需要调用`next`方法，或者用`co`模块，才能真正执行，得到最后结果。\n\n### （2）更好的语义。\n\n`async`和`await`，比起星号和`yield`，语义更清楚了。`async`表示函数里有异步操作，`await`表示紧跟在后面的表达式需要等待结果。\n\n### （3）更广的适用性。\n\n`co`模块约定，`yield`命令后面只能是 `Thunk `函数或 `Promise`对象，而`async`函数的`await`命令后面，可以是 `Promise `对象和原始类型的值（数值、字符串和布尔值，但这时会自动转成立即 `resolved `的` Promise` 对象）。\n\n### （4）返回值是 Promise。\n\n`async`函数的返回值是` Promise` 对象，这比` Generator` 函数的返回值是` Iterator `对象方便多了。你可以用`then`方法指定下一步的操作。\n\n进一步说，`async`函数完全可以看作多个异步操作，包装成的一个 `Promise `对象，而`await`命令就是内部then命令的语法糖。\n\n下面是一个例子。\n\n```\nasync function getStockPriceByName(name) {\n  const symbol = await getStockSymbol(name);\n  const stockPrice = await getStockPrice(symbol);\n  return stockPrice;\n}\n\ngetStockPriceByName('goog').then(function (result) {\n  console.log(result);\n});\n```\n### Promise对象的状态变化 \n`async`函数返回的 `Promise `对象，必须等到内部所有`await`命令后面的 `Promise` 对象执行完，才会发生状态改变，除非遇到`return`语句或者抛出错误。也就是说，只有`async`函数内部的异步操作执行完，才会执行`then`方法指定的回调函数。\n\n下面是一个例子。\n\n```\nasync function getTitle(url) {\n  let response = await fetch(url);\n  let html = await response.text();\n  return html.match(/<title>([\\s\\S]+)<\\/title>/i)[1];\n}\ngetTitle('https://tc39.github.io/ecma262/').then(console.log)\n// \"ECMAScript 2017 Language Specification\"\n\n```\n\n上面代码中，函数`getTitle`内部有三个操作：抓取网页、取出文本、匹配页面标题。只有这三个操作全部完成，才会执行`then`方法里面的`console.log`。\n\n### await 命令\n正常情况下，`await`命令后面是一个 `Promise `对象，返回该对象的结果。如果不是 `Promise `对象，就直接返回对应的值。\n```\nasync function f() {\n  // 等同于\n  // return 123;\n  return await 123;\n}\n\nf().then(v => console.log(v))\n// 123\n```\n上面代码中，`await`命令的参数是数值`123`，这时等同于`return 123`。\n\n另一种情况是，`await`命令后面是一个`thenable`对象（即定义了`then`方法的对象），那么`await`会将其等同于 `Promise` 对象。\n```\nclass Sleep {\n  constructor(timeout) {\n    this.timeout = timeout;\n  }\n  then(resolve, reject) {\n    const startTime = Date.now();\n    setTimeout(\n      () => resolve(Date.now() - startTime),\n      this.timeout\n    );\n  }\n}\n\n(async () => {\n  const sleepTime = await new Sleep(1000);\n  console.log(sleepTime);\n})();\n// 1000\n\n```\n上面代码中，`await`命令后面是一个`Sleep`对象的实例。这个实例不是 `Promise` 对象，但是因为定义了`then`方法，`await`会将其视为`Promise`处理。\n\n\n## 参考\n[Promise 对象](https://es6.ruanyifeng.com/#docs/promise)\n[Generator 函数的语法](https://es6.ruanyifeng.com/#docs/generator)\n[async函数](https://es6.ruanyifeng.com/#docs/async)","slug":"2020-10-22-es6-async-methods","published":1,"updated":"2020-10-22T08:19:43.407Z","photos":[],"link":"","_id":"ckgkk27v4003akcv00ckf85pt","content":"<h2 id=\"Promise\"><a href=\"#Promise\" class=\"headerlink\" title=\"Promise\"></a>Promise</h2><p>新界<code>promise</code>对象，在其中写入需要异步的代码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var p1 &#x3D; new Promise(function(resolve, reject)&#123;</span><br><span class=\"line\">\t&#x2F;&#x2F;做一些异步操作</span><br><span class=\"line\">\tsetTimeout(function()&#123;</span><br><span class=\"line\">\t\tconsole.log(&#39;执行完成Promise&#39;);</span><br><span class=\"line\">\t\tresolve(&#39;要返回的数据可以任何数据例如接口返回数据&#39;);</span><br><span class=\"line\">\t&#125;, 2000);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">p1.then(function(data)&#123;console.log(data)&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">执行完成Promise</span><br><span class=\"line\">要返回的数据可以任何数据例如接口返回数据</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">new Promise((resolve, reject) &#x3D;&gt; &#123;</span><br><span class=\"line\">  resolve(1);</span><br><span class=\"line\">  console.log(2);</span><br><span class=\"line\">&#125;).then(r &#x3D;&gt; &#123;</span><br><span class=\"line\">  console.log(r);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">&#x2F;&#x2F; 2</span><br><span class=\"line\">&#x2F;&#x2F; 1</span><br></pre></td></tr></table></figure>\n<p>上面代码中，调用<code>resolve(1)</code>以后，后面的<code>console.log(2)</code>还是会执行，并且会首先打印出来。这是因为立即<code>resolved</code>的<code>Promise</code>是在本轮事件循环的末尾执行，总是晚于本轮循环的同步任务。<br>一般来说，调用<code>resolve</code>或<code>reject</code>以后，<code>Promise</code>的使命就完成了，后继操作应该放到<code>then</code>方法里面，而不应该直接写在<code>resolve</code>或<code>reject</code>的后面。所以，最好在它们前面加上<code>return</code>语句，这样就不会有意外。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">new Promise((resolve, reject) &#x3D;&gt; &#123;</span><br><span class=\"line\">  return resolve(1);</span><br><span class=\"line\">  &#x2F;&#x2F; 后面的语句不会执行</span><br><span class=\"line\">  console.log(2);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Generator函数\"><a href=\"#Generator函数\" class=\"headerlink\" title=\"Generator函数\"></a>Generator函数</h2><p>Generator 函数是 ES6 提供的一种异步编程解决方案，语法行为与传统函数完全不同</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function* helloWorldGenerator() &#123;</span><br><span class=\"line\">  yield &#39;hello&#39;;</span><br><span class=\"line\">  yield &#39;world&#39;;</span><br><span class=\"line\">  return &#39;ending&#39;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>上面代码定义了一个 Generator 函数helloWorldGenerator，它内部有两个yield表达式（hello和world），即该函数有三个状态：hello，world 和 return 语句（结束执行）。</p>\n<p>然后，Generator 函数的调用方法与普通函数一样，也是在函数名后面加上一对圆括号。不同的是，调用 Generator 函数后，该函数并不执行，返回的也不是函数运行结果，而是一个指向内部状态的指针对象，也就是上一章介绍的遍历器对象（Iterator Object）。</p>\n<p>下一步，必须调用遍历器对象的next方法，使得指针移向下一个状态。也就是说，每次调用next方法，内部指针就从函数头部或上一次停下来的地方开始执行，直到遇到下一个yield表达式（或return语句）为止。换言之，Generator 函数是分段执行的，yield表达式是暂停执行的标记，而next方法可以恢复执行。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hw.next()</span><br><span class=\"line\">&#x2F;&#x2F; &#123; value: &#39;hello&#39;, done: false &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">hw.next()</span><br><span class=\"line\">&#x2F;&#x2F; &#123; value: &#39;world&#39;, done: false &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">hw.next()</span><br><span class=\"line\">&#x2F;&#x2F; &#123; value: &#39;ending&#39;, done: true &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">hw.next()</span><br><span class=\"line\">&#x2F;&#x2F; &#123; value: undefined, done: true &#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码一共调用了四次next方法。</p>\n<p>第一次调用，<code>Generator</code> 函数开始执行，直到遇到第一个<code>yield</code>表达式为止。<code>next</code>方法返回一个对象，它的<code>value</code>属性就是当前<code>yield</code>表达式的值<code>hello</code>，<code>done</code>属性的值<code>false</code>，表示遍历还没有结束。</p>\n<p>第二次调用，<code>Generator</code> 函数从上次<code>yield</code>表达式停下的地方，一直执行到下一个<code>yield</code>表达式。<code>next</code>方法返回的对象的<code>value</code>属性就是当前<code>yield</code>表达式的值<code>world</code>，<code>done</code>属性的值<code>false</code>，表示遍历还没有结束。</p>\n<p>第三次调用，<code>Generator</code> 函数从上次<code>yield</code>表达式停下的地方，一直执行到<code>return</code>语句（如果没有<code>return</code>语句，就执行到函数结束）。<code>next</code>方法返回的对象的<code>value</code>属性，就是紧跟在<code>return</code>语句后面的表达式的值（如果没有<code>return</code>语句，则<code>value</code>属性的值为<code>undefined</code>），<code>done</code>属性的值<code>true</code>，表示遍历已经结束。</p>\n<p>第四次调用，此时 <code>Generator</code> 函数已经运行完毕，<code>next</code>方法返回对象的<code>value</code>属性为<code>undefined</code>，<code>done</code>属性为<code>true</code>。以后再调用<code>next</code>方法，返回的都是这个值。</p>\n<p>总结一下，调用<code>Generator</code>函数，返回一个遍历器对象，代表 <code>Generator </code>函数的内部指针。以后，每次调用遍历器对象的<code>next</code>方法，就会返回一个有着<code>value</code>和<code>done</code>两个属性的对象。<code>value</code>属性表示当前的内部状态的值，是<code>yield</code>表达式后面那个表达式的值；<code>done</code>属性是一个布尔值，表示是否遍历结束。</p>\n<h2 id=\"async函数\"><a href=\"#async函数\" class=\"headerlink\" title=\"async函数\"></a>async函数</h2><p>async 函数是什么？一句话，它就是 Generator 函数的语法糖。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const fs &#x3D; require(&#39;fs&#39;);</span><br><span class=\"line\"></span><br><span class=\"line\">const readFile &#x3D; function (fileName) &#123;</span><br><span class=\"line\">  return new Promise(function (resolve, reject) &#123;</span><br><span class=\"line\">    fs.readFile(fileName, function(error, data) &#123;</span><br><span class=\"line\">      if (error) return reject(error);</span><br><span class=\"line\">      resolve(data);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">const gen &#x3D; function* () &#123;</span><br><span class=\"line\">  const f1 &#x3D; yield readFile(&#39;&#x2F;etc&#x2F;fstab&#39;);</span><br><span class=\"line\">  const f2 &#x3D; yield readFile(&#39;&#x2F;etc&#x2F;shells&#39;);</span><br><span class=\"line\">  console.log(f1.toString());</span><br><span class=\"line\">  console.log(f2.toString());</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>上面代码的函数<code>gen</code>可以写成<code>async</code>函数，就是下面这样。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const asyncReadFile &#x3D; async function () &#123;</span><br><span class=\"line\">  const f1 &#x3D; await readFile(&#39;&#x2F;etc&#x2F;fstab&#39;);</span><br><span class=\"line\">  const f2 &#x3D; await readFile(&#39;&#x2F;etc&#x2F;shells&#39;);</span><br><span class=\"line\">  console.log(f1.toString());</span><br><span class=\"line\">  console.log(f2.toString());</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>一比较就会发现，<code>async</code>函数就是将<code>Generator</code>函数的星号<code>（*）</code>替换成<code>async</code>，将<code>yield</code>替换成<code>await</code>，仅此而已。<br><code>async</code>函数对<code>Generator</code>函数的改进，体现在以下四点。  </p>\n<h3 id=\"（1）内置执行器。\"><a href=\"#（1）内置执行器。\" class=\"headerlink\" title=\"（1）内置执行器。\"></a>（1）内置执行器。</h3><p>Generator 函数的执行必须靠执行器，所以才有了co模块，而async函数自带执行器。也就是说，async函数的执行，与普通函数一模一样，只要一行。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">asyncReadFile();</span><br></pre></td></tr></table></figure>\n<p>上面的代码调用了<code>asyncReadFile</code>函数，然后它就会自动执行，输出最后结果。这完全不像<code>Generator</code>函数，需要调用<code>next</code>方法，或者用<code>co</code>模块，才能真正执行，得到最后结果。</p>\n<h3 id=\"（2）更好的语义。\"><a href=\"#（2）更好的语义。\" class=\"headerlink\" title=\"（2）更好的语义。\"></a>（2）更好的语义。</h3><p><code>async</code>和<code>await</code>，比起星号和<code>yield</code>，语义更清楚了。<code>async</code>表示函数里有异步操作，<code>await</code>表示紧跟在后面的表达式需要等待结果。</p>\n<h3 id=\"（3）更广的适用性。\"><a href=\"#（3）更广的适用性。\" class=\"headerlink\" title=\"（3）更广的适用性。\"></a>（3）更广的适用性。</h3><p><code>co</code>模块约定，<code>yield</code>命令后面只能是 <code>Thunk </code>函数或 <code>Promise</code>对象，而<code>async</code>函数的<code>await</code>命令后面，可以是 <code>Promise </code>对象和原始类型的值（数值、字符串和布尔值，但这时会自动转成立即 <code>resolved </code>的<code> Promise</code> 对象）。</p>\n<h3 id=\"（4）返回值是-Promise。\"><a href=\"#（4）返回值是-Promise。\" class=\"headerlink\" title=\"（4）返回值是 Promise。\"></a>（4）返回值是 Promise。</h3><p><code>async</code>函数的返回值是<code> Promise</code> 对象，这比<code> Generator</code> 函数的返回值是<code>Iterator</code>对象方便多了。你可以用<code>then</code>方法指定下一步的操作。</p>\n<p>进一步说，<code>async</code>函数完全可以看作多个异步操作，包装成的一个 <code>Promise </code>对象，而<code>await</code>命令就是内部then命令的语法糖。</p>\n<p>下面是一个例子。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">async function getStockPriceByName(name) &#123;</span><br><span class=\"line\">  const symbol &#x3D; await getStockSymbol(name);</span><br><span class=\"line\">  const stockPrice &#x3D; await getStockPrice(symbol);</span><br><span class=\"line\">  return stockPrice;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">getStockPriceByName(&#39;goog&#39;).then(function (result) &#123;</span><br><span class=\"line\">  console.log(result);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"Promise对象的状态变化\"><a href=\"#Promise对象的状态变化\" class=\"headerlink\" title=\"Promise对象的状态变化\"></a>Promise对象的状态变化</h3><p><code>async</code>函数返回的 <code>Promise </code>对象，必须等到内部所有<code>await</code>命令后面的 <code>Promise</code> 对象执行完，才会发生状态改变，除非遇到<code>return</code>语句或者抛出错误。也就是说，只有<code>async</code>函数内部的异步操作执行完，才会执行<code>then</code>方法指定的回调函数。</p>\n<p>下面是一个例子。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">async function getTitle(url) &#123;</span><br><span class=\"line\">  let response &#x3D; await fetch(url);</span><br><span class=\"line\">  let html &#x3D; await response.text();</span><br><span class=\"line\">  return html.match(&#x2F;&lt;title&gt;([\\s\\S]+)&lt;\\&#x2F;title&gt;&#x2F;i)[1];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">getTitle(&#39;https:&#x2F;&#x2F;tc39.github.io&#x2F;ecma262&#x2F;&#39;).then(console.log)</span><br><span class=\"line\">&#x2F;&#x2F; &quot;ECMAScript 2017 Language Specification&quot;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>上面代码中，函数<code>getTitle</code>内部有三个操作：抓取网页、取出文本、匹配页面标题。只有这三个操作全部完成，才会执行<code>then</code>方法里面的<code>console.log</code>。</p>\n<h3 id=\"await-命令\"><a href=\"#await-命令\" class=\"headerlink\" title=\"await 命令\"></a>await 命令</h3><p>正常情况下，<code>await</code>命令后面是一个 <code>Promise </code>对象，返回该对象的结果。如果不是 <code>Promise </code>对象，就直接返回对应的值。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">async function f() &#123;</span><br><span class=\"line\">  &#x2F;&#x2F; 等同于</span><br><span class=\"line\">  &#x2F;&#x2F; return 123;</span><br><span class=\"line\">  return await 123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">f().then(v &#x3D;&gt; console.log(v))</span><br><span class=\"line\">&#x2F;&#x2F; 123</span><br></pre></td></tr></table></figure>\n<p>上面代码中，<code>await</code>命令的参数是数值<code>123</code>，这时等同于<code>return 123</code>。</p>\n<p>另一种情况是，<code>await</code>命令后面是一个<code>thenable</code>对象（即定义了<code>then</code>方法的对象），那么<code>await</code>会将其等同于 <code>Promise</code> 对象。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class Sleep &#123;</span><br><span class=\"line\">  constructor(timeout) &#123;</span><br><span class=\"line\">    this.timeout &#x3D; timeout;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  then(resolve, reject) &#123;</span><br><span class=\"line\">    const startTime &#x3D; Date.now();</span><br><span class=\"line\">    setTimeout(</span><br><span class=\"line\">      () &#x3D;&gt; resolve(Date.now() - startTime),</span><br><span class=\"line\">      this.timeout</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">(async () &#x3D;&gt; &#123;</span><br><span class=\"line\">  const sleepTime &#x3D; await new Sleep(1000);</span><br><span class=\"line\">  console.log(sleepTime);</span><br><span class=\"line\">&#125;)();</span><br><span class=\"line\">&#x2F;&#x2F; 1000</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>上面代码中，<code>await</code>命令后面是一个<code>Sleep</code>对象的实例。这个实例不是 <code>Promise</code> 对象，但是因为定义了<code>then</code>方法，<code>await</code>会将其视为<code>Promise</code>处理。</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"https://es6.ruanyifeng.com/#docs/promise\">Promise 对象</a><br><a href=\"https://es6.ruanyifeng.com/#docs/generator\">Generator 函数的语法</a><br><a href=\"https://es6.ruanyifeng.com/#docs/async\">async函数</a></p>\n","site":{"data":{}},"more":"<h2 id=\"Promise\"><a href=\"#Promise\" class=\"headerlink\" title=\"Promise\"></a>Promise</h2><p>新界<code>promise</code>对象，在其中写入需要异步的代码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var p1 &#x3D; new Promise(function(resolve, reject)&#123;</span><br><span class=\"line\">\t&#x2F;&#x2F;做一些异步操作</span><br><span class=\"line\">\tsetTimeout(function()&#123;</span><br><span class=\"line\">\t\tconsole.log(&#39;执行完成Promise&#39;);</span><br><span class=\"line\">\t\tresolve(&#39;要返回的数据可以任何数据例如接口返回数据&#39;);</span><br><span class=\"line\">\t&#125;, 2000);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">p1.then(function(data)&#123;console.log(data)&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">执行完成Promise</span><br><span class=\"line\">要返回的数据可以任何数据例如接口返回数据</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">new Promise((resolve, reject) &#x3D;&gt; &#123;</span><br><span class=\"line\">  resolve(1);</span><br><span class=\"line\">  console.log(2);</span><br><span class=\"line\">&#125;).then(r &#x3D;&gt; &#123;</span><br><span class=\"line\">  console.log(r);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">&#x2F;&#x2F; 2</span><br><span class=\"line\">&#x2F;&#x2F; 1</span><br></pre></td></tr></table></figure>\n<p>上面代码中，调用<code>resolve(1)</code>以后，后面的<code>console.log(2)</code>还是会执行，并且会首先打印出来。这是因为立即<code>resolved</code>的<code>Promise</code>是在本轮事件循环的末尾执行，总是晚于本轮循环的同步任务。<br>一般来说，调用<code>resolve</code>或<code>reject</code>以后，<code>Promise</code>的使命就完成了，后继操作应该放到<code>then</code>方法里面，而不应该直接写在<code>resolve</code>或<code>reject</code>的后面。所以，最好在它们前面加上<code>return</code>语句，这样就不会有意外。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">new Promise((resolve, reject) &#x3D;&gt; &#123;</span><br><span class=\"line\">  return resolve(1);</span><br><span class=\"line\">  &#x2F;&#x2F; 后面的语句不会执行</span><br><span class=\"line\">  console.log(2);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Generator函数\"><a href=\"#Generator函数\" class=\"headerlink\" title=\"Generator函数\"></a>Generator函数</h2><p>Generator 函数是 ES6 提供的一种异步编程解决方案，语法行为与传统函数完全不同</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function* helloWorldGenerator() &#123;</span><br><span class=\"line\">  yield &#39;hello&#39;;</span><br><span class=\"line\">  yield &#39;world&#39;;</span><br><span class=\"line\">  return &#39;ending&#39;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>上面代码定义了一个 Generator 函数helloWorldGenerator，它内部有两个yield表达式（hello和world），即该函数有三个状态：hello，world 和 return 语句（结束执行）。</p>\n<p>然后，Generator 函数的调用方法与普通函数一样，也是在函数名后面加上一对圆括号。不同的是，调用 Generator 函数后，该函数并不执行，返回的也不是函数运行结果，而是一个指向内部状态的指针对象，也就是上一章介绍的遍历器对象（Iterator Object）。</p>\n<p>下一步，必须调用遍历器对象的next方法，使得指针移向下一个状态。也就是说，每次调用next方法，内部指针就从函数头部或上一次停下来的地方开始执行，直到遇到下一个yield表达式（或return语句）为止。换言之，Generator 函数是分段执行的，yield表达式是暂停执行的标记，而next方法可以恢复执行。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hw.next()</span><br><span class=\"line\">&#x2F;&#x2F; &#123; value: &#39;hello&#39;, done: false &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">hw.next()</span><br><span class=\"line\">&#x2F;&#x2F; &#123; value: &#39;world&#39;, done: false &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">hw.next()</span><br><span class=\"line\">&#x2F;&#x2F; &#123; value: &#39;ending&#39;, done: true &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">hw.next()</span><br><span class=\"line\">&#x2F;&#x2F; &#123; value: undefined, done: true &#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码一共调用了四次next方法。</p>\n<p>第一次调用，<code>Generator</code> 函数开始执行，直到遇到第一个<code>yield</code>表达式为止。<code>next</code>方法返回一个对象，它的<code>value</code>属性就是当前<code>yield</code>表达式的值<code>hello</code>，<code>done</code>属性的值<code>false</code>，表示遍历还没有结束。</p>\n<p>第二次调用，<code>Generator</code> 函数从上次<code>yield</code>表达式停下的地方，一直执行到下一个<code>yield</code>表达式。<code>next</code>方法返回的对象的<code>value</code>属性就是当前<code>yield</code>表达式的值<code>world</code>，<code>done</code>属性的值<code>false</code>，表示遍历还没有结束。</p>\n<p>第三次调用，<code>Generator</code> 函数从上次<code>yield</code>表达式停下的地方，一直执行到<code>return</code>语句（如果没有<code>return</code>语句，就执行到函数结束）。<code>next</code>方法返回的对象的<code>value</code>属性，就是紧跟在<code>return</code>语句后面的表达式的值（如果没有<code>return</code>语句，则<code>value</code>属性的值为<code>undefined</code>），<code>done</code>属性的值<code>true</code>，表示遍历已经结束。</p>\n<p>第四次调用，此时 <code>Generator</code> 函数已经运行完毕，<code>next</code>方法返回对象的<code>value</code>属性为<code>undefined</code>，<code>done</code>属性为<code>true</code>。以后再调用<code>next</code>方法，返回的都是这个值。</p>\n<p>总结一下，调用<code>Generator</code>函数，返回一个遍历器对象，代表 <code>Generator </code>函数的内部指针。以后，每次调用遍历器对象的<code>next</code>方法，就会返回一个有着<code>value</code>和<code>done</code>两个属性的对象。<code>value</code>属性表示当前的内部状态的值，是<code>yield</code>表达式后面那个表达式的值；<code>done</code>属性是一个布尔值，表示是否遍历结束。</p>\n<h2 id=\"async函数\"><a href=\"#async函数\" class=\"headerlink\" title=\"async函数\"></a>async函数</h2><p>async 函数是什么？一句话，它就是 Generator 函数的语法糖。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const fs &#x3D; require(&#39;fs&#39;);</span><br><span class=\"line\"></span><br><span class=\"line\">const readFile &#x3D; function (fileName) &#123;</span><br><span class=\"line\">  return new Promise(function (resolve, reject) &#123;</span><br><span class=\"line\">    fs.readFile(fileName, function(error, data) &#123;</span><br><span class=\"line\">      if (error) return reject(error);</span><br><span class=\"line\">      resolve(data);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">const gen &#x3D; function* () &#123;</span><br><span class=\"line\">  const f1 &#x3D; yield readFile(&#39;&#x2F;etc&#x2F;fstab&#39;);</span><br><span class=\"line\">  const f2 &#x3D; yield readFile(&#39;&#x2F;etc&#x2F;shells&#39;);</span><br><span class=\"line\">  console.log(f1.toString());</span><br><span class=\"line\">  console.log(f2.toString());</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>上面代码的函数<code>gen</code>可以写成<code>async</code>函数，就是下面这样。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const asyncReadFile &#x3D; async function () &#123;</span><br><span class=\"line\">  const f1 &#x3D; await readFile(&#39;&#x2F;etc&#x2F;fstab&#39;);</span><br><span class=\"line\">  const f2 &#x3D; await readFile(&#39;&#x2F;etc&#x2F;shells&#39;);</span><br><span class=\"line\">  console.log(f1.toString());</span><br><span class=\"line\">  console.log(f2.toString());</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>一比较就会发现，<code>async</code>函数就是将<code>Generator</code>函数的星号<code>（*）</code>替换成<code>async</code>，将<code>yield</code>替换成<code>await</code>，仅此而已。<br><code>async</code>函数对<code>Generator</code>函数的改进，体现在以下四点。  </p>\n<h3 id=\"（1）内置执行器。\"><a href=\"#（1）内置执行器。\" class=\"headerlink\" title=\"（1）内置执行器。\"></a>（1）内置执行器。</h3><p>Generator 函数的执行必须靠执行器，所以才有了co模块，而async函数自带执行器。也就是说，async函数的执行，与普通函数一模一样，只要一行。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">asyncReadFile();</span><br></pre></td></tr></table></figure>\n<p>上面的代码调用了<code>asyncReadFile</code>函数，然后它就会自动执行，输出最后结果。这完全不像<code>Generator</code>函数，需要调用<code>next</code>方法，或者用<code>co</code>模块，才能真正执行，得到最后结果。</p>\n<h3 id=\"（2）更好的语义。\"><a href=\"#（2）更好的语义。\" class=\"headerlink\" title=\"（2）更好的语义。\"></a>（2）更好的语义。</h3><p><code>async</code>和<code>await</code>，比起星号和<code>yield</code>，语义更清楚了。<code>async</code>表示函数里有异步操作，<code>await</code>表示紧跟在后面的表达式需要等待结果。</p>\n<h3 id=\"（3）更广的适用性。\"><a href=\"#（3）更广的适用性。\" class=\"headerlink\" title=\"（3）更广的适用性。\"></a>（3）更广的适用性。</h3><p><code>co</code>模块约定，<code>yield</code>命令后面只能是 <code>Thunk </code>函数或 <code>Promise</code>对象，而<code>async</code>函数的<code>await</code>命令后面，可以是 <code>Promise </code>对象和原始类型的值（数值、字符串和布尔值，但这时会自动转成立即 <code>resolved </code>的<code> Promise</code> 对象）。</p>\n<h3 id=\"（4）返回值是-Promise。\"><a href=\"#（4）返回值是-Promise。\" class=\"headerlink\" title=\"（4）返回值是 Promise。\"></a>（4）返回值是 Promise。</h3><p><code>async</code>函数的返回值是<code> Promise</code> 对象，这比<code> Generator</code> 函数的返回值是<code>Iterator</code>对象方便多了。你可以用<code>then</code>方法指定下一步的操作。</p>\n<p>进一步说，<code>async</code>函数完全可以看作多个异步操作，包装成的一个 <code>Promise </code>对象，而<code>await</code>命令就是内部then命令的语法糖。</p>\n<p>下面是一个例子。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">async function getStockPriceByName(name) &#123;</span><br><span class=\"line\">  const symbol &#x3D; await getStockSymbol(name);</span><br><span class=\"line\">  const stockPrice &#x3D; await getStockPrice(symbol);</span><br><span class=\"line\">  return stockPrice;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">getStockPriceByName(&#39;goog&#39;).then(function (result) &#123;</span><br><span class=\"line\">  console.log(result);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"Promise对象的状态变化\"><a href=\"#Promise对象的状态变化\" class=\"headerlink\" title=\"Promise对象的状态变化\"></a>Promise对象的状态变化</h3><p><code>async</code>函数返回的 <code>Promise </code>对象，必须等到内部所有<code>await</code>命令后面的 <code>Promise</code> 对象执行完，才会发生状态改变，除非遇到<code>return</code>语句或者抛出错误。也就是说，只有<code>async</code>函数内部的异步操作执行完，才会执行<code>then</code>方法指定的回调函数。</p>\n<p>下面是一个例子。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">async function getTitle(url) &#123;</span><br><span class=\"line\">  let response &#x3D; await fetch(url);</span><br><span class=\"line\">  let html &#x3D; await response.text();</span><br><span class=\"line\">  return html.match(&#x2F;&lt;title&gt;([\\s\\S]+)&lt;\\&#x2F;title&gt;&#x2F;i)[1];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">getTitle(&#39;https:&#x2F;&#x2F;tc39.github.io&#x2F;ecma262&#x2F;&#39;).then(console.log)</span><br><span class=\"line\">&#x2F;&#x2F; &quot;ECMAScript 2017 Language Specification&quot;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>上面代码中，函数<code>getTitle</code>内部有三个操作：抓取网页、取出文本、匹配页面标题。只有这三个操作全部完成，才会执行<code>then</code>方法里面的<code>console.log</code>。</p>\n<h3 id=\"await-命令\"><a href=\"#await-命令\" class=\"headerlink\" title=\"await 命令\"></a>await 命令</h3><p>正常情况下，<code>await</code>命令后面是一个 <code>Promise </code>对象，返回该对象的结果。如果不是 <code>Promise </code>对象，就直接返回对应的值。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">async function f() &#123;</span><br><span class=\"line\">  &#x2F;&#x2F; 等同于</span><br><span class=\"line\">  &#x2F;&#x2F; return 123;</span><br><span class=\"line\">  return await 123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">f().then(v &#x3D;&gt; console.log(v))</span><br><span class=\"line\">&#x2F;&#x2F; 123</span><br></pre></td></tr></table></figure>\n<p>上面代码中，<code>await</code>命令的参数是数值<code>123</code>，这时等同于<code>return 123</code>。</p>\n<p>另一种情况是，<code>await</code>命令后面是一个<code>thenable</code>对象（即定义了<code>then</code>方法的对象），那么<code>await</code>会将其等同于 <code>Promise</code> 对象。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class Sleep &#123;</span><br><span class=\"line\">  constructor(timeout) &#123;</span><br><span class=\"line\">    this.timeout &#x3D; timeout;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  then(resolve, reject) &#123;</span><br><span class=\"line\">    const startTime &#x3D; Date.now();</span><br><span class=\"line\">    setTimeout(</span><br><span class=\"line\">      () &#x3D;&gt; resolve(Date.now() - startTime),</span><br><span class=\"line\">      this.timeout</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">(async () &#x3D;&gt; &#123;</span><br><span class=\"line\">  const sleepTime &#x3D; await new Sleep(1000);</span><br><span class=\"line\">  console.log(sleepTime);</span><br><span class=\"line\">&#125;)();</span><br><span class=\"line\">&#x2F;&#x2F; 1000</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>上面代码中，<code>await</code>命令后面是一个<code>Sleep</code>对象的实例。这个实例不是 <code>Promise</code> 对象，但是因为定义了<code>then</code>方法，<code>await</code>会将其视为<code>Promise</code>处理。</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"https://es6.ruanyifeng.com/#docs/promise\">Promise 对象</a><br><a href=\"https://es6.ruanyifeng.com/#docs/generator\">Generator 函数的语法</a><br><a href=\"https://es6.ruanyifeng.com/#docs/async\">async函数</a></p>\n"},{"layout":"post","title":"在centos7上使用kubeadm搭建 v1.16.9版本Kubernetes集群","date":"2020-09-03T16:00:00.000Z","excerpt":"在centos上使用一键安装工具kubeadm安装kubernete环境，摆脱繁琐的k8s配置","comments":1,"_content":"\n# 环境准备\n## 实验环境\n|角色|IP地址|主机名|docker版本|硬件配置|系统|内核|\n|:----:|:----:|:----:|:----:|:----:|:----:|:----:|\n|master|192.168.9.10|k8s-master|18.09.9|2c4g|CentOS7.7|3.10.0-1062.el7.x86_64|\nnode1|192.168.9.13|k8s-node1|18.09.9|2c6g|CentOS7.7|3.10.0-1062.el7.x86_64\nnode2|192.168.9.14|k8s-node2|18.09.9|2c6g|CentOS7.7|3.10.0-1062.el7.x86_64\n## 每个节点配置host信息\n```\ncat >> /etc/hosts <<EOF\n192.168.9.10 k8s-master\n192.168.9.13 k8s-node1\n192.168.9.14 k8s-node2\nEOF\n```\n## 禁用防火墙和selinux\n```\n//禁用防火墙\nsystemctl stop firewalld && systemctl disable firewalld\n\n//禁用selinux\n#临时修改\nsetenforce 0\n\n#永久修改，重启服务器后生效\nsed -i '7s/enforcing/disabled/' /etc/selinux/config\n```\n## 创建```/etc/sysctl.d/k8s.conf```文件，添加如下内容\n```\n//向文件中写入以下内容\ncat >/etc/sysctl.d/k8s.conf <<EOF\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1\nnet.ipv4.ip_forward = 1\nEOF\n\n//执行以下命令生效\nmodprobe br_netfilter && sysctl -p /etc/sysctl.d/k8s.conf\n```\n## 安装ipvs\n脚本创建了的```/etc/sysconfig/modules/ipvs.modules```文件，保证在节点重启后能自动加载所需模块。使用```lsmod | grep -e ip_vs -e nf_conntrack_ipv4```命令查看是否已经正确加载所需的内核模块\n```\n//向文件中写入以下内容\ncat > /etc/sysconfig/modules/ipvs.modules <<EOF\n#!/bin/bash\nmodprobe -- ip_vs\nmodprobe -- ip_vs_rr\nmodprobe -- ip_vs_wrr\nmodprobe -- ip_vs_sh\nmodprobe -- nf_conntrack_ipv4\nEOF\n\n//修改权限以及查看是否已经正确加载所需的内核模块\nchmod 755 /etc/sysconfig/modules/ipvs.modules && bash /etc/sysconfig/modules/ipvs.modules && lsmod | grep -e ip_vs -e nf_conntrack_ipv4\n\nnf_conntrack_ipv4      15053  0 \nnf_defrag_ipv4         12729  1 nf_conntrack_ipv4\nip_vs_sh               12688  0 \nip_vs_wrr              12697  0 \nip_vs_rr               12600  0 \nip_vs                 145497  6 ip_vs_rr,ip_vs_sh,ip_vs_wrr\nnf_conntrack          133095  2 ip_vs,nf_conntrack_ipv4\nlibcrc32c              12644  3 xfs,ip_vs,nf_conntrack\n```\n安装ipset和ipvsadm(便于查看 ipvs 的代理规则)\n```\nyum -y install ipset ipvsadm\n```\n## 关闭swap分区\n修改```/etc/fstab```文件，注释掉 SWAP 的自动挂载，使用```free -m```确认 swap 已经关闭\n```\n//手动关闭swap\nswapoff -a\n\n//修改fstab文件，注释swap自动挂载\nsed -i '/^\\/dev\\/mapper\\/centos-swap/c#/dev/mapper/centos-swap swap                    swap    defaults        0 0' /etc/fstab\n\n//查看swap是否关闭\nfree -m\n\ntotal        used        free      shared  buff/cache   available\nMem:           1994         682         612           9         699        1086\nSwap:             0           0           0\n```\nswappiness 参数调整，修改```/etc/sysctl.d/k8s.conf```添加下面一行\n```\ncat >>/etc/sysctl.d/k8s.conf <<EOF\nvm.swappiness=0\nEOF\n\n//使配置生效\nsysctl -p /etc/sysctl.d/k8s.conf\n\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1\nnet.ipv4.ip_forward = 1\nvm.swappiness = 0\n```\n## 安装docker18.09.9\n1.添加阿里云yum源\n```\nyum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n```\n2.查看可用版本\n```\nyum list docker-ce --showduplicates | sort -r\n\n已加载插件：fastestmirror, langpacks\n可安装的软件包\n * updates: mirrors.aliyun.com\nLoading mirror speeds from cached hostfile\n * extras: mirrors.aliyun.com\ndocker-ce.x86_64            3:19.03.5-3.el7                     docker-ce-stable\ndocker-ce.x86_64            3:19.03.4-3.el7                     docker-ce-stable\n。。。。。。\ndocker-ce.x86_64            3:18.09.9-3.el7                     docker-ce-stable\ndocker-ce.x86_64            3:18.09.8-3.el7                     docker-ce-stable\ndocker-ce.x86_64            3:18.09.7-3.el7                     docker-ce-stable\ndocker-ce.x86_64            3:18.09.6-3.el7                     docker-ce-stable\n。。。。。。\n```\n    \n3.安装docker18.09.9\n```\nyum -y install docker-ce-18.09.9-3.el7 docker-ce-cli-18.09.9\n```\n4.启动docker并设置开机自启\n```\nsystemctl enable docker && systemctl start docker\n```\n5.配置阿里云docker镜像加速\n```\ncat > /etc/docker/daemon.json <<-'EOF'\n{\n  \"registry-mirrors\": [\"https://gqk8w9va.mirror.aliyuncs.com\"]\n}\nEOF\n```\n6.配置完后重启docker\n```\nsystemctl restart docker\n```\n7.查看加速\n```\ndocker info\n\n找到Registry Mirrors一行\nRegistry Mirrors:\n https://gqk8w9va.mirror.aliyuncs.com/\n```\n\n8.查看docker版本\ndocker version\n```\nClient:\n Version:           18.09.9\n API version:       1.39\n Go version:        go1.11.13\n Git commit:        039a7df9ba\n Built:             Wed Sep  4 16:51:21 2019\n OS/Arch:           linux/amd64\n Experimental:      false\n\nServer: Docker Engine - Community\n Engine:\n  Version:          18.09.9\n  API version:      1.39 (minimum version 1.12)\n  Go version:       go1.11.13\n  Git commit:       039a7df\n  Built:            Wed Sep  4 16:22:32 2019\n  OS/Arch:          linux/amd64\n  Experimental:     false\n```\n* 若有需要网络代理的，请在docker中配置网络代理，否则docker无法下载镜像\n## 修改docker Cgroup Driver为systemd\n```\n#修改docker Cgroup Driver为systemd\n将/usr/lib/systemd/system/docker.service文件中的这一行 ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock\n\n修改为 ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock --exec-opt native.cgroupdriver=systemd\n\n如果不修改，在添加 worker 节点时可能会碰到如下错误\n[WARNING IsDockerSystemdCheck]: detected \"cgroupfs\" as the Docker cgroup driver. The recommended driver is \"systemd\". \nPlease follow the guide at https://kubernetes.io/docs/setup/cri/\n\n\n//使用如下命令修改  \nsed -i.bak \"s#^ExecStart=/usr/bin/dockerd.*#ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock --exec-opt native.cgroupdriver=systemd#g\" /usr/lib/systemd/system/docker.service\n\n//重启docker\nsystemctl daemon-reload && systemctl restart docker\n```\n## 安装Kubeadm\n需要科学上网\n```\ncat >/etc/yum.repos.d/kubernetes.repo<<EOF\n[kubernetes]\nname=Kubernetes\nbaseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64\nenabled=1\ngpgcheck=1\nrepo_gpgcheck=1\ngpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg\n        https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg\nEOF\n```\n使用阿里云yum源\n```\ncat >/etc/yum.repos.d/kubernetes.repo <<EOF\n[kubernetes]\nname=Kubernetes\nbaseurl=http://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64\nenabled=1\ngpgcheck=0\nrepo_gpgcheck=0\ngpgkey=http://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg\n        http://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg\nEOF\n```\n安装 kubeadm、kubelet、kubectl(阿里云yum源会随官方更新最新版，因此指定版本)\n```\n//安装1.16.9版本\nyum -y install kubelet-1.16.9 kubeadm-1.16.9 kubectl-1.16.9\n\n//查看版本\nkubeadm version\n\nkubeadm version: &version.Info{Major:\"1\", Minor:\"16\", GitVersion:\"v1.16.9\", GitCommit:\"a17149e1a189050796ced469dbd78d380f2ed5ef\", GitTreeState:\"clean\", BuildDate:\"2020-04-16T11:42:30Z\", GoVersion:\"go1.13.9\", Compiler:\"gc\", Platform:\"linux/amd64\"}\n```\n设置kubelet开机自启\n```\nsystemctl enable kubelet\n```\n设置k8s命令自动补全\n```\nyum -y install bash-completion\nsource /usr/share/bash-completion/bash_completion\nsource <(kubectl completion bash)\necho \"source <(kubectl completion bash)\" >> ~/.bashrc\n```\n# 初始化集群\n## master节点操作，配置 kubeadm 初始化文件\n```\ncat <<EOF > ./kubeadm-config.yaml\napiVersion: kubeadm.k8s.io/v1beta2\nkind: ClusterConfiguration\nkubernetesVersion: v1.16.9\t\nimageRepository: registry.cn-hangzhou.aliyuncs.com/google_containers\n\n#master地址\ncontrolPlaneEndpoint: \"192.168.9.10:6443\"\t\nnetworking:\n  serviceSubnet: \"10.96.0.0/16\"\t\n\n  #k8s容器组所在的网段\n  podSubnet: \"10.20.0.1/16\"\t\n  dnsDomain: \"cluster.local\"\nEOF\n```\n初始化master\n```\n#kubeadm init --config=kubeadm-config.yaml --upload-certs\n完整输出结果\nkubeadm init --config=kubeadm-config.yaml\n[init] Using Kubernetes version: v1.16.9\n[preflight] Running pre-flight checks\n[preflight] Pulling images required for setting up a Kubernetes cluster\n[preflight] This might take a minute or two, depending on the speed of your internet connection\n[preflight] You can also perform this action in beforehand using 'kubeadm config images pull'\n[kubelet-start] Writing kubelet environment file with flags to file \"/var/lib/kubelet/kubeadm-flags.env\"\n[kubelet-start] Writing kubelet configuration to file \"/var/lib/kubelet/config.yaml\"\n[kubelet-start] Activating the kubelet service\n[certs] Using certificateDir folder \"/etc/kubernetes/pki\"\n[certs] Generating \"ca\" certificate and key\n[certs] Generating \"apiserver\" certificate and key\n[certs] apiserver serving cert is signed for DNS names [k8s-master kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local] and IPs [10.96.0.1 192.168.9.10 192.168.9.10]\n[certs] Generating \"apiserver-kubelet-client\" certificate and key\n[certs] Generating \"front-proxy-ca\" certificate and key\n[certs] Generating \"front-proxy-client\" certificate and key\n[certs] Generating \"etcd/ca\" certificate and key\n[certs] Generating \"etcd/server\" certificate and key\n[certs] etcd/server serving cert is signed for DNS names [k8s-master localhost] and IPs [192.168.9.10 127.0.0.1 ::1]\n[certs] Generating \"etcd/peer\" certificate and key\n[certs] etcd/peer serving cert is signed for DNS names [k8s-master localhost] and IPs [192.168.9.10 127.0.0.1 ::1]\n[certs] Generating \"etcd/healthcheck-client\" certificate and key\n[certs] Generating \"apiserver-etcd-client\" certificate and key\n[certs] Generating \"sa\" key and public key\n[kubeconfig] Using kubeconfig folder \"/etc/kubernetes\"\n[kubeconfig] Writing \"admin.conf\" kubeconfig file\n[kubeconfig] Writing \"kubelet.conf\" kubeconfig file\n[kubeconfig] Writing \"controller-manager.conf\" kubeconfig file\n[kubeconfig] Writing \"scheduler.conf\" kubeconfig file\n[control-plane] Using manifest folder \"/etc/kubernetes/manifests\"\n[control-plane] Creating static Pod manifest for \"kube-apiserver\"\n[control-plane] Creating static Pod manifest for \"kube-controller-manager\"\n[control-plane] Creating static Pod manifest for \"kube-scheduler\"\n[etcd] Creating static Pod manifest for local etcd in \"/etc/kubernetes/manifests\"\n[wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory \"/etc/kubernetes/manifests\". This can take up to 4m0s\n[apiclient] All control plane components are healthy after 16.501777 seconds\n[upload-config] Storing the configuration used in ConfigMap \"kubeadm-config\" in the \"kube-system\" Namespace\n[kubelet] Creating a ConfigMap \"kubelet-config-1.16\" in namespace kube-system with the configuration for the kubelets in the cluster\n[upload-certs] Skipping phase. Please see --upload-certs\n[mark-control-plane] Marking the node k8s-master as control-plane by adding the label \"node-role.kubernetes.io/master=''\"\n[mark-control-plane] Marking the node k8s-master as control-plane by adding the taints [node-role.kubernetes.io/master:NoSchedule]\n[bootstrap-token] Using token: px979r.mphk9ee5ya8fgy44\n[bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles\n[bootstrap-token] configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials\n[bootstrap-token] configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token\n[bootstrap-token] configured RBAC rules to allow certificate rotation for all node client certificates in the cluster\n[bootstrap-token] Creating the \"cluster-info\" ConfigMap in the \"kube-public\" namespace\n[addons] Applied essential addon: CoreDNS\n[addons] Applied essential addon: kube-proxy\n\nYour Kubernetes control-plane has initialized successfully!\n\nTo start using your cluster, you need to run the following as a regular user:\n\n  mkdir -p $HOME/.kube\n  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n  sudo chown $(id -u):$(id -g) $HOME/.kube/config\n\nYou should now deploy a pod network to the cluster.\nRun \"kubectl apply -f [podnetwork].yaml\" with one of the options listed at:\n  https://kubernetes.io/docs/concepts/cluster-administration/addons/\n\nYou can now join any number of control-plane nodes by copying certificate authorities \nand service account keys on each node and then running the following as root:\n\n  kubeadm join 192.168.9.10:6443 --token px979r.mphk9ee5ya8fgy44 \\\n    --discovery-token-ca-cert-hash sha256:5e7c7cd1cc1f86c0761e54b9380de22968b6b221cb98939c14ab2942223f6f51 \\\n    --control-plane \t  \n\nThen you can join any number of worker nodes by running the following on each as root:\n\nkubeadm join 192.168.9.10:6443 --token px979r.mphk9ee5ya8fgy44 \\\n    --discovery-token-ca-cert-hash sha256:5e7c7cd1cc1f86c0761e54b9380de22968b6b221cb98939c14ab2942223f6f51 \n```\n拷贝 kubeconfig 文件\n```\n//这里的路径为/root\nmkdir -p $HOME/.kube\ncp -i /etc/kubernetes/admin.conf $HOME/.kube/config\nchown $(id -u):$(id -g) $HOME/.kube/config\n```\n## master添加节点\nnode1和node2相同操作  \n将master节点上的$HOME/.kube/config 文件拷贝到node节点对应的文件中\n```\n1.创建目录，这里的路径为/root\nmkdir -p $HOME/.kube \n\n2.把master节点上的config文件拷贝到node1和node2的$HOME/.kube\nscp k8s-master1:~/.kube/config $HOME/.kube\n\n3.修改权限\nchown $(id -u):$(id -g) $HOME/.kube/config\n```\n将node1和node2加入到集群中  \n这里需要用到2.2中初始化master最后生成的token和sha256值\n```\n#kubeadm join 192.168.9.10:6443 --token px979r.mphk9ee5ya8fgy44     --discovery-token-ca-cert-hash sha256:5e7c7cd1cc1f86c0761e54b9380de22968b6b221cb98939c14ab2942223f6f51 \n  \n输出结果  \n[preflight] Running pre-flight checks\n\t[WARNING IsDockerSystemdCheck]: detected \"cgroupfs\" as the Docker cgroup driver. The recommended driver is \"systemd\". Please follow the guide at https://kubernetes.io/docs/setup/cri/\n[preflight] Reading configuration from the cluster...\n[preflight] FYI: You can look at this config file with 'kubectl -n kube-system get cm kubeadm-config -oyaml'\n[kubelet-start] Downloading configuration for the kubelet from the \"kubelet-config-1.16\" ConfigMap in the kube-system namespace\n[kubelet-start] Writing kubelet configuration to file \"/var/lib/kubelet/config.yaml\"\n[kubelet-start] Writing kubelet environment file with flags to file \"/var/lib/kubelet/kubeadm-flags.env\"\n[kubelet-start] Activating the kubelet service\n[kubelet-start] Waiting for the kubelet to perform the TLS Bootstrap...\n\nThis node has joined the cluster:\n* Certificate signing request was sent to apiserver and a response was received.\n* The Kubelet was informed of the new secure connection details.\n\nRun 'kubectl get nodes' on the control-plane to see this node join the cluster.\n```\n如果忘记了token和sha256值，可以在master节点使用如下命令查看\n```\n//查看token\n#kubeadm token list\nTOKEN                     TTL       EXPIRES                     USAGES                   DESCRIPTION   EXTRA GROUPS\npx979r.mphk9ee5ya8fgy44   20h       2020-03-18T13:49:48+08:00   authentication,signing   <none>        system:bootstrappers:kubeadm:default-node-token\n            \n            \n//查看sha256\n#openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -hex | sed 's/^.* //'\n5e7c7cd1cc1f86c0761e54b9380de22968b6b221cb98939c14ab2942223f6f51\n\n//同时查看token和sha256\n#kubeadm token create --print-join-command\nkubeadm join 192.168.9.10:6443 --token 9b28zg.oyt0kvvpmtrem4bg     --discovery-token-ca-cert-hash sha256:5e7c7cd1cc1f86c0761e54b9380de22968b6b221cb98939c14ab2942223f6f51\n```\nmaster节点查看node，发现状态都是NotReady，因为还没有安装网络插件，这里我们安装calio官方插件文档\n```\nkubectl get nodes\nNAME         STATUS     ROLES    AGE     VERSION\nk8s-master   NotReady   master   19m     v1.16.9\nk8s-node1    NotReady   <none>   4m10s   v1.16.9\nk8s-node2    NotReady   <none>   4m3s    v1.16.9\n```\n## master节点安装网络插件calio\n```\n//下载文件\nwget https://docs.projectcalico.org/v3.8/manifests/calico.yaml\n  \n将文件中的620行改为如下，因为在上边kubeadm-config.yaml配置文件中指定了容器组IP  620行\nvalue: \"10.20.0.1/16\"\n  \n\n//修改完成后安装calico网络插件\nkubectl apply -f calico.yaml\n\n//安装完成后稍等一会查看pods状态\nkubectl get pods -n kube-system\n\nNAME                                      READY   STATUS    RESTARTS   AGE\ncalico-kube-controllers-dc6cb64cb-8sh59   1/1     Running   0          6m22s\ncalico-node-89s9k                         1/1     Running   0          6m22s\ncalico-node-dkt7w                         1/1     Running   0          6m22s\ncalico-node-tgg2h                         1/1     Running   0          6m22s\ncoredns-667f964f9b-7hrj9                  1/1     Running   0          33m\ncoredns-667f964f9b-8q7sh                  1/1     Running   0          33m\netcd-k8s-master                           1/1     Running   0          33m\nkube-apiserver-k8s-master                 1/1     Running   0          32m\nkube-controller-manager-k8s-master        1/1     Running   0          33m\nkube-proxy-b2r5d                          1/1     Running   0          12m\nkube-proxy-nd982                          1/1     Running   0          11m\nkube-proxy-zh6cz                          1/1     Running   0          33m\nkube-scheduler-k8s-master                 1/1     Running   0          32m\n\n\n//查看node状态\n[root@k8s-master ~]# kubectl get nodes \nNAME         STATUS   ROLES    AGE     VERSION\nk8s-master   Ready    master   31m     v1.16.9\nk8s-node1    Ready    <none>   9m46s   v1.16.9\nk8s-node2    Ready    <none>   9m22s   v1.16.9\n```\n## 安装Dashboard(可选)\n下载文件及修改内容\n\n[这里查看dashboard对应的k8s版本](https://github.com/kubernetes/dashboard/releases)\n```\n//下载文件  v2.0.0-rc3是中文版本，beta8是英文版本\nwget https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0-beta8/aio/deploy/recommended.yaml\n\nwget https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0-rc3/aio/deploy/recommended.yaml  \n  \n//修改Service为NodePort类型\n42行下增加一行\nnodePort: 30001\n  \n44行下增加一行\ntype: NodePort\n  \n\n//原先内容\nspec:\n  ports:\n    - port: 443\n      targetPort: 8443\n  selector:\n    k8s-app: kubernetes-dashboard\n\n\n//修改后内容\nspec:\n  ports:\n    - port: 443\n      targetPort: 8443\n      nodePort: 30001   #增加，指定nodeport端口\n  selector:\n    k8s-app: kubernetes-dashboard\n  type: NodePort\t\t#增加，修改类型为nodeport\n```\n部署dashboard\n```\nkubectl apply -f recommended.yaml\n```\n查看dashboard的运行状态及外网访问端口\n```\n//查看dashboard运行状态\n#kubectl get pods -n kubernetes-dashboard -l k8s-app=kubernetes-dashboard\nNAME                                    READY   STATUS    RESTARTS   AGE\nkubernetes-dashboard-5996555fd8-2ppc5   1/1     Running   0          8m16s\n\n//查看dashboard外网访问端口，命名空间为kubernetes-dashboard\n#kubectl get svc -n kubernetes-dashboard -l k8s-app=kubernetes-dashboard\nkubectl get svc -n kubernetes-dashboard -l k8s-app=kubernetes-dashboard\nNAME                   TYPE       CLUSTER-IP      EXTERNAL-IP   PORT(S)         AGE\nkubernetes-dashboard   NodePort   10.96.142.172   <none>        443:30001/TCP   8m37s\n```\n通过上边的30001端口访问dashboard，注意是https\n> k8s1.16.9这个版本中，使用的dashboard版本是2.0.0-beta8，只有火狐浏览器可以访问，其余浏览器都不能访问，会报错\n```\n您的连接不是私密连接\n```\n> 使用火狐浏览器访问，由于 dashboard 默认是自建的 https 证书，该证书是不受浏览器信任的，所以我们需要强制跳转就可以了\n\n然后创建一个具有全局所有权限的用户来登录Dashboard\n```\n//编辑admin.yaml文件\ncat > admin.yaml <<EOF\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io/v1beta1\nmetadata:\n  name: admin\n  annotations:\n    rbac.authorization.kubernetes.io/autoupdate: \"true\"\nroleRef:\n  kind: ClusterRole\n  name: cluster-admin\n  apiGroup: rbac.authorization.k8s.io\nsubjects:\n- kind: ServiceAccount\n  name: admin\n  namespace: kube-system\n\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: admin\n  namespace: kube-system\n  labels:\n    kubernetes.io/cluster-service: \"true\"\n    addonmanager.kubernetes.io/mode: Reconcile\nEOF\n\n//直接创建\nkubectl apply -f admin.yaml\n\n//查看token\nkubectl get secret -n kube-system|grep admin-token\n\nadmin-token-j7sfh                                kubernetes.io/service-account-token   3      23s\n\n\n//获取base64解码后的字符串，注意需要用到上边命令查看到的token，会生成很长的一串字符串\nkubectl get secret admin-token-j7sfh -o jsonpath={.data.token} -n kube-system |base64 -d\n\n#直接用这条命令搞定\nkubectl get secret `kubectl get secret -n kube-system|grep admin-token|awk '{print $1}'` -o jsonpath={.data.token} -n kube-system |base64 -d && echo\n```\n\n到此，使用kubeadm安装k8s 1.16.9完成！！！\n\n# 参考\n[在 Kubernetes集群中 安装 KubeSphere2.1](https://kubesphere.com.cn/forum/d/1272-kubeadm-k8s-kubesphere-2-1-1)","source":"_posts/2020-09-04-centos-install-k8s.md","raw":"---\nlayout: post\ntitle: \"在centos7上使用kubeadm搭建 v1.16.9版本Kubernetes集群\"\ndate: 2020-09-04\nexcerpt: \"在centos上使用一键安装工具kubeadm安装kubernete环境，摆脱繁琐的k8s配置\"\ntags: [linux, kubernetes, centos]\ncomments: true\n---\n\n# 环境准备\n## 实验环境\n|角色|IP地址|主机名|docker版本|硬件配置|系统|内核|\n|:----:|:----:|:----:|:----:|:----:|:----:|:----:|\n|master|192.168.9.10|k8s-master|18.09.9|2c4g|CentOS7.7|3.10.0-1062.el7.x86_64|\nnode1|192.168.9.13|k8s-node1|18.09.9|2c6g|CentOS7.7|3.10.0-1062.el7.x86_64\nnode2|192.168.9.14|k8s-node2|18.09.9|2c6g|CentOS7.7|3.10.0-1062.el7.x86_64\n## 每个节点配置host信息\n```\ncat >> /etc/hosts <<EOF\n192.168.9.10 k8s-master\n192.168.9.13 k8s-node1\n192.168.9.14 k8s-node2\nEOF\n```\n## 禁用防火墙和selinux\n```\n//禁用防火墙\nsystemctl stop firewalld && systemctl disable firewalld\n\n//禁用selinux\n#临时修改\nsetenforce 0\n\n#永久修改，重启服务器后生效\nsed -i '7s/enforcing/disabled/' /etc/selinux/config\n```\n## 创建```/etc/sysctl.d/k8s.conf```文件，添加如下内容\n```\n//向文件中写入以下内容\ncat >/etc/sysctl.d/k8s.conf <<EOF\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1\nnet.ipv4.ip_forward = 1\nEOF\n\n//执行以下命令生效\nmodprobe br_netfilter && sysctl -p /etc/sysctl.d/k8s.conf\n```\n## 安装ipvs\n脚本创建了的```/etc/sysconfig/modules/ipvs.modules```文件，保证在节点重启后能自动加载所需模块。使用```lsmod | grep -e ip_vs -e nf_conntrack_ipv4```命令查看是否已经正确加载所需的内核模块\n```\n//向文件中写入以下内容\ncat > /etc/sysconfig/modules/ipvs.modules <<EOF\n#!/bin/bash\nmodprobe -- ip_vs\nmodprobe -- ip_vs_rr\nmodprobe -- ip_vs_wrr\nmodprobe -- ip_vs_sh\nmodprobe -- nf_conntrack_ipv4\nEOF\n\n//修改权限以及查看是否已经正确加载所需的内核模块\nchmod 755 /etc/sysconfig/modules/ipvs.modules && bash /etc/sysconfig/modules/ipvs.modules && lsmod | grep -e ip_vs -e nf_conntrack_ipv4\n\nnf_conntrack_ipv4      15053  0 \nnf_defrag_ipv4         12729  1 nf_conntrack_ipv4\nip_vs_sh               12688  0 \nip_vs_wrr              12697  0 \nip_vs_rr               12600  0 \nip_vs                 145497  6 ip_vs_rr,ip_vs_sh,ip_vs_wrr\nnf_conntrack          133095  2 ip_vs,nf_conntrack_ipv4\nlibcrc32c              12644  3 xfs,ip_vs,nf_conntrack\n```\n安装ipset和ipvsadm(便于查看 ipvs 的代理规则)\n```\nyum -y install ipset ipvsadm\n```\n## 关闭swap分区\n修改```/etc/fstab```文件，注释掉 SWAP 的自动挂载，使用```free -m```确认 swap 已经关闭\n```\n//手动关闭swap\nswapoff -a\n\n//修改fstab文件，注释swap自动挂载\nsed -i '/^\\/dev\\/mapper\\/centos-swap/c#/dev/mapper/centos-swap swap                    swap    defaults        0 0' /etc/fstab\n\n//查看swap是否关闭\nfree -m\n\ntotal        used        free      shared  buff/cache   available\nMem:           1994         682         612           9         699        1086\nSwap:             0           0           0\n```\nswappiness 参数调整，修改```/etc/sysctl.d/k8s.conf```添加下面一行\n```\ncat >>/etc/sysctl.d/k8s.conf <<EOF\nvm.swappiness=0\nEOF\n\n//使配置生效\nsysctl -p /etc/sysctl.d/k8s.conf\n\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1\nnet.ipv4.ip_forward = 1\nvm.swappiness = 0\n```\n## 安装docker18.09.9\n1.添加阿里云yum源\n```\nyum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n```\n2.查看可用版本\n```\nyum list docker-ce --showduplicates | sort -r\n\n已加载插件：fastestmirror, langpacks\n可安装的软件包\n * updates: mirrors.aliyun.com\nLoading mirror speeds from cached hostfile\n * extras: mirrors.aliyun.com\ndocker-ce.x86_64            3:19.03.5-3.el7                     docker-ce-stable\ndocker-ce.x86_64            3:19.03.4-3.el7                     docker-ce-stable\n。。。。。。\ndocker-ce.x86_64            3:18.09.9-3.el7                     docker-ce-stable\ndocker-ce.x86_64            3:18.09.8-3.el7                     docker-ce-stable\ndocker-ce.x86_64            3:18.09.7-3.el7                     docker-ce-stable\ndocker-ce.x86_64            3:18.09.6-3.el7                     docker-ce-stable\n。。。。。。\n```\n    \n3.安装docker18.09.9\n```\nyum -y install docker-ce-18.09.9-3.el7 docker-ce-cli-18.09.9\n```\n4.启动docker并设置开机自启\n```\nsystemctl enable docker && systemctl start docker\n```\n5.配置阿里云docker镜像加速\n```\ncat > /etc/docker/daemon.json <<-'EOF'\n{\n  \"registry-mirrors\": [\"https://gqk8w9va.mirror.aliyuncs.com\"]\n}\nEOF\n```\n6.配置完后重启docker\n```\nsystemctl restart docker\n```\n7.查看加速\n```\ndocker info\n\n找到Registry Mirrors一行\nRegistry Mirrors:\n https://gqk8w9va.mirror.aliyuncs.com/\n```\n\n8.查看docker版本\ndocker version\n```\nClient:\n Version:           18.09.9\n API version:       1.39\n Go version:        go1.11.13\n Git commit:        039a7df9ba\n Built:             Wed Sep  4 16:51:21 2019\n OS/Arch:           linux/amd64\n Experimental:      false\n\nServer: Docker Engine - Community\n Engine:\n  Version:          18.09.9\n  API version:      1.39 (minimum version 1.12)\n  Go version:       go1.11.13\n  Git commit:       039a7df\n  Built:            Wed Sep  4 16:22:32 2019\n  OS/Arch:          linux/amd64\n  Experimental:     false\n```\n* 若有需要网络代理的，请在docker中配置网络代理，否则docker无法下载镜像\n## 修改docker Cgroup Driver为systemd\n```\n#修改docker Cgroup Driver为systemd\n将/usr/lib/systemd/system/docker.service文件中的这一行 ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock\n\n修改为 ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock --exec-opt native.cgroupdriver=systemd\n\n如果不修改，在添加 worker 节点时可能会碰到如下错误\n[WARNING IsDockerSystemdCheck]: detected \"cgroupfs\" as the Docker cgroup driver. The recommended driver is \"systemd\". \nPlease follow the guide at https://kubernetes.io/docs/setup/cri/\n\n\n//使用如下命令修改  \nsed -i.bak \"s#^ExecStart=/usr/bin/dockerd.*#ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock --exec-opt native.cgroupdriver=systemd#g\" /usr/lib/systemd/system/docker.service\n\n//重启docker\nsystemctl daemon-reload && systemctl restart docker\n```\n## 安装Kubeadm\n需要科学上网\n```\ncat >/etc/yum.repos.d/kubernetes.repo<<EOF\n[kubernetes]\nname=Kubernetes\nbaseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64\nenabled=1\ngpgcheck=1\nrepo_gpgcheck=1\ngpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg\n        https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg\nEOF\n```\n使用阿里云yum源\n```\ncat >/etc/yum.repos.d/kubernetes.repo <<EOF\n[kubernetes]\nname=Kubernetes\nbaseurl=http://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64\nenabled=1\ngpgcheck=0\nrepo_gpgcheck=0\ngpgkey=http://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg\n        http://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg\nEOF\n```\n安装 kubeadm、kubelet、kubectl(阿里云yum源会随官方更新最新版，因此指定版本)\n```\n//安装1.16.9版本\nyum -y install kubelet-1.16.9 kubeadm-1.16.9 kubectl-1.16.9\n\n//查看版本\nkubeadm version\n\nkubeadm version: &version.Info{Major:\"1\", Minor:\"16\", GitVersion:\"v1.16.9\", GitCommit:\"a17149e1a189050796ced469dbd78d380f2ed5ef\", GitTreeState:\"clean\", BuildDate:\"2020-04-16T11:42:30Z\", GoVersion:\"go1.13.9\", Compiler:\"gc\", Platform:\"linux/amd64\"}\n```\n设置kubelet开机自启\n```\nsystemctl enable kubelet\n```\n设置k8s命令自动补全\n```\nyum -y install bash-completion\nsource /usr/share/bash-completion/bash_completion\nsource <(kubectl completion bash)\necho \"source <(kubectl completion bash)\" >> ~/.bashrc\n```\n# 初始化集群\n## master节点操作，配置 kubeadm 初始化文件\n```\ncat <<EOF > ./kubeadm-config.yaml\napiVersion: kubeadm.k8s.io/v1beta2\nkind: ClusterConfiguration\nkubernetesVersion: v1.16.9\t\nimageRepository: registry.cn-hangzhou.aliyuncs.com/google_containers\n\n#master地址\ncontrolPlaneEndpoint: \"192.168.9.10:6443\"\t\nnetworking:\n  serviceSubnet: \"10.96.0.0/16\"\t\n\n  #k8s容器组所在的网段\n  podSubnet: \"10.20.0.1/16\"\t\n  dnsDomain: \"cluster.local\"\nEOF\n```\n初始化master\n```\n#kubeadm init --config=kubeadm-config.yaml --upload-certs\n完整输出结果\nkubeadm init --config=kubeadm-config.yaml\n[init] Using Kubernetes version: v1.16.9\n[preflight] Running pre-flight checks\n[preflight] Pulling images required for setting up a Kubernetes cluster\n[preflight] This might take a minute or two, depending on the speed of your internet connection\n[preflight] You can also perform this action in beforehand using 'kubeadm config images pull'\n[kubelet-start] Writing kubelet environment file with flags to file \"/var/lib/kubelet/kubeadm-flags.env\"\n[kubelet-start] Writing kubelet configuration to file \"/var/lib/kubelet/config.yaml\"\n[kubelet-start] Activating the kubelet service\n[certs] Using certificateDir folder \"/etc/kubernetes/pki\"\n[certs] Generating \"ca\" certificate and key\n[certs] Generating \"apiserver\" certificate and key\n[certs] apiserver serving cert is signed for DNS names [k8s-master kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local] and IPs [10.96.0.1 192.168.9.10 192.168.9.10]\n[certs] Generating \"apiserver-kubelet-client\" certificate and key\n[certs] Generating \"front-proxy-ca\" certificate and key\n[certs] Generating \"front-proxy-client\" certificate and key\n[certs] Generating \"etcd/ca\" certificate and key\n[certs] Generating \"etcd/server\" certificate and key\n[certs] etcd/server serving cert is signed for DNS names [k8s-master localhost] and IPs [192.168.9.10 127.0.0.1 ::1]\n[certs] Generating \"etcd/peer\" certificate and key\n[certs] etcd/peer serving cert is signed for DNS names [k8s-master localhost] and IPs [192.168.9.10 127.0.0.1 ::1]\n[certs] Generating \"etcd/healthcheck-client\" certificate and key\n[certs] Generating \"apiserver-etcd-client\" certificate and key\n[certs] Generating \"sa\" key and public key\n[kubeconfig] Using kubeconfig folder \"/etc/kubernetes\"\n[kubeconfig] Writing \"admin.conf\" kubeconfig file\n[kubeconfig] Writing \"kubelet.conf\" kubeconfig file\n[kubeconfig] Writing \"controller-manager.conf\" kubeconfig file\n[kubeconfig] Writing \"scheduler.conf\" kubeconfig file\n[control-plane] Using manifest folder \"/etc/kubernetes/manifests\"\n[control-plane] Creating static Pod manifest for \"kube-apiserver\"\n[control-plane] Creating static Pod manifest for \"kube-controller-manager\"\n[control-plane] Creating static Pod manifest for \"kube-scheduler\"\n[etcd] Creating static Pod manifest for local etcd in \"/etc/kubernetes/manifests\"\n[wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory \"/etc/kubernetes/manifests\". This can take up to 4m0s\n[apiclient] All control plane components are healthy after 16.501777 seconds\n[upload-config] Storing the configuration used in ConfigMap \"kubeadm-config\" in the \"kube-system\" Namespace\n[kubelet] Creating a ConfigMap \"kubelet-config-1.16\" in namespace kube-system with the configuration for the kubelets in the cluster\n[upload-certs] Skipping phase. Please see --upload-certs\n[mark-control-plane] Marking the node k8s-master as control-plane by adding the label \"node-role.kubernetes.io/master=''\"\n[mark-control-plane] Marking the node k8s-master as control-plane by adding the taints [node-role.kubernetes.io/master:NoSchedule]\n[bootstrap-token] Using token: px979r.mphk9ee5ya8fgy44\n[bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles\n[bootstrap-token] configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials\n[bootstrap-token] configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token\n[bootstrap-token] configured RBAC rules to allow certificate rotation for all node client certificates in the cluster\n[bootstrap-token] Creating the \"cluster-info\" ConfigMap in the \"kube-public\" namespace\n[addons] Applied essential addon: CoreDNS\n[addons] Applied essential addon: kube-proxy\n\nYour Kubernetes control-plane has initialized successfully!\n\nTo start using your cluster, you need to run the following as a regular user:\n\n  mkdir -p $HOME/.kube\n  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n  sudo chown $(id -u):$(id -g) $HOME/.kube/config\n\nYou should now deploy a pod network to the cluster.\nRun \"kubectl apply -f [podnetwork].yaml\" with one of the options listed at:\n  https://kubernetes.io/docs/concepts/cluster-administration/addons/\n\nYou can now join any number of control-plane nodes by copying certificate authorities \nand service account keys on each node and then running the following as root:\n\n  kubeadm join 192.168.9.10:6443 --token px979r.mphk9ee5ya8fgy44 \\\n    --discovery-token-ca-cert-hash sha256:5e7c7cd1cc1f86c0761e54b9380de22968b6b221cb98939c14ab2942223f6f51 \\\n    --control-plane \t  \n\nThen you can join any number of worker nodes by running the following on each as root:\n\nkubeadm join 192.168.9.10:6443 --token px979r.mphk9ee5ya8fgy44 \\\n    --discovery-token-ca-cert-hash sha256:5e7c7cd1cc1f86c0761e54b9380de22968b6b221cb98939c14ab2942223f6f51 \n```\n拷贝 kubeconfig 文件\n```\n//这里的路径为/root\nmkdir -p $HOME/.kube\ncp -i /etc/kubernetes/admin.conf $HOME/.kube/config\nchown $(id -u):$(id -g) $HOME/.kube/config\n```\n## master添加节点\nnode1和node2相同操作  \n将master节点上的$HOME/.kube/config 文件拷贝到node节点对应的文件中\n```\n1.创建目录，这里的路径为/root\nmkdir -p $HOME/.kube \n\n2.把master节点上的config文件拷贝到node1和node2的$HOME/.kube\nscp k8s-master1:~/.kube/config $HOME/.kube\n\n3.修改权限\nchown $(id -u):$(id -g) $HOME/.kube/config\n```\n将node1和node2加入到集群中  \n这里需要用到2.2中初始化master最后生成的token和sha256值\n```\n#kubeadm join 192.168.9.10:6443 --token px979r.mphk9ee5ya8fgy44     --discovery-token-ca-cert-hash sha256:5e7c7cd1cc1f86c0761e54b9380de22968b6b221cb98939c14ab2942223f6f51 \n  \n输出结果  \n[preflight] Running pre-flight checks\n\t[WARNING IsDockerSystemdCheck]: detected \"cgroupfs\" as the Docker cgroup driver. The recommended driver is \"systemd\". Please follow the guide at https://kubernetes.io/docs/setup/cri/\n[preflight] Reading configuration from the cluster...\n[preflight] FYI: You can look at this config file with 'kubectl -n kube-system get cm kubeadm-config -oyaml'\n[kubelet-start] Downloading configuration for the kubelet from the \"kubelet-config-1.16\" ConfigMap in the kube-system namespace\n[kubelet-start] Writing kubelet configuration to file \"/var/lib/kubelet/config.yaml\"\n[kubelet-start] Writing kubelet environment file with flags to file \"/var/lib/kubelet/kubeadm-flags.env\"\n[kubelet-start] Activating the kubelet service\n[kubelet-start] Waiting for the kubelet to perform the TLS Bootstrap...\n\nThis node has joined the cluster:\n* Certificate signing request was sent to apiserver and a response was received.\n* The Kubelet was informed of the new secure connection details.\n\nRun 'kubectl get nodes' on the control-plane to see this node join the cluster.\n```\n如果忘记了token和sha256值，可以在master节点使用如下命令查看\n```\n//查看token\n#kubeadm token list\nTOKEN                     TTL       EXPIRES                     USAGES                   DESCRIPTION   EXTRA GROUPS\npx979r.mphk9ee5ya8fgy44   20h       2020-03-18T13:49:48+08:00   authentication,signing   <none>        system:bootstrappers:kubeadm:default-node-token\n            \n            \n//查看sha256\n#openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -hex | sed 's/^.* //'\n5e7c7cd1cc1f86c0761e54b9380de22968b6b221cb98939c14ab2942223f6f51\n\n//同时查看token和sha256\n#kubeadm token create --print-join-command\nkubeadm join 192.168.9.10:6443 --token 9b28zg.oyt0kvvpmtrem4bg     --discovery-token-ca-cert-hash sha256:5e7c7cd1cc1f86c0761e54b9380de22968b6b221cb98939c14ab2942223f6f51\n```\nmaster节点查看node，发现状态都是NotReady，因为还没有安装网络插件，这里我们安装calio官方插件文档\n```\nkubectl get nodes\nNAME         STATUS     ROLES    AGE     VERSION\nk8s-master   NotReady   master   19m     v1.16.9\nk8s-node1    NotReady   <none>   4m10s   v1.16.9\nk8s-node2    NotReady   <none>   4m3s    v1.16.9\n```\n## master节点安装网络插件calio\n```\n//下载文件\nwget https://docs.projectcalico.org/v3.8/manifests/calico.yaml\n  \n将文件中的620行改为如下，因为在上边kubeadm-config.yaml配置文件中指定了容器组IP  620行\nvalue: \"10.20.0.1/16\"\n  \n\n//修改完成后安装calico网络插件\nkubectl apply -f calico.yaml\n\n//安装完成后稍等一会查看pods状态\nkubectl get pods -n kube-system\n\nNAME                                      READY   STATUS    RESTARTS   AGE\ncalico-kube-controllers-dc6cb64cb-8sh59   1/1     Running   0          6m22s\ncalico-node-89s9k                         1/1     Running   0          6m22s\ncalico-node-dkt7w                         1/1     Running   0          6m22s\ncalico-node-tgg2h                         1/1     Running   0          6m22s\ncoredns-667f964f9b-7hrj9                  1/1     Running   0          33m\ncoredns-667f964f9b-8q7sh                  1/1     Running   0          33m\netcd-k8s-master                           1/1     Running   0          33m\nkube-apiserver-k8s-master                 1/1     Running   0          32m\nkube-controller-manager-k8s-master        1/1     Running   0          33m\nkube-proxy-b2r5d                          1/1     Running   0          12m\nkube-proxy-nd982                          1/1     Running   0          11m\nkube-proxy-zh6cz                          1/1     Running   0          33m\nkube-scheduler-k8s-master                 1/1     Running   0          32m\n\n\n//查看node状态\n[root@k8s-master ~]# kubectl get nodes \nNAME         STATUS   ROLES    AGE     VERSION\nk8s-master   Ready    master   31m     v1.16.9\nk8s-node1    Ready    <none>   9m46s   v1.16.9\nk8s-node2    Ready    <none>   9m22s   v1.16.9\n```\n## 安装Dashboard(可选)\n下载文件及修改内容\n\n[这里查看dashboard对应的k8s版本](https://github.com/kubernetes/dashboard/releases)\n```\n//下载文件  v2.0.0-rc3是中文版本，beta8是英文版本\nwget https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0-beta8/aio/deploy/recommended.yaml\n\nwget https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0-rc3/aio/deploy/recommended.yaml  \n  \n//修改Service为NodePort类型\n42行下增加一行\nnodePort: 30001\n  \n44行下增加一行\ntype: NodePort\n  \n\n//原先内容\nspec:\n  ports:\n    - port: 443\n      targetPort: 8443\n  selector:\n    k8s-app: kubernetes-dashboard\n\n\n//修改后内容\nspec:\n  ports:\n    - port: 443\n      targetPort: 8443\n      nodePort: 30001   #增加，指定nodeport端口\n  selector:\n    k8s-app: kubernetes-dashboard\n  type: NodePort\t\t#增加，修改类型为nodeport\n```\n部署dashboard\n```\nkubectl apply -f recommended.yaml\n```\n查看dashboard的运行状态及外网访问端口\n```\n//查看dashboard运行状态\n#kubectl get pods -n kubernetes-dashboard -l k8s-app=kubernetes-dashboard\nNAME                                    READY   STATUS    RESTARTS   AGE\nkubernetes-dashboard-5996555fd8-2ppc5   1/1     Running   0          8m16s\n\n//查看dashboard外网访问端口，命名空间为kubernetes-dashboard\n#kubectl get svc -n kubernetes-dashboard -l k8s-app=kubernetes-dashboard\nkubectl get svc -n kubernetes-dashboard -l k8s-app=kubernetes-dashboard\nNAME                   TYPE       CLUSTER-IP      EXTERNAL-IP   PORT(S)         AGE\nkubernetes-dashboard   NodePort   10.96.142.172   <none>        443:30001/TCP   8m37s\n```\n通过上边的30001端口访问dashboard，注意是https\n> k8s1.16.9这个版本中，使用的dashboard版本是2.0.0-beta8，只有火狐浏览器可以访问，其余浏览器都不能访问，会报错\n```\n您的连接不是私密连接\n```\n> 使用火狐浏览器访问，由于 dashboard 默认是自建的 https 证书，该证书是不受浏览器信任的，所以我们需要强制跳转就可以了\n\n然后创建一个具有全局所有权限的用户来登录Dashboard\n```\n//编辑admin.yaml文件\ncat > admin.yaml <<EOF\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io/v1beta1\nmetadata:\n  name: admin\n  annotations:\n    rbac.authorization.kubernetes.io/autoupdate: \"true\"\nroleRef:\n  kind: ClusterRole\n  name: cluster-admin\n  apiGroup: rbac.authorization.k8s.io\nsubjects:\n- kind: ServiceAccount\n  name: admin\n  namespace: kube-system\n\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: admin\n  namespace: kube-system\n  labels:\n    kubernetes.io/cluster-service: \"true\"\n    addonmanager.kubernetes.io/mode: Reconcile\nEOF\n\n//直接创建\nkubectl apply -f admin.yaml\n\n//查看token\nkubectl get secret -n kube-system|grep admin-token\n\nadmin-token-j7sfh                                kubernetes.io/service-account-token   3      23s\n\n\n//获取base64解码后的字符串，注意需要用到上边命令查看到的token，会生成很长的一串字符串\nkubectl get secret admin-token-j7sfh -o jsonpath={.data.token} -n kube-system |base64 -d\n\n#直接用这条命令搞定\nkubectl get secret `kubectl get secret -n kube-system|grep admin-token|awk '{print $1}'` -o jsonpath={.data.token} -n kube-system |base64 -d && echo\n```\n\n到此，使用kubeadm安装k8s 1.16.9完成！！！\n\n# 参考\n[在 Kubernetes集群中 安装 KubeSphere2.1](https://kubesphere.com.cn/forum/d/1272-kubeadm-k8s-kubesphere-2-1-1)","slug":"2020-09-04-centos-install-k8s","published":1,"updated":"2020-10-09T03:00:57.175Z","photos":[],"link":"","_id":"ckgkk27v6003bkcv033x15kpz","content":"<h1 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h1><h2 id=\"实验环境\"><a href=\"#实验环境\" class=\"headerlink\" title=\"实验环境\"></a>实验环境</h2><table>\n<thead>\n<tr>\n<th align=\"center\">角色</th>\n<th align=\"center\">IP地址</th>\n<th align=\"center\">主机名</th>\n<th align=\"center\">docker版本</th>\n<th align=\"center\">硬件配置</th>\n<th align=\"center\">系统</th>\n<th align=\"center\">内核</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">master</td>\n<td align=\"center\">192.168.9.10</td>\n<td align=\"center\">k8s-master</td>\n<td align=\"center\">18.09.9</td>\n<td align=\"center\">2c4g</td>\n<td align=\"center\">CentOS7.7</td>\n<td align=\"center\">3.10.0-1062.el7.x86_64</td>\n</tr>\n<tr>\n<td align=\"center\">node1</td>\n<td align=\"center\">192.168.9.13</td>\n<td align=\"center\">k8s-node1</td>\n<td align=\"center\">18.09.9</td>\n<td align=\"center\">2c6g</td>\n<td align=\"center\">CentOS7.7</td>\n<td align=\"center\">3.10.0-1062.el7.x86_64</td>\n</tr>\n<tr>\n<td align=\"center\">node2</td>\n<td align=\"center\">192.168.9.14</td>\n<td align=\"center\">k8s-node2</td>\n<td align=\"center\">18.09.9</td>\n<td align=\"center\">2c6g</td>\n<td align=\"center\">CentOS7.7</td>\n<td align=\"center\">3.10.0-1062.el7.x86_64</td>\n</tr>\n</tbody></table>\n<h2 id=\"每个节点配置host信息\"><a href=\"#每个节点配置host信息\" class=\"headerlink\" title=\"每个节点配置host信息\"></a>每个节点配置host信息</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &gt;&gt; &#x2F;etc&#x2F;hosts &lt;&lt;EOF</span><br><span class=\"line\">192.168.9.10 k8s-master</span><br><span class=\"line\">192.168.9.13 k8s-node1</span><br><span class=\"line\">192.168.9.14 k8s-node2</span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure>\n<h2 id=\"禁用防火墙和selinux\"><a href=\"#禁用防火墙和selinux\" class=\"headerlink\" title=\"禁用防火墙和selinux\"></a>禁用防火墙和selinux</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;禁用防火墙</span><br><span class=\"line\">systemctl stop firewalld &amp;&amp; systemctl disable firewalld</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;禁用selinux</span><br><span class=\"line\">#临时修改</span><br><span class=\"line\">setenforce 0</span><br><span class=\"line\"></span><br><span class=\"line\">#永久修改，重启服务器后生效</span><br><span class=\"line\">sed -i &#39;7s&#x2F;enforcing&#x2F;disabled&#x2F;&#39; &#x2F;etc&#x2F;selinux&#x2F;config</span><br></pre></td></tr></table></figure>\n<h2 id=\"创建-etc-sysctl-d-k8s-conf文件，添加如下内容\"><a href=\"#创建-etc-sysctl-d-k8s-conf文件，添加如下内容\" class=\"headerlink\" title=\"创建/etc/sysctl.d/k8s.conf文件，添加如下内容\"></a>创建<code>/etc/sysctl.d/k8s.conf</code>文件，添加如下内容</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;向文件中写入以下内容</span><br><span class=\"line\">cat &gt;&#x2F;etc&#x2F;sysctl.d&#x2F;k8s.conf &lt;&lt;EOF</span><br><span class=\"line\">net.bridge.bridge-nf-call-ip6tables &#x3D; 1</span><br><span class=\"line\">net.bridge.bridge-nf-call-iptables &#x3D; 1</span><br><span class=\"line\">net.ipv4.ip_forward &#x3D; 1</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;执行以下命令生效</span><br><span class=\"line\">modprobe br_netfilter &amp;&amp; sysctl -p &#x2F;etc&#x2F;sysctl.d&#x2F;k8s.conf</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装ipvs\"><a href=\"#安装ipvs\" class=\"headerlink\" title=\"安装ipvs\"></a>安装ipvs</h2><p>脚本创建了的<code>/etc/sysconfig/modules/ipvs.modules</code>文件，保证在节点重启后能自动加载所需模块。使用<code>lsmod | grep -e ip_vs -e nf_conntrack_ipv4</code>命令查看是否已经正确加载所需的内核模块</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;向文件中写入以下内容</span><br><span class=\"line\">cat &gt; &#x2F;etc&#x2F;sysconfig&#x2F;modules&#x2F;ipvs.modules &lt;&lt;EOF</span><br><span class=\"line\">#!&#x2F;bin&#x2F;bash</span><br><span class=\"line\">modprobe -- ip_vs</span><br><span class=\"line\">modprobe -- ip_vs_rr</span><br><span class=\"line\">modprobe -- ip_vs_wrr</span><br><span class=\"line\">modprobe -- ip_vs_sh</span><br><span class=\"line\">modprobe -- nf_conntrack_ipv4</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;修改权限以及查看是否已经正确加载所需的内核模块</span><br><span class=\"line\">chmod 755 &#x2F;etc&#x2F;sysconfig&#x2F;modules&#x2F;ipvs.modules &amp;&amp; bash &#x2F;etc&#x2F;sysconfig&#x2F;modules&#x2F;ipvs.modules &amp;&amp; lsmod | grep -e ip_vs -e nf_conntrack_ipv4</span><br><span class=\"line\"></span><br><span class=\"line\">nf_conntrack_ipv4      15053  0 </span><br><span class=\"line\">nf_defrag_ipv4         12729  1 nf_conntrack_ipv4</span><br><span class=\"line\">ip_vs_sh               12688  0 </span><br><span class=\"line\">ip_vs_wrr              12697  0 </span><br><span class=\"line\">ip_vs_rr               12600  0 </span><br><span class=\"line\">ip_vs                 145497  6 ip_vs_rr,ip_vs_sh,ip_vs_wrr</span><br><span class=\"line\">nf_conntrack          133095  2 ip_vs,nf_conntrack_ipv4</span><br><span class=\"line\">libcrc32c              12644  3 xfs,ip_vs,nf_conntrack</span><br></pre></td></tr></table></figure>\n<p>安装ipset和ipvsadm(便于查看 ipvs 的代理规则)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install ipset ipvsadm</span><br></pre></td></tr></table></figure>\n<h2 id=\"关闭swap分区\"><a href=\"#关闭swap分区\" class=\"headerlink\" title=\"关闭swap分区\"></a>关闭swap分区</h2><p>修改<code>/etc/fstab</code>文件，注释掉 SWAP 的自动挂载，使用<code>free -m</code>确认 swap 已经关闭</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;手动关闭swap</span><br><span class=\"line\">swapoff -a</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;修改fstab文件，注释swap自动挂载</span><br><span class=\"line\">sed -i &#39;&#x2F;^\\&#x2F;dev\\&#x2F;mapper\\&#x2F;centos-swap&#x2F;c#&#x2F;dev&#x2F;mapper&#x2F;centos-swap swap                    swap    defaults        0 0&#39; &#x2F;etc&#x2F;fstab</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;查看swap是否关闭</span><br><span class=\"line\">free -m</span><br><span class=\"line\"></span><br><span class=\"line\">total        used        free      shared  buff&#x2F;cache   available</span><br><span class=\"line\">Mem:           1994         682         612           9         699        1086</span><br><span class=\"line\">Swap:             0           0           0</span><br></pre></td></tr></table></figure>\n<p>swappiness 参数调整，修改<code>/etc/sysctl.d/k8s.conf</code>添加下面一行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &gt;&gt;&#x2F;etc&#x2F;sysctl.d&#x2F;k8s.conf &lt;&lt;EOF</span><br><span class=\"line\">vm.swappiness&#x3D;0</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;使配置生效</span><br><span class=\"line\">sysctl -p &#x2F;etc&#x2F;sysctl.d&#x2F;k8s.conf</span><br><span class=\"line\"></span><br><span class=\"line\">net.bridge.bridge-nf-call-ip6tables &#x3D; 1</span><br><span class=\"line\">net.bridge.bridge-nf-call-iptables &#x3D; 1</span><br><span class=\"line\">net.ipv4.ip_forward &#x3D; 1</span><br><span class=\"line\">vm.swappiness &#x3D; 0</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装docker18-09-9\"><a href=\"#安装docker18-09-9\" class=\"headerlink\" title=\"安装docker18.09.9\"></a>安装docker18.09.9</h2><p>1.添加阿里云yum源</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum-config-manager --add-repo http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;docker-ce&#x2F;linux&#x2F;centos&#x2F;docker-ce.repo</span><br></pre></td></tr></table></figure>\n<p>2.查看可用版本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum list docker-ce --showduplicates | sort -r</span><br><span class=\"line\"></span><br><span class=\"line\">已加载插件：fastestmirror, langpacks</span><br><span class=\"line\">可安装的软件包</span><br><span class=\"line\"> * updates: mirrors.aliyun.com</span><br><span class=\"line\">Loading mirror speeds from cached hostfile</span><br><span class=\"line\"> * extras: mirrors.aliyun.com</span><br><span class=\"line\">docker-ce.x86_64            3:19.03.5-3.el7                     docker-ce-stable</span><br><span class=\"line\">docker-ce.x86_64            3:19.03.4-3.el7                     docker-ce-stable</span><br><span class=\"line\">。。。。。。</span><br><span class=\"line\">docker-ce.x86_64            3:18.09.9-3.el7                     docker-ce-stable</span><br><span class=\"line\">docker-ce.x86_64            3:18.09.8-3.el7                     docker-ce-stable</span><br><span class=\"line\">docker-ce.x86_64            3:18.09.7-3.el7                     docker-ce-stable</span><br><span class=\"line\">docker-ce.x86_64            3:18.09.6-3.el7                     docker-ce-stable</span><br><span class=\"line\">。。。。。。</span><br></pre></td></tr></table></figure>\n\n<p>3.安装docker18.09.9</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install docker-ce-18.09.9-3.el7 docker-ce-cli-18.09.9</span><br></pre></td></tr></table></figure>\n<p>4.启动docker并设置开机自启</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl enable docker &amp;&amp; systemctl start docker</span><br></pre></td></tr></table></figure>\n<p>5.配置阿里云docker镜像加速</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &gt; &#x2F;etc&#x2F;docker&#x2F;daemon.json &lt;&lt;-&#39;EOF&#39;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;registry-mirrors&quot;: [&quot;https:&#x2F;&#x2F;gqk8w9va.mirror.aliyuncs.com&quot;]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure>\n<p>6.配置完后重启docker</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart docker</span><br></pre></td></tr></table></figure>\n<p>7.查看加速</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker info</span><br><span class=\"line\"></span><br><span class=\"line\">找到Registry Mirrors一行</span><br><span class=\"line\">Registry Mirrors:</span><br><span class=\"line\"> https:&#x2F;&#x2F;gqk8w9va.mirror.aliyuncs.com&#x2F;</span><br></pre></td></tr></table></figure>\n\n<p>8.查看docker版本<br>docker version</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Client:</span><br><span class=\"line\"> Version:           18.09.9</span><br><span class=\"line\"> API version:       1.39</span><br><span class=\"line\"> Go version:        go1.11.13</span><br><span class=\"line\"> Git commit:        039a7df9ba</span><br><span class=\"line\"> Built:             Wed Sep  4 16:51:21 2019</span><br><span class=\"line\"> OS&#x2F;Arch:           linux&#x2F;amd64</span><br><span class=\"line\"> Experimental:      false</span><br><span class=\"line\"></span><br><span class=\"line\">Server: Docker Engine - Community</span><br><span class=\"line\"> Engine:</span><br><span class=\"line\">  Version:          18.09.9</span><br><span class=\"line\">  API version:      1.39 (minimum version 1.12)</span><br><span class=\"line\">  Go version:       go1.11.13</span><br><span class=\"line\">  Git commit:       039a7df</span><br><span class=\"line\">  Built:            Wed Sep  4 16:22:32 2019</span><br><span class=\"line\">  OS&#x2F;Arch:          linux&#x2F;amd64</span><br><span class=\"line\">  Experimental:     false</span><br></pre></td></tr></table></figure>\n<ul>\n<li>若有需要网络代理的，请在docker中配置网络代理，否则docker无法下载镜像<h2 id=\"修改docker-Cgroup-Driver为systemd\"><a href=\"#修改docker-Cgroup-Driver为systemd\" class=\"headerlink\" title=\"修改docker Cgroup Driver为systemd\"></a>修改docker Cgroup Driver为systemd</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#修改docker Cgroup Driver为systemd</span><br><span class=\"line\">将&#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;docker.service文件中的这一行 ExecStart&#x3D;&#x2F;usr&#x2F;bin&#x2F;dockerd -H fd:&#x2F;&#x2F; --containerd&#x3D;&#x2F;run&#x2F;containerd&#x2F;containerd.sock</span><br><span class=\"line\"></span><br><span class=\"line\">修改为 ExecStart&#x3D;&#x2F;usr&#x2F;bin&#x2F;dockerd -H fd:&#x2F;&#x2F; --containerd&#x3D;&#x2F;run&#x2F;containerd&#x2F;containerd.sock --exec-opt native.cgroupdriver&#x3D;systemd</span><br><span class=\"line\"></span><br><span class=\"line\">如果不修改，在添加 worker 节点时可能会碰到如下错误</span><br><span class=\"line\">[WARNING IsDockerSystemdCheck]: detected &quot;cgroupfs&quot; as the Docker cgroup driver. The recommended driver is &quot;systemd&quot;. </span><br><span class=\"line\">Please follow the guide at https:&#x2F;&#x2F;kubernetes.io&#x2F;docs&#x2F;setup&#x2F;cri&#x2F;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;使用如下命令修改  </span><br><span class=\"line\">sed -i.bak &quot;s#^ExecStart&#x3D;&#x2F;usr&#x2F;bin&#x2F;dockerd.*#ExecStart&#x3D;&#x2F;usr&#x2F;bin&#x2F;dockerd -H fd:&#x2F;&#x2F; --containerd&#x3D;&#x2F;run&#x2F;containerd&#x2F;containerd.sock --exec-opt native.cgroupdriver&#x3D;systemd#g&quot; &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;docker.service</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;重启docker</span><br><span class=\"line\">systemctl daemon-reload &amp;&amp; systemctl restart docker</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装Kubeadm\"><a href=\"#安装Kubeadm\" class=\"headerlink\" title=\"安装Kubeadm\"></a>安装Kubeadm</h2>需要科学上网<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &gt;&#x2F;etc&#x2F;yum.repos.d&#x2F;kubernetes.repo&lt;&lt;EOF</span><br><span class=\"line\">[kubernetes]</span><br><span class=\"line\">name&#x3D;Kubernetes</span><br><span class=\"line\">baseurl&#x3D;https:&#x2F;&#x2F;packages.cloud.google.com&#x2F;yum&#x2F;repos&#x2F;kubernetes-el7-x86_64</span><br><span class=\"line\">enabled&#x3D;1</span><br><span class=\"line\">gpgcheck&#x3D;1</span><br><span class=\"line\">repo_gpgcheck&#x3D;1</span><br><span class=\"line\">gpgkey&#x3D;https:&#x2F;&#x2F;packages.cloud.google.com&#x2F;yum&#x2F;doc&#x2F;yum-key.gpg</span><br><span class=\"line\">        https:&#x2F;&#x2F;packages.cloud.google.com&#x2F;yum&#x2F;doc&#x2F;rpm-package-key.gpg</span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure>\n使用阿里云yum源<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &gt;&#x2F;etc&#x2F;yum.repos.d&#x2F;kubernetes.repo &lt;&lt;EOF</span><br><span class=\"line\">[kubernetes]</span><br><span class=\"line\">name&#x3D;Kubernetes</span><br><span class=\"line\">baseurl&#x3D;http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;yum&#x2F;repos&#x2F;kubernetes-el7-x86_64</span><br><span class=\"line\">enabled&#x3D;1</span><br><span class=\"line\">gpgcheck&#x3D;0</span><br><span class=\"line\">repo_gpgcheck&#x3D;0</span><br><span class=\"line\">gpgkey&#x3D;http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;yum&#x2F;doc&#x2F;yum-key.gpg</span><br><span class=\"line\">        http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;yum&#x2F;doc&#x2F;rpm-package-key.gpg</span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure>\n安装 kubeadm、kubelet、kubectl(阿里云yum源会随官方更新最新版，因此指定版本)<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;安装1.16.9版本</span><br><span class=\"line\">yum -y install kubelet-1.16.9 kubeadm-1.16.9 kubectl-1.16.9</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;查看版本</span><br><span class=\"line\">kubeadm version</span><br><span class=\"line\"></span><br><span class=\"line\">kubeadm version: &amp;version.Info&#123;Major:&quot;1&quot;, Minor:&quot;16&quot;, GitVersion:&quot;v1.16.9&quot;, GitCommit:&quot;a17149e1a189050796ced469dbd78d380f2ed5ef&quot;, GitTreeState:&quot;clean&quot;, BuildDate:&quot;2020-04-16T11:42:30Z&quot;, GoVersion:&quot;go1.13.9&quot;, Compiler:&quot;gc&quot;, Platform:&quot;linux&#x2F;amd64&quot;&#125;</span><br></pre></td></tr></table></figure>\n设置kubelet开机自启<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl enable kubelet</span><br></pre></td></tr></table></figure>\n设置k8s命令自动补全<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install bash-completion</span><br><span class=\"line\">source &#x2F;usr&#x2F;share&#x2F;bash-completion&#x2F;bash_completion</span><br><span class=\"line\">source &lt;(kubectl completion bash)</span><br><span class=\"line\">echo &quot;source &lt;(kubectl completion bash)&quot; &gt;&gt; ~&#x2F;.bashrc</span><br></pre></td></tr></table></figure>\n<h1 id=\"初始化集群\"><a href=\"#初始化集群\" class=\"headerlink\" title=\"初始化集群\"></a>初始化集群</h1><h2 id=\"master节点操作，配置-kubeadm-初始化文件\"><a href=\"#master节点操作，配置-kubeadm-初始化文件\" class=\"headerlink\" title=\"master节点操作，配置 kubeadm 初始化文件\"></a>master节点操作，配置 kubeadm 初始化文件</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &lt;&lt;EOF &gt; .&#x2F;kubeadm-config.yaml</span><br><span class=\"line\">apiVersion: kubeadm.k8s.io&#x2F;v1beta2</span><br><span class=\"line\">kind: ClusterConfiguration</span><br><span class=\"line\">kubernetesVersion: v1.16.9\t</span><br><span class=\"line\">imageRepository: registry.cn-hangzhou.aliyuncs.com&#x2F;google_containers</span><br><span class=\"line\"></span><br><span class=\"line\">#master地址</span><br><span class=\"line\">controlPlaneEndpoint: &quot;192.168.9.10:6443&quot;\t</span><br><span class=\"line\">networking:</span><br><span class=\"line\">  serviceSubnet: &quot;10.96.0.0&#x2F;16&quot;\t</span><br><span class=\"line\"></span><br><span class=\"line\">  #k8s容器组所在的网段</span><br><span class=\"line\">  podSubnet: &quot;10.20.0.1&#x2F;16&quot;\t</span><br><span class=\"line\">  dnsDomain: &quot;cluster.local&quot;</span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure>\n初始化master<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#kubeadm init --config&#x3D;kubeadm-config.yaml --upload-certs</span><br><span class=\"line\">完整输出结果</span><br><span class=\"line\">kubeadm init --config&#x3D;kubeadm-config.yaml</span><br><span class=\"line\">[init] Using Kubernetes version: v1.16.9</span><br><span class=\"line\">[preflight] Running pre-flight checks</span><br><span class=\"line\">[preflight] Pulling images required for setting up a Kubernetes cluster</span><br><span class=\"line\">[preflight] This might take a minute or two, depending on the speed of your internet connection</span><br><span class=\"line\">[preflight] You can also perform this action in beforehand using &#39;kubeadm config images pull&#39;</span><br><span class=\"line\">[kubelet-start] Writing kubelet environment file with flags to file &quot;&#x2F;var&#x2F;lib&#x2F;kubelet&#x2F;kubeadm-flags.env&quot;</span><br><span class=\"line\">[kubelet-start] Writing kubelet configuration to file &quot;&#x2F;var&#x2F;lib&#x2F;kubelet&#x2F;config.yaml&quot;</span><br><span class=\"line\">[kubelet-start] Activating the kubelet service</span><br><span class=\"line\">[certs] Using certificateDir folder &quot;&#x2F;etc&#x2F;kubernetes&#x2F;pki&quot;</span><br><span class=\"line\">[certs] Generating &quot;ca&quot; certificate and key</span><br><span class=\"line\">[certs] Generating &quot;apiserver&quot; certificate and key</span><br><span class=\"line\">[certs] apiserver serving cert is signed for DNS names [k8s-master kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local] and IPs [10.96.0.1 192.168.9.10 192.168.9.10]</span><br><span class=\"line\">[certs] Generating &quot;apiserver-kubelet-client&quot; certificate and key</span><br><span class=\"line\">[certs] Generating &quot;front-proxy-ca&quot; certificate and key</span><br><span class=\"line\">[certs] Generating &quot;front-proxy-client&quot; certificate and key</span><br><span class=\"line\">[certs] Generating &quot;etcd&#x2F;ca&quot; certificate and key</span><br><span class=\"line\">[certs] Generating &quot;etcd&#x2F;server&quot; certificate and key</span><br><span class=\"line\">[certs] etcd&#x2F;server serving cert is signed for DNS names [k8s-master localhost] and IPs [192.168.9.10 127.0.0.1 ::1]</span><br><span class=\"line\">[certs] Generating &quot;etcd&#x2F;peer&quot; certificate and key</span><br><span class=\"line\">[certs] etcd&#x2F;peer serving cert is signed for DNS names [k8s-master localhost] and IPs [192.168.9.10 127.0.0.1 ::1]</span><br><span class=\"line\">[certs] Generating &quot;etcd&#x2F;healthcheck-client&quot; certificate and key</span><br><span class=\"line\">[certs] Generating &quot;apiserver-etcd-client&quot; certificate and key</span><br><span class=\"line\">[certs] Generating &quot;sa&quot; key and public key</span><br><span class=\"line\">[kubeconfig] Using kubeconfig folder &quot;&#x2F;etc&#x2F;kubernetes&quot;</span><br><span class=\"line\">[kubeconfig] Writing &quot;admin.conf&quot; kubeconfig file</span><br><span class=\"line\">[kubeconfig] Writing &quot;kubelet.conf&quot; kubeconfig file</span><br><span class=\"line\">[kubeconfig] Writing &quot;controller-manager.conf&quot; kubeconfig file</span><br><span class=\"line\">[kubeconfig] Writing &quot;scheduler.conf&quot; kubeconfig file</span><br><span class=\"line\">[control-plane] Using manifest folder &quot;&#x2F;etc&#x2F;kubernetes&#x2F;manifests&quot;</span><br><span class=\"line\">[control-plane] Creating static Pod manifest for &quot;kube-apiserver&quot;</span><br><span class=\"line\">[control-plane] Creating static Pod manifest for &quot;kube-controller-manager&quot;</span><br><span class=\"line\">[control-plane] Creating static Pod manifest for &quot;kube-scheduler&quot;</span><br><span class=\"line\">[etcd] Creating static Pod manifest for local etcd in &quot;&#x2F;etc&#x2F;kubernetes&#x2F;manifests&quot;</span><br><span class=\"line\">[wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory &quot;&#x2F;etc&#x2F;kubernetes&#x2F;manifests&quot;. This can take up to 4m0s</span><br><span class=\"line\">[apiclient] All control plane components are healthy after 16.501777 seconds</span><br><span class=\"line\">[upload-config] Storing the configuration used in ConfigMap &quot;kubeadm-config&quot; in the &quot;kube-system&quot; Namespace</span><br><span class=\"line\">[kubelet] Creating a ConfigMap &quot;kubelet-config-1.16&quot; in namespace kube-system with the configuration for the kubelets in the cluster</span><br><span class=\"line\">[upload-certs] Skipping phase. Please see --upload-certs</span><br><span class=\"line\">[mark-control-plane] Marking the node k8s-master as control-plane by adding the label &quot;node-role.kubernetes.io&#x2F;master&#x3D;&#39;&#39;&quot;</span><br><span class=\"line\">[mark-control-plane] Marking the node k8s-master as control-plane by adding the taints [node-role.kubernetes.io&#x2F;master:NoSchedule]</span><br><span class=\"line\">[bootstrap-token] Using token: px979r.mphk9ee5ya8fgy44</span><br><span class=\"line\">[bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles</span><br><span class=\"line\">[bootstrap-token] configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials</span><br><span class=\"line\">[bootstrap-token] configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token</span><br><span class=\"line\">[bootstrap-token] configured RBAC rules to allow certificate rotation for all node client certificates in the cluster</span><br><span class=\"line\">[bootstrap-token] Creating the &quot;cluster-info&quot; ConfigMap in the &quot;kube-public&quot; namespace</span><br><span class=\"line\">[addons] Applied essential addon: CoreDNS</span><br><span class=\"line\">[addons] Applied essential addon: kube-proxy</span><br><span class=\"line\"></span><br><span class=\"line\">Your Kubernetes control-plane has initialized successfully!</span><br><span class=\"line\"></span><br><span class=\"line\">To start using your cluster, you need to run the following as a regular user:</span><br><span class=\"line\"></span><br><span class=\"line\">  mkdir -p $HOME&#x2F;.kube</span><br><span class=\"line\">  sudo cp -i &#x2F;etc&#x2F;kubernetes&#x2F;admin.conf $HOME&#x2F;.kube&#x2F;config</span><br><span class=\"line\">  sudo chown $(id -u):$(id -g) $HOME&#x2F;.kube&#x2F;config</span><br><span class=\"line\"></span><br><span class=\"line\">You should now deploy a pod network to the cluster.</span><br><span class=\"line\">Run &quot;kubectl apply -f [podnetwork].yaml&quot; with one of the options listed at:</span><br><span class=\"line\">  https:&#x2F;&#x2F;kubernetes.io&#x2F;docs&#x2F;concepts&#x2F;cluster-administration&#x2F;addons&#x2F;</span><br><span class=\"line\"></span><br><span class=\"line\">You can now join any number of control-plane nodes by copying certificate authorities </span><br><span class=\"line\">and service account keys on each node and then running the following as root:</span><br><span class=\"line\"></span><br><span class=\"line\">  kubeadm join 192.168.9.10:6443 --token px979r.mphk9ee5ya8fgy44 \\</span><br><span class=\"line\">    --discovery-token-ca-cert-hash sha256:5e7c7cd1cc1f86c0761e54b9380de22968b6b221cb98939c14ab2942223f6f51 \\</span><br><span class=\"line\">    --control-plane \t  </span><br><span class=\"line\"></span><br><span class=\"line\">Then you can join any number of worker nodes by running the following on each as root:</span><br><span class=\"line\"></span><br><span class=\"line\">kubeadm join 192.168.9.10:6443 --token px979r.mphk9ee5ya8fgy44 \\</span><br><span class=\"line\">    --discovery-token-ca-cert-hash sha256:5e7c7cd1cc1f86c0761e54b9380de22968b6b221cb98939c14ab2942223f6f51 </span><br></pre></td></tr></table></figure>\n拷贝 kubeconfig 文件<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;这里的路径为&#x2F;root</span><br><span class=\"line\">mkdir -p $HOME&#x2F;.kube</span><br><span class=\"line\">cp -i &#x2F;etc&#x2F;kubernetes&#x2F;admin.conf $HOME&#x2F;.kube&#x2F;config</span><br><span class=\"line\">chown $(id -u):$(id -g) $HOME&#x2F;.kube&#x2F;config</span><br></pre></td></tr></table></figure>\n<h2 id=\"master添加节点\"><a href=\"#master添加节点\" class=\"headerlink\" title=\"master添加节点\"></a>master添加节点</h2>node1和node2相同操作<br>将master节点上的$HOME/.kube/config 文件拷贝到node节点对应的文件中<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.创建目录，这里的路径为&#x2F;root</span><br><span class=\"line\">mkdir -p $HOME&#x2F;.kube </span><br><span class=\"line\"></span><br><span class=\"line\">2.把master节点上的config文件拷贝到node1和node2的$HOME&#x2F;.kube</span><br><span class=\"line\">scp k8s-master1:~&#x2F;.kube&#x2F;config $HOME&#x2F;.kube</span><br><span class=\"line\"></span><br><span class=\"line\">3.修改权限</span><br><span class=\"line\">chown $(id -u):$(id -g) $HOME&#x2F;.kube&#x2F;config</span><br></pre></td></tr></table></figure>\n将node1和node2加入到集群中<br>这里需要用到2.2中初始化master最后生成的token和sha256值<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#kubeadm join 192.168.9.10:6443 --token px979r.mphk9ee5ya8fgy44     --discovery-token-ca-cert-hash sha256:5e7c7cd1cc1f86c0761e54b9380de22968b6b221cb98939c14ab2942223f6f51 </span><br><span class=\"line\">  </span><br><span class=\"line\">输出结果  </span><br><span class=\"line\">[preflight] Running pre-flight checks</span><br><span class=\"line\">\t[WARNING IsDockerSystemdCheck]: detected &quot;cgroupfs&quot; as the Docker cgroup driver. The recommended driver is &quot;systemd&quot;. Please follow the guide at https:&#x2F;&#x2F;kubernetes.io&#x2F;docs&#x2F;setup&#x2F;cri&#x2F;</span><br><span class=\"line\">[preflight] Reading configuration from the cluster...</span><br><span class=\"line\">[preflight] FYI: You can look at this config file with &#39;kubectl -n kube-system get cm kubeadm-config -oyaml&#39;</span><br><span class=\"line\">[kubelet-start] Downloading configuration for the kubelet from the &quot;kubelet-config-1.16&quot; ConfigMap in the kube-system namespace</span><br><span class=\"line\">[kubelet-start] Writing kubelet configuration to file &quot;&#x2F;var&#x2F;lib&#x2F;kubelet&#x2F;config.yaml&quot;</span><br><span class=\"line\">[kubelet-start] Writing kubelet environment file with flags to file &quot;&#x2F;var&#x2F;lib&#x2F;kubelet&#x2F;kubeadm-flags.env&quot;</span><br><span class=\"line\">[kubelet-start] Activating the kubelet service</span><br><span class=\"line\">[kubelet-start] Waiting for the kubelet to perform the TLS Bootstrap...</span><br><span class=\"line\"></span><br><span class=\"line\">This node has joined the cluster:</span><br><span class=\"line\">* Certificate signing request was sent to apiserver and a response was received.</span><br><span class=\"line\">* The Kubelet was informed of the new secure connection details.</span><br><span class=\"line\"></span><br><span class=\"line\">Run &#39;kubectl get nodes&#39; on the control-plane to see this node join the cluster.</span><br></pre></td></tr></table></figure>\n如果忘记了token和sha256值，可以在master节点使用如下命令查看<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;查看token</span><br><span class=\"line\">#kubeadm token list</span><br><span class=\"line\">TOKEN                     TTL       EXPIRES                     USAGES                   DESCRIPTION   EXTRA GROUPS</span><br><span class=\"line\">px979r.mphk9ee5ya8fgy44   20h       2020-03-18T13:49:48+08:00   authentication,signing   &lt;none&gt;        system:bootstrappers:kubeadm:default-node-token</span><br><span class=\"line\">            </span><br><span class=\"line\">            </span><br><span class=\"line\">&#x2F;&#x2F;查看sha256</span><br><span class=\"line\">#openssl x509 -pubkey -in &#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;ca.crt | openssl rsa -pubin -outform der 2&gt;&#x2F;dev&#x2F;null | openssl dgst -sha256 -hex | sed &#39;s&#x2F;^.* &#x2F;&#x2F;&#39;</span><br><span class=\"line\">5e7c7cd1cc1f86c0761e54b9380de22968b6b221cb98939c14ab2942223f6f51</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;同时查看token和sha256</span><br><span class=\"line\">#kubeadm token create --print-join-command</span><br><span class=\"line\">kubeadm join 192.168.9.10:6443 --token 9b28zg.oyt0kvvpmtrem4bg     --discovery-token-ca-cert-hash sha256:5e7c7cd1cc1f86c0761e54b9380de22968b6b221cb98939c14ab2942223f6f51</span><br></pre></td></tr></table></figure>\nmaster节点查看node，发现状态都是NotReady，因为还没有安装网络插件，这里我们安装calio官方插件文档<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl get nodes</span><br><span class=\"line\">NAME         STATUS     ROLES    AGE     VERSION</span><br><span class=\"line\">k8s-master   NotReady   master   19m     v1.16.9</span><br><span class=\"line\">k8s-node1    NotReady   &lt;none&gt;   4m10s   v1.16.9</span><br><span class=\"line\">k8s-node2    NotReady   &lt;none&gt;   4m3s    v1.16.9</span><br></pre></td></tr></table></figure>\n<h2 id=\"master节点安装网络插件calio\"><a href=\"#master节点安装网络插件calio\" class=\"headerlink\" title=\"master节点安装网络插件calio\"></a>master节点安装网络插件calio</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;下载文件</span><br><span class=\"line\">wget https:&#x2F;&#x2F;docs.projectcalico.org&#x2F;v3.8&#x2F;manifests&#x2F;calico.yaml</span><br><span class=\"line\">  </span><br><span class=\"line\">将文件中的620行改为如下，因为在上边kubeadm-config.yaml配置文件中指定了容器组IP  620行</span><br><span class=\"line\">value: &quot;10.20.0.1&#x2F;16&quot;</span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;修改完成后安装calico网络插件</span><br><span class=\"line\">kubectl apply -f calico.yaml</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;安装完成后稍等一会查看pods状态</span><br><span class=\"line\">kubectl get pods -n kube-system</span><br><span class=\"line\"></span><br><span class=\"line\">NAME                                      READY   STATUS    RESTARTS   AGE</span><br><span class=\"line\">calico-kube-controllers-dc6cb64cb-8sh59   1&#x2F;1     Running   0          6m22s</span><br><span class=\"line\">calico-node-89s9k                         1&#x2F;1     Running   0          6m22s</span><br><span class=\"line\">calico-node-dkt7w                         1&#x2F;1     Running   0          6m22s</span><br><span class=\"line\">calico-node-tgg2h                         1&#x2F;1     Running   0          6m22s</span><br><span class=\"line\">coredns-667f964f9b-7hrj9                  1&#x2F;1     Running   0          33m</span><br><span class=\"line\">coredns-667f964f9b-8q7sh                  1&#x2F;1     Running   0          33m</span><br><span class=\"line\">etcd-k8s-master                           1&#x2F;1     Running   0          33m</span><br><span class=\"line\">kube-apiserver-k8s-master                 1&#x2F;1     Running   0          32m</span><br><span class=\"line\">kube-controller-manager-k8s-master        1&#x2F;1     Running   0          33m</span><br><span class=\"line\">kube-proxy-b2r5d                          1&#x2F;1     Running   0          12m</span><br><span class=\"line\">kube-proxy-nd982                          1&#x2F;1     Running   0          11m</span><br><span class=\"line\">kube-proxy-zh6cz                          1&#x2F;1     Running   0          33m</span><br><span class=\"line\">kube-scheduler-k8s-master                 1&#x2F;1     Running   0          32m</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;查看node状态</span><br><span class=\"line\">[root@k8s-master ~]# kubectl get nodes </span><br><span class=\"line\">NAME         STATUS   ROLES    AGE     VERSION</span><br><span class=\"line\">k8s-master   Ready    master   31m     v1.16.9</span><br><span class=\"line\">k8s-node1    Ready    &lt;none&gt;   9m46s   v1.16.9</span><br><span class=\"line\">k8s-node2    Ready    &lt;none&gt;   9m22s   v1.16.9</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装Dashboard-可选\"><a href=\"#安装Dashboard-可选\" class=\"headerlink\" title=\"安装Dashboard(可选)\"></a>安装Dashboard(可选)</h2>下载文件及修改内容</li>\n</ul>\n<p><a href=\"https://github.com/kubernetes/dashboard/releases\">这里查看dashboard对应的k8s版本</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;下载文件  v2.0.0-rc3是中文版本，beta8是英文版本</span><br><span class=\"line\">wget https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;kubernetes&#x2F;dashboard&#x2F;v2.0.0-beta8&#x2F;aio&#x2F;deploy&#x2F;recommended.yaml</span><br><span class=\"line\"></span><br><span class=\"line\">wget https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;kubernetes&#x2F;dashboard&#x2F;v2.0.0-rc3&#x2F;aio&#x2F;deploy&#x2F;recommended.yaml  </span><br><span class=\"line\">  </span><br><span class=\"line\">&#x2F;&#x2F;修改Service为NodePort类型</span><br><span class=\"line\">42行下增加一行</span><br><span class=\"line\">nodePort: 30001</span><br><span class=\"line\">  </span><br><span class=\"line\">44行下增加一行</span><br><span class=\"line\">type: NodePort</span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;原先内容</span><br><span class=\"line\">spec:</span><br><span class=\"line\">  ports:</span><br><span class=\"line\">    - port: 443</span><br><span class=\"line\">      targetPort: 8443</span><br><span class=\"line\">  selector:</span><br><span class=\"line\">    k8s-app: kubernetes-dashboard</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;修改后内容</span><br><span class=\"line\">spec:</span><br><span class=\"line\">  ports:</span><br><span class=\"line\">    - port: 443</span><br><span class=\"line\">      targetPort: 8443</span><br><span class=\"line\">      nodePort: 30001   #增加，指定nodeport端口</span><br><span class=\"line\">  selector:</span><br><span class=\"line\">    k8s-app: kubernetes-dashboard</span><br><span class=\"line\">  type: NodePort\t\t#增加，修改类型为nodeport</span><br></pre></td></tr></table></figure>\n<p>部署dashboard</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl apply -f recommended.yaml</span><br></pre></td></tr></table></figure>\n<p>查看dashboard的运行状态及外网访问端口</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;查看dashboard运行状态</span><br><span class=\"line\">#kubectl get pods -n kubernetes-dashboard -l k8s-app&#x3D;kubernetes-dashboard</span><br><span class=\"line\">NAME                                    READY   STATUS    RESTARTS   AGE</span><br><span class=\"line\">kubernetes-dashboard-5996555fd8-2ppc5   1&#x2F;1     Running   0          8m16s</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;查看dashboard外网访问端口，命名空间为kubernetes-dashboard</span><br><span class=\"line\">#kubectl get svc -n kubernetes-dashboard -l k8s-app&#x3D;kubernetes-dashboard</span><br><span class=\"line\">kubectl get svc -n kubernetes-dashboard -l k8s-app&#x3D;kubernetes-dashboard</span><br><span class=\"line\">NAME                   TYPE       CLUSTER-IP      EXTERNAL-IP   PORT(S)         AGE</span><br><span class=\"line\">kubernetes-dashboard   NodePort   10.96.142.172   &lt;none&gt;        443:30001&#x2F;TCP   8m37s</span><br></pre></td></tr></table></figure>\n<p>通过上边的30001端口访问dashboard，注意是https</p>\n<blockquote>\n<p>k8s1.16.9这个版本中，使用的dashboard版本是2.0.0-beta8，只有火狐浏览器可以访问，其余浏览器都不能访问，会报错</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">您的连接不是私密连接</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>使用火狐浏览器访问，由于 dashboard 默认是自建的 https 证书，该证书是不受浏览器信任的，所以我们需要强制跳转就可以了</p>\n</blockquote>\n<p>然后创建一个具有全局所有权限的用户来登录Dashboard</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;编辑admin.yaml文件</span><br><span class=\"line\">cat &gt; admin.yaml &lt;&lt;EOF</span><br><span class=\"line\">kind: ClusterRoleBinding</span><br><span class=\"line\">apiVersion: rbac.authorization.k8s.io&#x2F;v1beta1</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: admin</span><br><span class=\"line\">  annotations:</span><br><span class=\"line\">    rbac.authorization.kubernetes.io&#x2F;autoupdate: &quot;true&quot;</span><br><span class=\"line\">roleRef:</span><br><span class=\"line\">  kind: ClusterRole</span><br><span class=\"line\">  name: cluster-admin</span><br><span class=\"line\">  apiGroup: rbac.authorization.k8s.io</span><br><span class=\"line\">subjects:</span><br><span class=\"line\">- kind: ServiceAccount</span><br><span class=\"line\">  name: admin</span><br><span class=\"line\">  namespace: kube-system</span><br><span class=\"line\"></span><br><span class=\"line\">---</span><br><span class=\"line\">apiVersion: v1</span><br><span class=\"line\">kind: ServiceAccount</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: admin</span><br><span class=\"line\">  namespace: kube-system</span><br><span class=\"line\">  labels:</span><br><span class=\"line\">    kubernetes.io&#x2F;cluster-service: &quot;true&quot;</span><br><span class=\"line\">    addonmanager.kubernetes.io&#x2F;mode: Reconcile</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;直接创建</span><br><span class=\"line\">kubectl apply -f admin.yaml</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;查看token</span><br><span class=\"line\">kubectl get secret -n kube-system|grep admin-token</span><br><span class=\"line\"></span><br><span class=\"line\">admin-token-j7sfh                                kubernetes.io&#x2F;service-account-token   3      23s</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;获取base64解码后的字符串，注意需要用到上边命令查看到的token，会生成很长的一串字符串</span><br><span class=\"line\">kubectl get secret admin-token-j7sfh -o jsonpath&#x3D;&#123;.data.token&#125; -n kube-system |base64 -d</span><br><span class=\"line\"></span><br><span class=\"line\">#直接用这条命令搞定</span><br><span class=\"line\">kubectl get secret &#96;kubectl get secret -n kube-system|grep admin-token|awk &#39;&#123;print $1&#125;&#39;&#96; -o jsonpath&#x3D;&#123;.data.token&#125; -n kube-system |base64 -d &amp;&amp; echo</span><br></pre></td></tr></table></figure>\n\n<p>到此，使用kubeadm安装k8s 1.16.9完成！！！</p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><p><a href=\"https://kubesphere.com.cn/forum/d/1272-kubeadm-k8s-kubesphere-2-1-1\">在 Kubernetes集群中 安装 KubeSphere2.1</a></p>\n","site":{"data":{}},"more":"<h1 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h1><h2 id=\"实验环境\"><a href=\"#实验环境\" class=\"headerlink\" title=\"实验环境\"></a>实验环境</h2><table>\n<thead>\n<tr>\n<th align=\"center\">角色</th>\n<th align=\"center\">IP地址</th>\n<th align=\"center\">主机名</th>\n<th align=\"center\">docker版本</th>\n<th align=\"center\">硬件配置</th>\n<th align=\"center\">系统</th>\n<th align=\"center\">内核</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">master</td>\n<td align=\"center\">192.168.9.10</td>\n<td align=\"center\">k8s-master</td>\n<td align=\"center\">18.09.9</td>\n<td align=\"center\">2c4g</td>\n<td align=\"center\">CentOS7.7</td>\n<td align=\"center\">3.10.0-1062.el7.x86_64</td>\n</tr>\n<tr>\n<td align=\"center\">node1</td>\n<td align=\"center\">192.168.9.13</td>\n<td align=\"center\">k8s-node1</td>\n<td align=\"center\">18.09.9</td>\n<td align=\"center\">2c6g</td>\n<td align=\"center\">CentOS7.7</td>\n<td align=\"center\">3.10.0-1062.el7.x86_64</td>\n</tr>\n<tr>\n<td align=\"center\">node2</td>\n<td align=\"center\">192.168.9.14</td>\n<td align=\"center\">k8s-node2</td>\n<td align=\"center\">18.09.9</td>\n<td align=\"center\">2c6g</td>\n<td align=\"center\">CentOS7.7</td>\n<td align=\"center\">3.10.0-1062.el7.x86_64</td>\n</tr>\n</tbody></table>\n<h2 id=\"每个节点配置host信息\"><a href=\"#每个节点配置host信息\" class=\"headerlink\" title=\"每个节点配置host信息\"></a>每个节点配置host信息</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &gt;&gt; &#x2F;etc&#x2F;hosts &lt;&lt;EOF</span><br><span class=\"line\">192.168.9.10 k8s-master</span><br><span class=\"line\">192.168.9.13 k8s-node1</span><br><span class=\"line\">192.168.9.14 k8s-node2</span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure>\n<h2 id=\"禁用防火墙和selinux\"><a href=\"#禁用防火墙和selinux\" class=\"headerlink\" title=\"禁用防火墙和selinux\"></a>禁用防火墙和selinux</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;禁用防火墙</span><br><span class=\"line\">systemctl stop firewalld &amp;&amp; systemctl disable firewalld</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;禁用selinux</span><br><span class=\"line\">#临时修改</span><br><span class=\"line\">setenforce 0</span><br><span class=\"line\"></span><br><span class=\"line\">#永久修改，重启服务器后生效</span><br><span class=\"line\">sed -i &#39;7s&#x2F;enforcing&#x2F;disabled&#x2F;&#39; &#x2F;etc&#x2F;selinux&#x2F;config</span><br></pre></td></tr></table></figure>\n<h2 id=\"创建-etc-sysctl-d-k8s-conf文件，添加如下内容\"><a href=\"#创建-etc-sysctl-d-k8s-conf文件，添加如下内容\" class=\"headerlink\" title=\"创建/etc/sysctl.d/k8s.conf文件，添加如下内容\"></a>创建<code>/etc/sysctl.d/k8s.conf</code>文件，添加如下内容</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;向文件中写入以下内容</span><br><span class=\"line\">cat &gt;&#x2F;etc&#x2F;sysctl.d&#x2F;k8s.conf &lt;&lt;EOF</span><br><span class=\"line\">net.bridge.bridge-nf-call-ip6tables &#x3D; 1</span><br><span class=\"line\">net.bridge.bridge-nf-call-iptables &#x3D; 1</span><br><span class=\"line\">net.ipv4.ip_forward &#x3D; 1</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;执行以下命令生效</span><br><span class=\"line\">modprobe br_netfilter &amp;&amp; sysctl -p &#x2F;etc&#x2F;sysctl.d&#x2F;k8s.conf</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装ipvs\"><a href=\"#安装ipvs\" class=\"headerlink\" title=\"安装ipvs\"></a>安装ipvs</h2><p>脚本创建了的<code>/etc/sysconfig/modules/ipvs.modules</code>文件，保证在节点重启后能自动加载所需模块。使用<code>lsmod | grep -e ip_vs -e nf_conntrack_ipv4</code>命令查看是否已经正确加载所需的内核模块</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;向文件中写入以下内容</span><br><span class=\"line\">cat &gt; &#x2F;etc&#x2F;sysconfig&#x2F;modules&#x2F;ipvs.modules &lt;&lt;EOF</span><br><span class=\"line\">#!&#x2F;bin&#x2F;bash</span><br><span class=\"line\">modprobe -- ip_vs</span><br><span class=\"line\">modprobe -- ip_vs_rr</span><br><span class=\"line\">modprobe -- ip_vs_wrr</span><br><span class=\"line\">modprobe -- ip_vs_sh</span><br><span class=\"line\">modprobe -- nf_conntrack_ipv4</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;修改权限以及查看是否已经正确加载所需的内核模块</span><br><span class=\"line\">chmod 755 &#x2F;etc&#x2F;sysconfig&#x2F;modules&#x2F;ipvs.modules &amp;&amp; bash &#x2F;etc&#x2F;sysconfig&#x2F;modules&#x2F;ipvs.modules &amp;&amp; lsmod | grep -e ip_vs -e nf_conntrack_ipv4</span><br><span class=\"line\"></span><br><span class=\"line\">nf_conntrack_ipv4      15053  0 </span><br><span class=\"line\">nf_defrag_ipv4         12729  1 nf_conntrack_ipv4</span><br><span class=\"line\">ip_vs_sh               12688  0 </span><br><span class=\"line\">ip_vs_wrr              12697  0 </span><br><span class=\"line\">ip_vs_rr               12600  0 </span><br><span class=\"line\">ip_vs                 145497  6 ip_vs_rr,ip_vs_sh,ip_vs_wrr</span><br><span class=\"line\">nf_conntrack          133095  2 ip_vs,nf_conntrack_ipv4</span><br><span class=\"line\">libcrc32c              12644  3 xfs,ip_vs,nf_conntrack</span><br></pre></td></tr></table></figure>\n<p>安装ipset和ipvsadm(便于查看 ipvs 的代理规则)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install ipset ipvsadm</span><br></pre></td></tr></table></figure>\n<h2 id=\"关闭swap分区\"><a href=\"#关闭swap分区\" class=\"headerlink\" title=\"关闭swap分区\"></a>关闭swap分区</h2><p>修改<code>/etc/fstab</code>文件，注释掉 SWAP 的自动挂载，使用<code>free -m</code>确认 swap 已经关闭</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;手动关闭swap</span><br><span class=\"line\">swapoff -a</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;修改fstab文件，注释swap自动挂载</span><br><span class=\"line\">sed -i &#39;&#x2F;^\\&#x2F;dev\\&#x2F;mapper\\&#x2F;centos-swap&#x2F;c#&#x2F;dev&#x2F;mapper&#x2F;centos-swap swap                    swap    defaults        0 0&#39; &#x2F;etc&#x2F;fstab</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;查看swap是否关闭</span><br><span class=\"line\">free -m</span><br><span class=\"line\"></span><br><span class=\"line\">total        used        free      shared  buff&#x2F;cache   available</span><br><span class=\"line\">Mem:           1994         682         612           9         699        1086</span><br><span class=\"line\">Swap:             0           0           0</span><br></pre></td></tr></table></figure>\n<p>swappiness 参数调整，修改<code>/etc/sysctl.d/k8s.conf</code>添加下面一行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &gt;&gt;&#x2F;etc&#x2F;sysctl.d&#x2F;k8s.conf &lt;&lt;EOF</span><br><span class=\"line\">vm.swappiness&#x3D;0</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;使配置生效</span><br><span class=\"line\">sysctl -p &#x2F;etc&#x2F;sysctl.d&#x2F;k8s.conf</span><br><span class=\"line\"></span><br><span class=\"line\">net.bridge.bridge-nf-call-ip6tables &#x3D; 1</span><br><span class=\"line\">net.bridge.bridge-nf-call-iptables &#x3D; 1</span><br><span class=\"line\">net.ipv4.ip_forward &#x3D; 1</span><br><span class=\"line\">vm.swappiness &#x3D; 0</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装docker18-09-9\"><a href=\"#安装docker18-09-9\" class=\"headerlink\" title=\"安装docker18.09.9\"></a>安装docker18.09.9</h2><p>1.添加阿里云yum源</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum-config-manager --add-repo http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;docker-ce&#x2F;linux&#x2F;centos&#x2F;docker-ce.repo</span><br></pre></td></tr></table></figure>\n<p>2.查看可用版本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum list docker-ce --showduplicates | sort -r</span><br><span class=\"line\"></span><br><span class=\"line\">已加载插件：fastestmirror, langpacks</span><br><span class=\"line\">可安装的软件包</span><br><span class=\"line\"> * updates: mirrors.aliyun.com</span><br><span class=\"line\">Loading mirror speeds from cached hostfile</span><br><span class=\"line\"> * extras: mirrors.aliyun.com</span><br><span class=\"line\">docker-ce.x86_64            3:19.03.5-3.el7                     docker-ce-stable</span><br><span class=\"line\">docker-ce.x86_64            3:19.03.4-3.el7                     docker-ce-stable</span><br><span class=\"line\">。。。。。。</span><br><span class=\"line\">docker-ce.x86_64            3:18.09.9-3.el7                     docker-ce-stable</span><br><span class=\"line\">docker-ce.x86_64            3:18.09.8-3.el7                     docker-ce-stable</span><br><span class=\"line\">docker-ce.x86_64            3:18.09.7-3.el7                     docker-ce-stable</span><br><span class=\"line\">docker-ce.x86_64            3:18.09.6-3.el7                     docker-ce-stable</span><br><span class=\"line\">。。。。。。</span><br></pre></td></tr></table></figure>\n\n<p>3.安装docker18.09.9</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install docker-ce-18.09.9-3.el7 docker-ce-cli-18.09.9</span><br></pre></td></tr></table></figure>\n<p>4.启动docker并设置开机自启</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl enable docker &amp;&amp; systemctl start docker</span><br></pre></td></tr></table></figure>\n<p>5.配置阿里云docker镜像加速</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &gt; &#x2F;etc&#x2F;docker&#x2F;daemon.json &lt;&lt;-&#39;EOF&#39;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;registry-mirrors&quot;: [&quot;https:&#x2F;&#x2F;gqk8w9va.mirror.aliyuncs.com&quot;]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure>\n<p>6.配置完后重启docker</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart docker</span><br></pre></td></tr></table></figure>\n<p>7.查看加速</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker info</span><br><span class=\"line\"></span><br><span class=\"line\">找到Registry Mirrors一行</span><br><span class=\"line\">Registry Mirrors:</span><br><span class=\"line\"> https:&#x2F;&#x2F;gqk8w9va.mirror.aliyuncs.com&#x2F;</span><br></pre></td></tr></table></figure>\n\n<p>8.查看docker版本<br>docker version</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Client:</span><br><span class=\"line\"> Version:           18.09.9</span><br><span class=\"line\"> API version:       1.39</span><br><span class=\"line\"> Go version:        go1.11.13</span><br><span class=\"line\"> Git commit:        039a7df9ba</span><br><span class=\"line\"> Built:             Wed Sep  4 16:51:21 2019</span><br><span class=\"line\"> OS&#x2F;Arch:           linux&#x2F;amd64</span><br><span class=\"line\"> Experimental:      false</span><br><span class=\"line\"></span><br><span class=\"line\">Server: Docker Engine - Community</span><br><span class=\"line\"> Engine:</span><br><span class=\"line\">  Version:          18.09.9</span><br><span class=\"line\">  API version:      1.39 (minimum version 1.12)</span><br><span class=\"line\">  Go version:       go1.11.13</span><br><span class=\"line\">  Git commit:       039a7df</span><br><span class=\"line\">  Built:            Wed Sep  4 16:22:32 2019</span><br><span class=\"line\">  OS&#x2F;Arch:          linux&#x2F;amd64</span><br><span class=\"line\">  Experimental:     false</span><br></pre></td></tr></table></figure>\n<ul>\n<li>若有需要网络代理的，请在docker中配置网络代理，否则docker无法下载镜像<h2 id=\"修改docker-Cgroup-Driver为systemd\"><a href=\"#修改docker-Cgroup-Driver为systemd\" class=\"headerlink\" title=\"修改docker Cgroup Driver为systemd\"></a>修改docker Cgroup Driver为systemd</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#修改docker Cgroup Driver为systemd</span><br><span class=\"line\">将&#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;docker.service文件中的这一行 ExecStart&#x3D;&#x2F;usr&#x2F;bin&#x2F;dockerd -H fd:&#x2F;&#x2F; --containerd&#x3D;&#x2F;run&#x2F;containerd&#x2F;containerd.sock</span><br><span class=\"line\"></span><br><span class=\"line\">修改为 ExecStart&#x3D;&#x2F;usr&#x2F;bin&#x2F;dockerd -H fd:&#x2F;&#x2F; --containerd&#x3D;&#x2F;run&#x2F;containerd&#x2F;containerd.sock --exec-opt native.cgroupdriver&#x3D;systemd</span><br><span class=\"line\"></span><br><span class=\"line\">如果不修改，在添加 worker 节点时可能会碰到如下错误</span><br><span class=\"line\">[WARNING IsDockerSystemdCheck]: detected &quot;cgroupfs&quot; as the Docker cgroup driver. The recommended driver is &quot;systemd&quot;. </span><br><span class=\"line\">Please follow the guide at https:&#x2F;&#x2F;kubernetes.io&#x2F;docs&#x2F;setup&#x2F;cri&#x2F;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;使用如下命令修改  </span><br><span class=\"line\">sed -i.bak &quot;s#^ExecStart&#x3D;&#x2F;usr&#x2F;bin&#x2F;dockerd.*#ExecStart&#x3D;&#x2F;usr&#x2F;bin&#x2F;dockerd -H fd:&#x2F;&#x2F; --containerd&#x3D;&#x2F;run&#x2F;containerd&#x2F;containerd.sock --exec-opt native.cgroupdriver&#x3D;systemd#g&quot; &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;docker.service</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;重启docker</span><br><span class=\"line\">systemctl daemon-reload &amp;&amp; systemctl restart docker</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装Kubeadm\"><a href=\"#安装Kubeadm\" class=\"headerlink\" title=\"安装Kubeadm\"></a>安装Kubeadm</h2>需要科学上网<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &gt;&#x2F;etc&#x2F;yum.repos.d&#x2F;kubernetes.repo&lt;&lt;EOF</span><br><span class=\"line\">[kubernetes]</span><br><span class=\"line\">name&#x3D;Kubernetes</span><br><span class=\"line\">baseurl&#x3D;https:&#x2F;&#x2F;packages.cloud.google.com&#x2F;yum&#x2F;repos&#x2F;kubernetes-el7-x86_64</span><br><span class=\"line\">enabled&#x3D;1</span><br><span class=\"line\">gpgcheck&#x3D;1</span><br><span class=\"line\">repo_gpgcheck&#x3D;1</span><br><span class=\"line\">gpgkey&#x3D;https:&#x2F;&#x2F;packages.cloud.google.com&#x2F;yum&#x2F;doc&#x2F;yum-key.gpg</span><br><span class=\"line\">        https:&#x2F;&#x2F;packages.cloud.google.com&#x2F;yum&#x2F;doc&#x2F;rpm-package-key.gpg</span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure>\n使用阿里云yum源<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &gt;&#x2F;etc&#x2F;yum.repos.d&#x2F;kubernetes.repo &lt;&lt;EOF</span><br><span class=\"line\">[kubernetes]</span><br><span class=\"line\">name&#x3D;Kubernetes</span><br><span class=\"line\">baseurl&#x3D;http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;yum&#x2F;repos&#x2F;kubernetes-el7-x86_64</span><br><span class=\"line\">enabled&#x3D;1</span><br><span class=\"line\">gpgcheck&#x3D;0</span><br><span class=\"line\">repo_gpgcheck&#x3D;0</span><br><span class=\"line\">gpgkey&#x3D;http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;yum&#x2F;doc&#x2F;yum-key.gpg</span><br><span class=\"line\">        http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;yum&#x2F;doc&#x2F;rpm-package-key.gpg</span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure>\n安装 kubeadm、kubelet、kubectl(阿里云yum源会随官方更新最新版，因此指定版本)<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;安装1.16.9版本</span><br><span class=\"line\">yum -y install kubelet-1.16.9 kubeadm-1.16.9 kubectl-1.16.9</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;查看版本</span><br><span class=\"line\">kubeadm version</span><br><span class=\"line\"></span><br><span class=\"line\">kubeadm version: &amp;version.Info&#123;Major:&quot;1&quot;, Minor:&quot;16&quot;, GitVersion:&quot;v1.16.9&quot;, GitCommit:&quot;a17149e1a189050796ced469dbd78d380f2ed5ef&quot;, GitTreeState:&quot;clean&quot;, BuildDate:&quot;2020-04-16T11:42:30Z&quot;, GoVersion:&quot;go1.13.9&quot;, Compiler:&quot;gc&quot;, Platform:&quot;linux&#x2F;amd64&quot;&#125;</span><br></pre></td></tr></table></figure>\n设置kubelet开机自启<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl enable kubelet</span><br></pre></td></tr></table></figure>\n设置k8s命令自动补全<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install bash-completion</span><br><span class=\"line\">source &#x2F;usr&#x2F;share&#x2F;bash-completion&#x2F;bash_completion</span><br><span class=\"line\">source &lt;(kubectl completion bash)</span><br><span class=\"line\">echo &quot;source &lt;(kubectl completion bash)&quot; &gt;&gt; ~&#x2F;.bashrc</span><br></pre></td></tr></table></figure>\n<h1 id=\"初始化集群\"><a href=\"#初始化集群\" class=\"headerlink\" title=\"初始化集群\"></a>初始化集群</h1><h2 id=\"master节点操作，配置-kubeadm-初始化文件\"><a href=\"#master节点操作，配置-kubeadm-初始化文件\" class=\"headerlink\" title=\"master节点操作，配置 kubeadm 初始化文件\"></a>master节点操作，配置 kubeadm 初始化文件</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &lt;&lt;EOF &gt; .&#x2F;kubeadm-config.yaml</span><br><span class=\"line\">apiVersion: kubeadm.k8s.io&#x2F;v1beta2</span><br><span class=\"line\">kind: ClusterConfiguration</span><br><span class=\"line\">kubernetesVersion: v1.16.9\t</span><br><span class=\"line\">imageRepository: registry.cn-hangzhou.aliyuncs.com&#x2F;google_containers</span><br><span class=\"line\"></span><br><span class=\"line\">#master地址</span><br><span class=\"line\">controlPlaneEndpoint: &quot;192.168.9.10:6443&quot;\t</span><br><span class=\"line\">networking:</span><br><span class=\"line\">  serviceSubnet: &quot;10.96.0.0&#x2F;16&quot;\t</span><br><span class=\"line\"></span><br><span class=\"line\">  #k8s容器组所在的网段</span><br><span class=\"line\">  podSubnet: &quot;10.20.0.1&#x2F;16&quot;\t</span><br><span class=\"line\">  dnsDomain: &quot;cluster.local&quot;</span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure>\n初始化master<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#kubeadm init --config&#x3D;kubeadm-config.yaml --upload-certs</span><br><span class=\"line\">完整输出结果</span><br><span class=\"line\">kubeadm init --config&#x3D;kubeadm-config.yaml</span><br><span class=\"line\">[init] Using Kubernetes version: v1.16.9</span><br><span class=\"line\">[preflight] Running pre-flight checks</span><br><span class=\"line\">[preflight] Pulling images required for setting up a Kubernetes cluster</span><br><span class=\"line\">[preflight] This might take a minute or two, depending on the speed of your internet connection</span><br><span class=\"line\">[preflight] You can also perform this action in beforehand using &#39;kubeadm config images pull&#39;</span><br><span class=\"line\">[kubelet-start] Writing kubelet environment file with flags to file &quot;&#x2F;var&#x2F;lib&#x2F;kubelet&#x2F;kubeadm-flags.env&quot;</span><br><span class=\"line\">[kubelet-start] Writing kubelet configuration to file &quot;&#x2F;var&#x2F;lib&#x2F;kubelet&#x2F;config.yaml&quot;</span><br><span class=\"line\">[kubelet-start] Activating the kubelet service</span><br><span class=\"line\">[certs] Using certificateDir folder &quot;&#x2F;etc&#x2F;kubernetes&#x2F;pki&quot;</span><br><span class=\"line\">[certs] Generating &quot;ca&quot; certificate and key</span><br><span class=\"line\">[certs] Generating &quot;apiserver&quot; certificate and key</span><br><span class=\"line\">[certs] apiserver serving cert is signed for DNS names [k8s-master kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local] and IPs [10.96.0.1 192.168.9.10 192.168.9.10]</span><br><span class=\"line\">[certs] Generating &quot;apiserver-kubelet-client&quot; certificate and key</span><br><span class=\"line\">[certs] Generating &quot;front-proxy-ca&quot; certificate and key</span><br><span class=\"line\">[certs] Generating &quot;front-proxy-client&quot; certificate and key</span><br><span class=\"line\">[certs] Generating &quot;etcd&#x2F;ca&quot; certificate and key</span><br><span class=\"line\">[certs] Generating &quot;etcd&#x2F;server&quot; certificate and key</span><br><span class=\"line\">[certs] etcd&#x2F;server serving cert is signed for DNS names [k8s-master localhost] and IPs [192.168.9.10 127.0.0.1 ::1]</span><br><span class=\"line\">[certs] Generating &quot;etcd&#x2F;peer&quot; certificate and key</span><br><span class=\"line\">[certs] etcd&#x2F;peer serving cert is signed for DNS names [k8s-master localhost] and IPs [192.168.9.10 127.0.0.1 ::1]</span><br><span class=\"line\">[certs] Generating &quot;etcd&#x2F;healthcheck-client&quot; certificate and key</span><br><span class=\"line\">[certs] Generating &quot;apiserver-etcd-client&quot; certificate and key</span><br><span class=\"line\">[certs] Generating &quot;sa&quot; key and public key</span><br><span class=\"line\">[kubeconfig] Using kubeconfig folder &quot;&#x2F;etc&#x2F;kubernetes&quot;</span><br><span class=\"line\">[kubeconfig] Writing &quot;admin.conf&quot; kubeconfig file</span><br><span class=\"line\">[kubeconfig] Writing &quot;kubelet.conf&quot; kubeconfig file</span><br><span class=\"line\">[kubeconfig] Writing &quot;controller-manager.conf&quot; kubeconfig file</span><br><span class=\"line\">[kubeconfig] Writing &quot;scheduler.conf&quot; kubeconfig file</span><br><span class=\"line\">[control-plane] Using manifest folder &quot;&#x2F;etc&#x2F;kubernetes&#x2F;manifests&quot;</span><br><span class=\"line\">[control-plane] Creating static Pod manifest for &quot;kube-apiserver&quot;</span><br><span class=\"line\">[control-plane] Creating static Pod manifest for &quot;kube-controller-manager&quot;</span><br><span class=\"line\">[control-plane] Creating static Pod manifest for &quot;kube-scheduler&quot;</span><br><span class=\"line\">[etcd] Creating static Pod manifest for local etcd in &quot;&#x2F;etc&#x2F;kubernetes&#x2F;manifests&quot;</span><br><span class=\"line\">[wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory &quot;&#x2F;etc&#x2F;kubernetes&#x2F;manifests&quot;. This can take up to 4m0s</span><br><span class=\"line\">[apiclient] All control plane components are healthy after 16.501777 seconds</span><br><span class=\"line\">[upload-config] Storing the configuration used in ConfigMap &quot;kubeadm-config&quot; in the &quot;kube-system&quot; Namespace</span><br><span class=\"line\">[kubelet] Creating a ConfigMap &quot;kubelet-config-1.16&quot; in namespace kube-system with the configuration for the kubelets in the cluster</span><br><span class=\"line\">[upload-certs] Skipping phase. Please see --upload-certs</span><br><span class=\"line\">[mark-control-plane] Marking the node k8s-master as control-plane by adding the label &quot;node-role.kubernetes.io&#x2F;master&#x3D;&#39;&#39;&quot;</span><br><span class=\"line\">[mark-control-plane] Marking the node k8s-master as control-plane by adding the taints [node-role.kubernetes.io&#x2F;master:NoSchedule]</span><br><span class=\"line\">[bootstrap-token] Using token: px979r.mphk9ee5ya8fgy44</span><br><span class=\"line\">[bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles</span><br><span class=\"line\">[bootstrap-token] configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials</span><br><span class=\"line\">[bootstrap-token] configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token</span><br><span class=\"line\">[bootstrap-token] configured RBAC rules to allow certificate rotation for all node client certificates in the cluster</span><br><span class=\"line\">[bootstrap-token] Creating the &quot;cluster-info&quot; ConfigMap in the &quot;kube-public&quot; namespace</span><br><span class=\"line\">[addons] Applied essential addon: CoreDNS</span><br><span class=\"line\">[addons] Applied essential addon: kube-proxy</span><br><span class=\"line\"></span><br><span class=\"line\">Your Kubernetes control-plane has initialized successfully!</span><br><span class=\"line\"></span><br><span class=\"line\">To start using your cluster, you need to run the following as a regular user:</span><br><span class=\"line\"></span><br><span class=\"line\">  mkdir -p $HOME&#x2F;.kube</span><br><span class=\"line\">  sudo cp -i &#x2F;etc&#x2F;kubernetes&#x2F;admin.conf $HOME&#x2F;.kube&#x2F;config</span><br><span class=\"line\">  sudo chown $(id -u):$(id -g) $HOME&#x2F;.kube&#x2F;config</span><br><span class=\"line\"></span><br><span class=\"line\">You should now deploy a pod network to the cluster.</span><br><span class=\"line\">Run &quot;kubectl apply -f [podnetwork].yaml&quot; with one of the options listed at:</span><br><span class=\"line\">  https:&#x2F;&#x2F;kubernetes.io&#x2F;docs&#x2F;concepts&#x2F;cluster-administration&#x2F;addons&#x2F;</span><br><span class=\"line\"></span><br><span class=\"line\">You can now join any number of control-plane nodes by copying certificate authorities </span><br><span class=\"line\">and service account keys on each node and then running the following as root:</span><br><span class=\"line\"></span><br><span class=\"line\">  kubeadm join 192.168.9.10:6443 --token px979r.mphk9ee5ya8fgy44 \\</span><br><span class=\"line\">    --discovery-token-ca-cert-hash sha256:5e7c7cd1cc1f86c0761e54b9380de22968b6b221cb98939c14ab2942223f6f51 \\</span><br><span class=\"line\">    --control-plane \t  </span><br><span class=\"line\"></span><br><span class=\"line\">Then you can join any number of worker nodes by running the following on each as root:</span><br><span class=\"line\"></span><br><span class=\"line\">kubeadm join 192.168.9.10:6443 --token px979r.mphk9ee5ya8fgy44 \\</span><br><span class=\"line\">    --discovery-token-ca-cert-hash sha256:5e7c7cd1cc1f86c0761e54b9380de22968b6b221cb98939c14ab2942223f6f51 </span><br></pre></td></tr></table></figure>\n拷贝 kubeconfig 文件<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;这里的路径为&#x2F;root</span><br><span class=\"line\">mkdir -p $HOME&#x2F;.kube</span><br><span class=\"line\">cp -i &#x2F;etc&#x2F;kubernetes&#x2F;admin.conf $HOME&#x2F;.kube&#x2F;config</span><br><span class=\"line\">chown $(id -u):$(id -g) $HOME&#x2F;.kube&#x2F;config</span><br></pre></td></tr></table></figure>\n<h2 id=\"master添加节点\"><a href=\"#master添加节点\" class=\"headerlink\" title=\"master添加节点\"></a>master添加节点</h2>node1和node2相同操作<br>将master节点上的$HOME/.kube/config 文件拷贝到node节点对应的文件中<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.创建目录，这里的路径为&#x2F;root</span><br><span class=\"line\">mkdir -p $HOME&#x2F;.kube </span><br><span class=\"line\"></span><br><span class=\"line\">2.把master节点上的config文件拷贝到node1和node2的$HOME&#x2F;.kube</span><br><span class=\"line\">scp k8s-master1:~&#x2F;.kube&#x2F;config $HOME&#x2F;.kube</span><br><span class=\"line\"></span><br><span class=\"line\">3.修改权限</span><br><span class=\"line\">chown $(id -u):$(id -g) $HOME&#x2F;.kube&#x2F;config</span><br></pre></td></tr></table></figure>\n将node1和node2加入到集群中<br>这里需要用到2.2中初始化master最后生成的token和sha256值<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#kubeadm join 192.168.9.10:6443 --token px979r.mphk9ee5ya8fgy44     --discovery-token-ca-cert-hash sha256:5e7c7cd1cc1f86c0761e54b9380de22968b6b221cb98939c14ab2942223f6f51 </span><br><span class=\"line\">  </span><br><span class=\"line\">输出结果  </span><br><span class=\"line\">[preflight] Running pre-flight checks</span><br><span class=\"line\">\t[WARNING IsDockerSystemdCheck]: detected &quot;cgroupfs&quot; as the Docker cgroup driver. The recommended driver is &quot;systemd&quot;. Please follow the guide at https:&#x2F;&#x2F;kubernetes.io&#x2F;docs&#x2F;setup&#x2F;cri&#x2F;</span><br><span class=\"line\">[preflight] Reading configuration from the cluster...</span><br><span class=\"line\">[preflight] FYI: You can look at this config file with &#39;kubectl -n kube-system get cm kubeadm-config -oyaml&#39;</span><br><span class=\"line\">[kubelet-start] Downloading configuration for the kubelet from the &quot;kubelet-config-1.16&quot; ConfigMap in the kube-system namespace</span><br><span class=\"line\">[kubelet-start] Writing kubelet configuration to file &quot;&#x2F;var&#x2F;lib&#x2F;kubelet&#x2F;config.yaml&quot;</span><br><span class=\"line\">[kubelet-start] Writing kubelet environment file with flags to file &quot;&#x2F;var&#x2F;lib&#x2F;kubelet&#x2F;kubeadm-flags.env&quot;</span><br><span class=\"line\">[kubelet-start] Activating the kubelet service</span><br><span class=\"line\">[kubelet-start] Waiting for the kubelet to perform the TLS Bootstrap...</span><br><span class=\"line\"></span><br><span class=\"line\">This node has joined the cluster:</span><br><span class=\"line\">* Certificate signing request was sent to apiserver and a response was received.</span><br><span class=\"line\">* The Kubelet was informed of the new secure connection details.</span><br><span class=\"line\"></span><br><span class=\"line\">Run &#39;kubectl get nodes&#39; on the control-plane to see this node join the cluster.</span><br></pre></td></tr></table></figure>\n如果忘记了token和sha256值，可以在master节点使用如下命令查看<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;查看token</span><br><span class=\"line\">#kubeadm token list</span><br><span class=\"line\">TOKEN                     TTL       EXPIRES                     USAGES                   DESCRIPTION   EXTRA GROUPS</span><br><span class=\"line\">px979r.mphk9ee5ya8fgy44   20h       2020-03-18T13:49:48+08:00   authentication,signing   &lt;none&gt;        system:bootstrappers:kubeadm:default-node-token</span><br><span class=\"line\">            </span><br><span class=\"line\">            </span><br><span class=\"line\">&#x2F;&#x2F;查看sha256</span><br><span class=\"line\">#openssl x509 -pubkey -in &#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;ca.crt | openssl rsa -pubin -outform der 2&gt;&#x2F;dev&#x2F;null | openssl dgst -sha256 -hex | sed &#39;s&#x2F;^.* &#x2F;&#x2F;&#39;</span><br><span class=\"line\">5e7c7cd1cc1f86c0761e54b9380de22968b6b221cb98939c14ab2942223f6f51</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;同时查看token和sha256</span><br><span class=\"line\">#kubeadm token create --print-join-command</span><br><span class=\"line\">kubeadm join 192.168.9.10:6443 --token 9b28zg.oyt0kvvpmtrem4bg     --discovery-token-ca-cert-hash sha256:5e7c7cd1cc1f86c0761e54b9380de22968b6b221cb98939c14ab2942223f6f51</span><br></pre></td></tr></table></figure>\nmaster节点查看node，发现状态都是NotReady，因为还没有安装网络插件，这里我们安装calio官方插件文档<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl get nodes</span><br><span class=\"line\">NAME         STATUS     ROLES    AGE     VERSION</span><br><span class=\"line\">k8s-master   NotReady   master   19m     v1.16.9</span><br><span class=\"line\">k8s-node1    NotReady   &lt;none&gt;   4m10s   v1.16.9</span><br><span class=\"line\">k8s-node2    NotReady   &lt;none&gt;   4m3s    v1.16.9</span><br></pre></td></tr></table></figure>\n<h2 id=\"master节点安装网络插件calio\"><a href=\"#master节点安装网络插件calio\" class=\"headerlink\" title=\"master节点安装网络插件calio\"></a>master节点安装网络插件calio</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;下载文件</span><br><span class=\"line\">wget https:&#x2F;&#x2F;docs.projectcalico.org&#x2F;v3.8&#x2F;manifests&#x2F;calico.yaml</span><br><span class=\"line\">  </span><br><span class=\"line\">将文件中的620行改为如下，因为在上边kubeadm-config.yaml配置文件中指定了容器组IP  620行</span><br><span class=\"line\">value: &quot;10.20.0.1&#x2F;16&quot;</span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;修改完成后安装calico网络插件</span><br><span class=\"line\">kubectl apply -f calico.yaml</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;安装完成后稍等一会查看pods状态</span><br><span class=\"line\">kubectl get pods -n kube-system</span><br><span class=\"line\"></span><br><span class=\"line\">NAME                                      READY   STATUS    RESTARTS   AGE</span><br><span class=\"line\">calico-kube-controllers-dc6cb64cb-8sh59   1&#x2F;1     Running   0          6m22s</span><br><span class=\"line\">calico-node-89s9k                         1&#x2F;1     Running   0          6m22s</span><br><span class=\"line\">calico-node-dkt7w                         1&#x2F;1     Running   0          6m22s</span><br><span class=\"line\">calico-node-tgg2h                         1&#x2F;1     Running   0          6m22s</span><br><span class=\"line\">coredns-667f964f9b-7hrj9                  1&#x2F;1     Running   0          33m</span><br><span class=\"line\">coredns-667f964f9b-8q7sh                  1&#x2F;1     Running   0          33m</span><br><span class=\"line\">etcd-k8s-master                           1&#x2F;1     Running   0          33m</span><br><span class=\"line\">kube-apiserver-k8s-master                 1&#x2F;1     Running   0          32m</span><br><span class=\"line\">kube-controller-manager-k8s-master        1&#x2F;1     Running   0          33m</span><br><span class=\"line\">kube-proxy-b2r5d                          1&#x2F;1     Running   0          12m</span><br><span class=\"line\">kube-proxy-nd982                          1&#x2F;1     Running   0          11m</span><br><span class=\"line\">kube-proxy-zh6cz                          1&#x2F;1     Running   0          33m</span><br><span class=\"line\">kube-scheduler-k8s-master                 1&#x2F;1     Running   0          32m</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;查看node状态</span><br><span class=\"line\">[root@k8s-master ~]# kubectl get nodes </span><br><span class=\"line\">NAME         STATUS   ROLES    AGE     VERSION</span><br><span class=\"line\">k8s-master   Ready    master   31m     v1.16.9</span><br><span class=\"line\">k8s-node1    Ready    &lt;none&gt;   9m46s   v1.16.9</span><br><span class=\"line\">k8s-node2    Ready    &lt;none&gt;   9m22s   v1.16.9</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装Dashboard-可选\"><a href=\"#安装Dashboard-可选\" class=\"headerlink\" title=\"安装Dashboard(可选)\"></a>安装Dashboard(可选)</h2>下载文件及修改内容</li>\n</ul>\n<p><a href=\"https://github.com/kubernetes/dashboard/releases\">这里查看dashboard对应的k8s版本</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;下载文件  v2.0.0-rc3是中文版本，beta8是英文版本</span><br><span class=\"line\">wget https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;kubernetes&#x2F;dashboard&#x2F;v2.0.0-beta8&#x2F;aio&#x2F;deploy&#x2F;recommended.yaml</span><br><span class=\"line\"></span><br><span class=\"line\">wget https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;kubernetes&#x2F;dashboard&#x2F;v2.0.0-rc3&#x2F;aio&#x2F;deploy&#x2F;recommended.yaml  </span><br><span class=\"line\">  </span><br><span class=\"line\">&#x2F;&#x2F;修改Service为NodePort类型</span><br><span class=\"line\">42行下增加一行</span><br><span class=\"line\">nodePort: 30001</span><br><span class=\"line\">  </span><br><span class=\"line\">44行下增加一行</span><br><span class=\"line\">type: NodePort</span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;原先内容</span><br><span class=\"line\">spec:</span><br><span class=\"line\">  ports:</span><br><span class=\"line\">    - port: 443</span><br><span class=\"line\">      targetPort: 8443</span><br><span class=\"line\">  selector:</span><br><span class=\"line\">    k8s-app: kubernetes-dashboard</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;修改后内容</span><br><span class=\"line\">spec:</span><br><span class=\"line\">  ports:</span><br><span class=\"line\">    - port: 443</span><br><span class=\"line\">      targetPort: 8443</span><br><span class=\"line\">      nodePort: 30001   #增加，指定nodeport端口</span><br><span class=\"line\">  selector:</span><br><span class=\"line\">    k8s-app: kubernetes-dashboard</span><br><span class=\"line\">  type: NodePort\t\t#增加，修改类型为nodeport</span><br></pre></td></tr></table></figure>\n<p>部署dashboard</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl apply -f recommended.yaml</span><br></pre></td></tr></table></figure>\n<p>查看dashboard的运行状态及外网访问端口</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;查看dashboard运行状态</span><br><span class=\"line\">#kubectl get pods -n kubernetes-dashboard -l k8s-app&#x3D;kubernetes-dashboard</span><br><span class=\"line\">NAME                                    READY   STATUS    RESTARTS   AGE</span><br><span class=\"line\">kubernetes-dashboard-5996555fd8-2ppc5   1&#x2F;1     Running   0          8m16s</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;查看dashboard外网访问端口，命名空间为kubernetes-dashboard</span><br><span class=\"line\">#kubectl get svc -n kubernetes-dashboard -l k8s-app&#x3D;kubernetes-dashboard</span><br><span class=\"line\">kubectl get svc -n kubernetes-dashboard -l k8s-app&#x3D;kubernetes-dashboard</span><br><span class=\"line\">NAME                   TYPE       CLUSTER-IP      EXTERNAL-IP   PORT(S)         AGE</span><br><span class=\"line\">kubernetes-dashboard   NodePort   10.96.142.172   &lt;none&gt;        443:30001&#x2F;TCP   8m37s</span><br></pre></td></tr></table></figure>\n<p>通过上边的30001端口访问dashboard，注意是https</p>\n<blockquote>\n<p>k8s1.16.9这个版本中，使用的dashboard版本是2.0.0-beta8，只有火狐浏览器可以访问，其余浏览器都不能访问，会报错</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">您的连接不是私密连接</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>使用火狐浏览器访问，由于 dashboard 默认是自建的 https 证书，该证书是不受浏览器信任的，所以我们需要强制跳转就可以了</p>\n</blockquote>\n<p>然后创建一个具有全局所有权限的用户来登录Dashboard</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;编辑admin.yaml文件</span><br><span class=\"line\">cat &gt; admin.yaml &lt;&lt;EOF</span><br><span class=\"line\">kind: ClusterRoleBinding</span><br><span class=\"line\">apiVersion: rbac.authorization.k8s.io&#x2F;v1beta1</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: admin</span><br><span class=\"line\">  annotations:</span><br><span class=\"line\">    rbac.authorization.kubernetes.io&#x2F;autoupdate: &quot;true&quot;</span><br><span class=\"line\">roleRef:</span><br><span class=\"line\">  kind: ClusterRole</span><br><span class=\"line\">  name: cluster-admin</span><br><span class=\"line\">  apiGroup: rbac.authorization.k8s.io</span><br><span class=\"line\">subjects:</span><br><span class=\"line\">- kind: ServiceAccount</span><br><span class=\"line\">  name: admin</span><br><span class=\"line\">  namespace: kube-system</span><br><span class=\"line\"></span><br><span class=\"line\">---</span><br><span class=\"line\">apiVersion: v1</span><br><span class=\"line\">kind: ServiceAccount</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: admin</span><br><span class=\"line\">  namespace: kube-system</span><br><span class=\"line\">  labels:</span><br><span class=\"line\">    kubernetes.io&#x2F;cluster-service: &quot;true&quot;</span><br><span class=\"line\">    addonmanager.kubernetes.io&#x2F;mode: Reconcile</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;直接创建</span><br><span class=\"line\">kubectl apply -f admin.yaml</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;查看token</span><br><span class=\"line\">kubectl get secret -n kube-system|grep admin-token</span><br><span class=\"line\"></span><br><span class=\"line\">admin-token-j7sfh                                kubernetes.io&#x2F;service-account-token   3      23s</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;获取base64解码后的字符串，注意需要用到上边命令查看到的token，会生成很长的一串字符串</span><br><span class=\"line\">kubectl get secret admin-token-j7sfh -o jsonpath&#x3D;&#123;.data.token&#125; -n kube-system |base64 -d</span><br><span class=\"line\"></span><br><span class=\"line\">#直接用这条命令搞定</span><br><span class=\"line\">kubectl get secret &#96;kubectl get secret -n kube-system|grep admin-token|awk &#39;&#123;print $1&#125;&#39;&#96; -o jsonpath&#x3D;&#123;.data.token&#125; -n kube-system |base64 -d &amp;&amp; echo</span><br></pre></td></tr></table></figure>\n\n<p>到此，使用kubeadm安装k8s 1.16.9完成！！！</p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><p><a href=\"https://kubesphere.com.cn/forum/d/1272-kubeadm-k8s-kubesphere-2-1-1\">在 Kubernetes集群中 安装 KubeSphere2.1</a></p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"ckgkk27ru0001kcv028qlbix6","tag_id":"ckgkk27s50003kcv0f3iq08mb","_id":"ckgkk27sm000ckcv0frjbfovp"},{"post_id":"ckgkk27ru0001kcv028qlbix6","tag_id":"ckgkk27se0007kcv0f18lb85h","_id":"ckgkk27sp000ekcv0c9tz9ht2"},{"post_id":"ckgkk27si0009kcv0c5np0b9s","tag_id":"ckgkk27se0007kcv0f18lb85h","_id":"ckgkk27sr000hkcv0fdpo3lya"},{"post_id":"ckgkk27sx000lkcv013ls3fg3","tag_id":"ckgkk27s50003kcv0f3iq08mb","_id":"ckgkk27t4000okcv09s0n1tq5"},{"post_id":"ckgkk27sx000lkcv013ls3fg3","tag_id":"ckgkk27se0007kcv0f18lb85h","_id":"ckgkk27t6000qkcv004mdfe3k"},{"post_id":"ckgkk27s10002kcv06pk16xxf","tag_id":"ckgkk27sj000akcv01yq1175o","_id":"ckgkk27t8000tkcv0hxfzgxq3"},{"post_id":"ckgkk27s10002kcv06pk16xxf","tag_id":"ckgkk27sp000fkcv0a51t3uj6","_id":"ckgkk27ta000vkcv04swu9q0v"},{"post_id":"ckgkk27s10002kcv06pk16xxf","tag_id":"ckgkk27su000jkcv0cmgwa9th","_id":"ckgkk27tc000ykcv0hdak61y6"},{"post_id":"ckgkk27ta000wkcv04wl71s17","tag_id":"ckgkk27se0007kcv0f18lb85h","_id":"ckgkk27te0010kcv0bikp9crq"},{"post_id":"ckgkk27s80004kcv0ddpr6hqw","tag_id":"ckgkk27sj000akcv01yq1175o","_id":"ckgkk27tj0013kcv0bagbhtpz"},{"post_id":"ckgkk27s80004kcv0ddpr6hqw","tag_id":"ckgkk27sp000fkcv0a51t3uj6","_id":"ckgkk27tl0015kcv0f41a2vx2"},{"post_id":"ckgkk27s80004kcv0ddpr6hqw","tag_id":"ckgkk27su000jkcv0cmgwa9th","_id":"ckgkk27to0018kcv04rae9180"},{"post_id":"ckgkk27sa0005kcv0cpn14463","tag_id":"ckgkk27tf0012kcv07rklbpp6","_id":"ckgkk27tz001dkcv05a1kex01"},{"post_id":"ckgkk27sa0005kcv0cpn14463","tag_id":"ckgkk27tn0017kcv0144i7vnr","_id":"ckgkk27u1001fkcv01jejakjl"},{"post_id":"ckgkk27sd0006kcv089pv4tql","tag_id":"ckgkk27se0007kcv0f18lb85h","_id":"ckgkk27u6001kkcv009cxc63p"},{"post_id":"ckgkk27sd0006kcv089pv4tql","tag_id":"ckgkk27u1001gkcv09xvh40t6","_id":"ckgkk27u7001lkcv0bn9fabhs"},{"post_id":"ckgkk27sg0008kcv01wez1bof","tag_id":"ckgkk27se0007kcv0f18lb85h","_id":"ckgkk27u8001okcv02ct69zjh"},{"post_id":"ckgkk27sg0008kcv01wez1bof","tag_id":"ckgkk27u5001jkcv02q6phi42","_id":"ckgkk27u9001pkcv0cmgza652"},{"post_id":"ckgkk27sg0008kcv01wez1bof","tag_id":"ckgkk27u1001gkcv09xvh40t6","_id":"ckgkk27u9001rkcv00257da55"},{"post_id":"ckgkk27sk000bkcv0bq9f4tl5","tag_id":"ckgkk27u8001nkcv0gd73b2ih","_id":"ckgkk27ua001skcv0ajrkhqz8"},{"post_id":"ckgkk27sm000dkcv07nq0bbtr","tag_id":"ckgkk27su000jkcv0cmgwa9th","_id":"ckgkk27ub001ukcv03o8y4psk"},{"post_id":"ckgkk27sq000gkcv043j09q1k","tag_id":"ckgkk27ua001tkcv04x4n8j0v","_id":"ckgkk27ud001wkcv038ix7ang"},{"post_id":"ckgkk27ss000ikcv0fay4etey","tag_id":"ckgkk27ua001tkcv04x4n8j0v","_id":"ckgkk27ue001ykcv0aio612bt"},{"post_id":"ckgkk27sv000kkcv01e5a0s26","tag_id":"ckgkk27ud001xkcv06x96a06g","_id":"ckgkk27uf0020kcv02b1a0ghw"},{"post_id":"ckgkk27sz000mkcv08v6ceafp","tag_id":"ckgkk27ue001zkcv0fvr25lnv","_id":"ckgkk27ug0022kcv0hdmh5h53"},{"post_id":"ckgkk27t4000pkcv08zv9fmzd","tag_id":"ckgkk27tf0012kcv07rklbpp6","_id":"ckgkk27uh0024kcv0c2pl1sfh"},{"post_id":"ckgkk27t6000rkcv0h9oz8rzw","tag_id":"ckgkk27sp000fkcv0a51t3uj6","_id":"ckgkk27uj0027kcv06iro3wj2"},{"post_id":"ckgkk27t6000rkcv0h9oz8rzw","tag_id":"ckgkk27su000jkcv0cmgwa9th","_id":"ckgkk27uj0028kcv05fc3gp1x"},{"post_id":"ckgkk27t6000rkcv0h9oz8rzw","tag_id":"ckgkk27ug0023kcv042bicwwp","_id":"ckgkk27uk002akcv0hivi4n2t"},{"post_id":"ckgkk27t6000rkcv0h9oz8rzw","tag_id":"ckgkk27ua001tkcv04x4n8j0v","_id":"ckgkk27uk002bkcv07w8w8jxg"},{"post_id":"ckgkk27t8000ukcv0ffn56pos","tag_id":"ckgkk27tf0012kcv07rklbpp6","_id":"ckgkk27um002ekcv0dzsf71fa"},{"post_id":"ckgkk27t8000ukcv0ffn56pos","tag_id":"ckgkk27uj0029kcv0bdu69p6k","_id":"ckgkk27um002fkcv0dr5y5gwy"},{"post_id":"ckgkk27t8000ukcv0ffn56pos","tag_id":"ckgkk27uk002ckcv00g8a1g0x","_id":"ckgkk27un002hkcv02i4ge3z5"},{"post_id":"ckgkk27td000zkcv05sag99nt","tag_id":"ckgkk27uj0029kcv0bdu69p6k","_id":"ckgkk27uo002ikcv067qb2w6w"},{"post_id":"ckgkk27te0011kcv0abeaffzp","tag_id":"ckgkk27tf0012kcv07rklbpp6","_id":"ckgkk27ur002mkcv09y0ebthe"},{"post_id":"ckgkk27te0011kcv0abeaffzp","tag_id":"ckgkk27uk002ckcv00g8a1g0x","_id":"ckgkk27us002nkcv06a3cfh7x"},{"post_id":"ckgkk27te0011kcv0abeaffzp","tag_id":"ckgkk27up002kkcv0gvg0c9a7","_id":"ckgkk27us002pkcv0fqevgvlf"},{"post_id":"ckgkk27tj0014kcv0dtiz3het","tag_id":"ckgkk27tf0012kcv07rklbpp6","_id":"ckgkk27uu002rkcv087tw55y8"},{"post_id":"ckgkk27tj0014kcv0dtiz3het","tag_id":"ckgkk27uj0029kcv0bdu69p6k","_id":"ckgkk27uv002skcv06abi8zl9"},{"post_id":"ckgkk27tj0014kcv0dtiz3het","tag_id":"ckgkk27uk002ckcv00g8a1g0x","_id":"ckgkk27uv002ukcv0hmyk1hge"},{"post_id":"ckgkk27tl0016kcv0gd4r1nyt","tag_id":"ckgkk27tf0012kcv07rklbpp6","_id":"ckgkk27uw002vkcv0al679b23"},{"post_id":"ckgkk27tl0016kcv0gd4r1nyt","tag_id":"ckgkk27ue001zkcv0fvr25lnv","_id":"ckgkk27ux002xkcv02ehzb03b"},{"post_id":"ckgkk27to0019kcv03hw34lyy","tag_id":"ckgkk27tf0012kcv07rklbpp6","_id":"ckgkk27ux002ykcv08oc94hhb"},{"post_id":"ckgkk27to0019kcv03hw34lyy","tag_id":"ckgkk27uv002tkcv0eq6i64h8","_id":"ckgkk27uy0030kcv02yhu06y7"},{"post_id":"ckgkk27to0019kcv03hw34lyy","tag_id":"ckgkk27sp000fkcv0a51t3uj6","_id":"ckgkk27uy0031kcv0b93756qb"},{"post_id":"ckgkk27tq001akcv0fc6w59fw","tag_id":"ckgkk27sp000fkcv0a51t3uj6","_id":"ckgkk27uz0033kcv05fp7geuz"},{"post_id":"ckgkk27tq001akcv0fc6w59fw","tag_id":"ckgkk27uw002wkcv0gwvc2irh","_id":"ckgkk27uz0034kcv01k701b20"},{"post_id":"ckgkk27ty001ckcv0g6c24i95","tag_id":"ckgkk27uw002wkcv0gwvc2irh","_id":"ckgkk27v00036kcv0hna8bvem"},{"post_id":"ckgkk27ty001ckcv0g6c24i95","tag_id":"ckgkk27sp000fkcv0a51t3uj6","_id":"ckgkk27v10037kcv0fon58nui"},{"post_id":"ckgkk27u0001ekcv0fi8s1w3g","tag_id":"ckgkk27uw002wkcv0gwvc2irh","_id":"ckgkk27v10038kcv0ff4p238m"},{"post_id":"ckgkk27u2001hkcv08e8bhzp4","tag_id":"ckgkk27uw002wkcv0gwvc2irh","_id":"ckgkk27v10039kcv09vfv8huu"},{"post_id":"ckgkk27v6003bkcv033x15kpz","tag_id":"ckgkk27tf0012kcv07rklbpp6","_id":"ckgkk27va003dkcv0dzms78u4"},{"post_id":"ckgkk27v6003bkcv033x15kpz","tag_id":"ckgkk27uj0029kcv0bdu69p6k","_id":"ckgkk27vb003ekcv002gb4yl0"},{"post_id":"ckgkk27v6003bkcv033x15kpz","tag_id":"ckgkk27v7003ckcv00arl4sbo","_id":"ckgkk27vb003fkcv0hatbh394"}],"Tag":[{"name":"mongo","_id":"ckgkk27s50003kcv0f3iq08mb"},{"name":"ruby","_id":"ckgkk27se0007kcv0f18lb85h"},{"name":"DataTable","_id":"ckgkk27sj000akcv01yq1175o"},{"name":"web","_id":"ckgkk27sp000fkcv0a51t3uj6"},{"name":"javascript","_id":"ckgkk27su000jkcv0cmgwa9th"},{"name":"linux","_id":"ckgkk27tf0012kcv07rklbpp6"},{"name":"network","_id":"ckgkk27tn0017kcv0144i7vnr"},{"name":"base","_id":"ckgkk27u1001gkcv09xvh40t6"},{"name":"rails","_id":"ckgkk27u5001jkcv02q6phi42"},{"name":"git","_id":"ckgkk27u8001nkcv0gd73b2ih"},{"name":"css","_id":"ckgkk27ua001tkcv04x4n8j0v"},{"name":"projects","_id":"ckgkk27ud001xkcv06x96a06g"},{"name":"docker","_id":"ckgkk27ue001zkcv0fvr25lnv"},{"name":"html","_id":"ckgkk27ug0023kcv042bicwwp"},{"name":"kubernetes","_id":"ckgkk27uj0029kcv0bdu69p6k"},{"name":"debian","_id":"ckgkk27uk002ckcv00g8a1g0x"},{"name":"ubuntu","_id":"ckgkk27up002kkcv0gvg0c9a7"},{"name":"nodejs","_id":"ckgkk27uv002tkcv0eq6i64h8"},{"name":"hexo","_id":"ckgkk27uw002wkcv0gwvc2irh"},{"name":"centos","_id":"ckgkk27v7003ckcv00arl4sbo"}]}}